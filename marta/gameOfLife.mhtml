From: <Saved by Blink>
Snapshot-Content-Location: http://rss.di.fc.ul.pt/tryit/FreeST#
Subject: RSS TryIt
Date: Wed, 23 Dec 2020 20:19:41 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB----"


------MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB----
Content-Type: text/html
Content-ID: <frame-91104737CBB4A3C7E5D077FAB98D7652@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://rss.di.fc.ul.pt/tryit/FreeST#

<!--
LASIGE - Large-Scale Informatics Systems Laboratory, http://lasige.di.fc.ul=
.pt
RSS, http://rss.di.fc.ul.pt
TryIt, http://rss.di.fc.ul.pt/tryit/

Author: C=C3=A9sar Santos
Copyright: RSS, 2015
Version: $Id$
--><!--
LASIGE - Large-Scale Informatics Systems Laboratory, http://lasige.di.fc.ul=
.pt
RSS, http://rss.di.fc.ul.pt
TryIt, http://rss.di.fc.ul.pt/tryit/

Author: C=C3=A9sar Santos
Copyright: RSS, 2015
Version: $Id$
--><!DOCTYPE html><!--[if lt IE 7]>      <html class=3D"no-js lt-ie9 lt-ie8=
 lt-ie7" lang=3D""> <![endif]--><!--[if IE 7]>         <html class=3D"no-js=
 lt-ie9 lt-ie8" lang=3D""> <![endif]--><!--[if IE 8]>         <html class=
=3D"no-js lt-ie9" lang=3D""> <![endif]--><!--[if gt IE 8]><!--><html class=
=3D"no-js" lang=3D""><!--<![endif]--><head><meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3DUTF-8">
   =20
    <meta http-equiv=3D"X-UA-Compatible" content=3D"IE=3Dedge,chrome=3D1">
    <title>RSS TryIt</title>
    <meta name=3D"description" content=3D"">
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1">

    <link rel=3D"stylesheet" href=3D"http://rss.di.fc.ul.pt/tryit/static/cs=
s/bootstrap.min.css">
    <link rel=3D"stylesheet" href=3D"http://rss.di.fc.ul.pt/tryit/static/cs=
s/bootstrap-theme.min.css">
    <link rel=3D"stylesheet" href=3D"http://rss.di.fc.ul.pt/tryit/static/cs=
s/main.css">
    <link href=3D"http://fonts.googleapis.com/css?family=3DOpen+Sans:400,70=
0" rel=3D"stylesheet" type=3D"text/css">
   =20
    <link rel=3D"stylesheet" href=3D"http://rss.di.fc.ul.pt/tryit/static/co=
demirror/lib/codemirror.css">
    <link rel=3D"stylesheet" href=3D"http://rss.di.fc.ul.pt/tryit/static/co=
demirror/theme/neat.css">
    <link rel=3D"stylesheet" href=3D"http://rss.di.fc.ul.pt/tryit/static/cs=
s/prism.css">
    <link rel=3D"stylesheet" href=3D"http://rss.di.fc.ul.pt/tryit/static/cs=
s/prism-line-numbers.css">
    <link rel=3D"stylesheet" href=3D"http://rss.di.fc.ul.pt/tryit/static/cs=
s/tool.css">

    <!--[if lt IE 9]>
        <script src=3D"//html5shiv.googlecode.com/svn/trunk/html5.js"></scr=
ipt>
        <script>window.html5 || document.write('<script src=3D"/tryit/stati=
c/js/vendor/html5shiv.js"><\/script>')</script>
        <![endif]-->
</head>
<body>
<!--[if lt IE 8]>
        <p class=3D"browserupgrade">You are using an <strong>outdated</stro=
ng> browser. Please <a href=3D"http://browsehappy.com/">upgrade your browse=
r</a> to improve your experience.</p>
        <![endif]-->
<div id=3D"body-wrapper">
<div id=3D"backdrop">
    <nav class=3D"navbar navbar-simple navbar-static-top navbar-collapse" r=
ole=3D"navigation">
        <div class=3D"navbar-inner">
            <div class=3D"container">
                <div class=3D"navbar-header">
                    <button type=3D"button" class=3D"navbar-toggle collapse=
d" data-toggle=3D"collapse" data-target=3D"#navbar" aria-expanded=3D"false"=
 aria-controls=3D"navbar">
                        <span class=3D"sr-only">Toggle navigation</span>
                        <span class=3D"icon-bar"></span>
                        <span class=3D"icon-bar"></span>
                        <span class=3D"icon-bar"></span>
                    </button>
                    <!--<a class=3D"navbar-brand logo" href=3D"http://gloss=
.di.fc.ul.pt"><span class=3D"sr-only">RSS</span></a>-->
                </div>
                <div id=3D"navbar" class=3D"navbar-collapse collapse">
                    <ul class=3D"nav navbar-nav navbar-right">
                       =20
    <li class=3D"active"><a href=3D"http://rss.di.fc.ul.pt/tryit/FreeST">Fr=
eeST<span class=3D"sr-only">(current)</span></a></li>

                        <li><a href=3D"http://rss.di.fc.ul.pt/">RSS</a></li=
>
                        <li><a href=3D"http://rss.di.fc.ul.pt/tryit">TryIt<=
/a></li>
                        <li><a href=3D"http://rss.di.fc.ul.pt/tryit/about">=
About</a></li>
                    </ul>
                </div><!--/.navbar-collapse -->
            </div>
        </div>
    </nav>

    <!-- Main jumbotron for a primary marketing message or call to action -=
->
    <div class=3D"jumbotron">
        <div class=3D"container">
           =20

        </div>
    </div>
</div>

<div id=3D"wrapper-row">
    <div id=3D"left-column" class=3D"language-freest column">
        <div id=3D"left-tab-area" class=3D"tab-area">
            <ul>
                <li><a id=3D"tutorial-tab" class=3D"tab left-tab" href=3D"h=
ttp://rss.di.fc.ul.pt/tryit/FreeST#">Tutorial</a></li>
                <li><a id=3D"examples-tab" class=3D"tab left-tab  active-ta=
b" href=3D"http://rss.di.fc.ul.pt/tryit/FreeST#">Examples</a></li>
            </ul>
        </div>
        <div id=3D"left-scroll" class=3D"scroll-area">
       =20
            <div id=3D"tutorial" style=3D"display: none;"><h1>FreeST</h1>

<p><a href=3D"https://arxiv.org/pdf/1904.01284.pdf">FreeST</a> is a concurr=
ent programming language.=20
It is an implementation of the language proposed by=20
<a href=3D"http://www.di.fc.ul.pt/~vv/papers/thiemann.vasconcelos_context-f=
ree-session-types.pdf">Thiemann and Vasconcelos</a>. </p>

<p>FreeST is based on a core functional language with primitives to fork ne=
w threads,=20
create channels and exchange messages along these channels. The powerful ty=
pe system=20
of context-free session types governs the interactions on communication cha=
nnels. </p>

<p>This small tutorial is a gentle introduction to the language, presents s=
ome examples=20
and discusses the validation process. The tutorial is organised as follows:=
 </p>

<p><strong>1)</strong> Notion of kinds - <a href=3D"http://rss.di.fc.ul.pt/=
tryit/FreeST#kinds">Kinding system</a></p>

<p><strong>2)</strong> Syntax of the functional core of the language (simil=
ar to that of Haskell) - <a href=3D"http://rss.di.fc.ul.pt/tryit/FreeST#fun=
c-prog">Functional programming</a></p>

<p><strong>3)</strong> Syntax of context-session types and the primitives f=
or creating new threads and sending/receiving messages on the communication=
 channels - <a href=3D"http://rss.di.fc.ul.pt/tryit/FreeST#st">Programming =
with session types</a></p>

<h2>A FreeST program</h2>

<p>A program is a collection of:</p>

<ul>
<li>Type abbreviations (<code class=3D"  language-freest"><span class=3D"to=
ken keyword">type</span><span class=3D"token comment" spellcheck=3D"true"> =
</span>MyInt<span class=3D"token comment" spellcheck=3D"true"> </span>=3D<s=
pan class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"toke=
n keyword">Int</span></code>)</li>
<li>Data declarations (<code class=3D"  language-freest"><span class=3D"tok=
en keyword">data</span><span class=3D"token comment" spellcheck=3D"true"> <=
/span>List<span class=3D"token comment" spellcheck=3D"true"> </span>=3D<spa=
n class=3D"token comment" spellcheck=3D"true"> </span>Nil<span class=3D"tok=
en comment" spellcheck=3D"true"> </span>|<span class=3D"token comment" spel=
lcheck=3D"true"> </span>Cons<span class=3D"token comment" spellcheck=3D"tru=
e"> </span><span class=3D"token keyword">Int</span><span class=3D"token com=
ment" spellcheck=3D"true"> </span>List</code>)</li>
<li>Function types (<code class=3D"  language-freest">f<span class=3D"token=
 comment" spellcheck=3D"true"> </span>:<span class=3D"token comment" spellc=
heck=3D"true"> </span><span class=3D"token keyword">Int</span><span class=
=3D"token comment" spellcheck=3D"true"> </span>-&gt;<span class=3D"token co=
mment" spellcheck=3D"true"> </span><span class=3D"token keyword">Int</span>=
</code>)</li>
<li>Function/Value declarations (<code class=3D"  language-freest">f<span c=
lass=3D"token comment" spellcheck=3D"true"> </span>x<span class=3D"token co=
mment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spellch=
eck=3D"true"> </span>x<span class=3D"token comment" spellcheck=3D"true"> </=
span>+<span class=3D"token comment" spellcheck=3D"true"> </span>x</code>)</=
li>
</ul>

<p>The function <code class=3D"  language-freest">main</code> runs the prog=
ram and its final result is printed as the result of the program.</p>

<h2><a name=3D"kinds"></a>Kinding system</h2>

<p>The reason why FreeST requires kinding is on polymorphism and not on con=
text-free session types.</p>

<p>The kinding system validates whether a type is well-formed or not. Kinds=
 are pairs composed of a prekind and a multiplicity.</p>

<ul>
<li>Prekinds distinguish functional types (<code class=3D"  language-freest=
">T</code>), from session types (<code class=3D"  language-freest">S</code>=
).</li>
<li>Multiplicities control the number of times a value may be used in a giv=
en context: exactly one (linear <code class=3D"  language-freest">L</code>)=
, or zero or more (unrestricted <code class=3D"  language-freest">U</code>)=
</li>
</ul>

<p>Pairs of prekinds and multiplicities are in the following ordering relat=
ion:</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-plain"><code class=3D"no-wrapping  language-plain">   TL
 /    \
TU    SL
 \    /
   SU
</code></pre></div>
               =20
            </div>
       =20
<h2><a name=3D"func-prog"></a>Functional programming</h2>

<h3>Functional types and primitive functions</h3>

<p>The functional types are:</p>

<ul>
<li>Basic types: (<code class=3D"  language-freest"><span class=3D"token ke=
yword">Int</span></code>, <code class=3D"  language-freest"><span class=3D"=
token keyword">Bool</span></code>, <code class=3D"  language-freest"><span =
class=3D"token keyword">Char</span></code>, <code class=3D"  language-frees=
t">()</code>) with kind <code class=3D"  language-freest"><span class=3D"to=
ken keyword">TU</span></code></li>
<li>Unrestricted functions: <code class=3D"  language-freest">T<span class=
=3D"token number">1</span><span class=3D"token comment" spellcheck=3D"true"=
> </span>-&gt;<span class=3D"token comment" spellcheck=3D"true"> </span>T<s=
pan class=3D"token number">2</span></code> with kind <code class=3D"  langu=
age-freest"><span class=3D"token keyword">TU</span></code></li>
<li>Linear functions: <code class=3D"  language-freest">T<span class=3D"tok=
en number">1</span><span class=3D"token comment" spellcheck=3D"true"> </spa=
n>-o<span class=3D"token comment" spellcheck=3D"true"> </span>T<span class=
=3D"token number">2</span></code> with kind <code class=3D"  language-frees=
t"><span class=3D"token keyword">TL</span></code></li>
<li>Pairs: <code class=3D"  language-freest">(T<span class=3D"token number"=
>1</span>,<span class=3D"token comment" spellcheck=3D"true"> </span>T<span =
class=3D"token number">2</span>)</code> of kind <code class=3D"  language-f=
reest"><span class=3D"token keyword">TU</span></code> or <code class=3D"  l=
anguage-freest"><span class=3D"token keyword">TL</span></code> depending on=
 the kinds of <code class=3D"  language-freest">T<span class=3D"token numbe=
r">1</span></code> and <code class=3D"  language-freest">T<span class=3D"to=
ken number">2</span></code>.</li>
</ul>

<p>Printing basic values:</p>

<ul>
<li><code class=3D"  language-freest">printInt<span class=3D"token comment"=
 spellcheck=3D"true"> </span>:<span class=3D"token comment" spellcheck=3D"t=
rue"> </span><span class=3D"token keyword">Int</span><span class=3D"token c=
omment" spellcheck=3D"true"> </span>-&gt;<span class=3D"token comment" spel=
lcheck=3D"true"> </span>()</code></li>
<li><code class=3D"  language-freest">printBool<span class=3D"token comment=
" spellcheck=3D"true"> </span>:<span class=3D"token comment" spellcheck=3D"=
true"> </span><span class=3D"token keyword">Bool</span><span class=3D"token=
 comment" spellcheck=3D"true"> </span>-&gt;<span class=3D"token comment" sp=
ellcheck=3D"true"> </span>()</code></li>
<li><code class=3D"  language-freest">printChar<span class=3D"token comment=
" spellcheck=3D"true"> </span>:<span class=3D"token comment" spellcheck=3D"=
true"> </span><span class=3D"token keyword">Char</span><span class=3D"token=
 comment" spellcheck=3D"true"> </span>-&gt;<span class=3D"token comment" sp=
ellcheck=3D"true"> </span>()</code></li>
<li><code class=3D"  language-freest">printUnit<span class=3D"token comment=
" spellcheck=3D"true"> </span>:<span class=3D"token comment" spellcheck=3D"=
true"> </span>()<span class=3D"token comment" spellcheck=3D"true"> </span>-=
&gt;<span class=3D"token comment" spellcheck=3D"true"> </span>()</code></li=
>
</ul>

<p>and also, the Ln versions: <code class=3D"  language-freest">printIntLn<=
/code>, <code class=3D"  language-freest">printBoolLn</code>, <code class=
=3D"  language-freest">printCharLn</code>, and <code class=3D"  language-fr=
eest">printUnitLn</code></p>

<p>Primitive operators:</p>

<ul>
<li><code class=3D"  language-freest">=3D=3D</code>, <code class=3D"  langu=
age-freest">/=3D</code></li>
<li><code class=3D"  language-freest">&lt;</code>, <code class=3D"  languag=
e-freest">&lt;=3D</code>, <code class=3D"  language-freest">&gt;=3D</code>,=
 <code class=3D"  language-freest">&gt;</code></li>
<li><code class=3D"  language-freest">+</code>, <code class=3D"  language-f=
reest">-</code>, <code class=3D"  language-freest">*</code>, <code class=3D=
"  language-freest">/</code></li>
<li><code class=3D"  language-freest">-</code>, <code class=3D"  language-f=
reest">not</code></li>
<li><code class=3D"  language-freest">&amp;&amp;</code>, <code class=3D"  l=
anguage-freest">||</code></li>
<li><code class=3D"  language-freest">mod</code>, <code class=3D"  language=
-freest">rem</code>, <code class=3D"  language-freest">div</code>, <code cl=
ass=3D"  language-freest">negate</code></li>
<li><code class=3D"  language-freest">ord</code>, <code class=3D"  language=
-freest">chr</code></li>
</ul>

<h3>Polymorphism</h3>

<p>Polymorphic variables are introduced solely by the keyword <code class=
=3D"  language-freest"><span class=3D"token keyword">forall</span></code>. =
</p>

<p>For example, the type of the polymorphic function identity would be as f=
ollows:</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest">id<span=
 class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D"token =
comment" spellcheck=3D"true"> </span><span class=3D"token keyword">forall</=
span><span class=3D"token comment" spellcheck=3D"true"> </span>a<span class=
=3D"token comment" spellcheck=3D"true"> </span>=3D&gt;<span class=3D"token =
comment" spellcheck=3D"true"> </span>a<span class=3D"token comment" spellch=
eck=3D"true"> </span>-&gt;<span class=3D"token comment" spellcheck=3D"true"=
> </span>a
<span class=3D"line-numbers-rows"><span></span></span></code></pre></div>
               =20
            </div>
       =20
<p>a function that takes a value of type <code class=3D"  language-freest">=
a</code> and returns a value of the same type.</p>

<h3>Expressions</h3>

<p>The basic expressions comprise <em>integers</em> (<code class=3D"  langu=
age-freest"><span class=3D"token number">0</span></code>, ..., <code class=
=3D"  language-freest"><span class=3D"token number">10</span></code>, ...),=
 <em>booleans</em> (<code class=3D"  language-freest"><span class=3D"token =
keyword">True</span></code> or <code class=3D"  language-freest"><span clas=
s=3D"token keyword">False</span></code>), <em>characters</em> (<code class=
=3D"  language-freest">a</code>, ..., <code class=3D"  language-freest">z</=
code>, <code class=3D"  language-freest">A</code>, ..., <code class=3D"  la=
nguage-freest">Z</code>) and the <em>unit</em> <code class=3D"  language-fr=
eest">()</code> (notice that <code class=3D"  language-freest">()</code> is=
 a type with a single value <code class=3D"  language-freest">()</code>).</=
p>

<p>The remaining expressions are:</p>

<ul>
<li>Variables (ex: <code class=3D"  language-freest">x</code>)</li>
<li>Abstraction introduction (lambda functions) (ex: <code class=3D"  langu=
age-freest">(\x<span class=3D"token comment" spellcheck=3D"true"> </span>:<=
span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"tok=
en keyword">Int</span><span class=3D"token comment" spellcheck=3D"true"> </=
span>-&gt;<span class=3D"token comment" spellcheck=3D"true"> </span>x)</cod=
e>)</li>
<li>Abstraction elimination (applications) (ex: <code class=3D"  language-f=
reest">f<span class=3D"token comment" spellcheck=3D"true"> </span>x</code>)=
</li>
<li>Pair introduction (ex: <code class=3D"  language-freest">(<span class=
=3D"token number">1</span>,<span class=3D"token comment" spellcheck=3D"true=
"> </span><span class=3D"token number">2</span>)</code>)</li>
<li>Datatype elimination (ex: <code class=3D"  language-freest"><span class=
=3D"token keyword">case</span><span class=3D"token comment" spellcheck=3D"t=
rue"> </span>E<span class=3D"token comment" spellcheck=3D"true"> </span><sp=
an class=3D"token keyword">of</span><span class=3D"token comment" spellchec=
k=3D"true"> </span>{<span class=3D"token comment" spellcheck=3D"true"> </sp=
an>C<span class=3D"token number">1</span><span class=3D"token comment" spel=
lcheck=3D"true"> </span>x<span class=3D"token number">11</span><span class=
=3D"token comment" spellcheck=3D"true"> </span>...<span class=3D"token comm=
ent" spellcheck=3D"true"> </span>x<span class=3D"token number">1</span>k<sp=
an class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<span class=3D"=
token comment" spellcheck=3D"true"> </span>E<span class=3D"token number">1<=
/span>,<span class=3D"token comment" spellcheck=3D"true"> </span>...,<span =
class=3D"token comment" spellcheck=3D"true"> </span>Cn<span class=3D"token =
comment" spellcheck=3D"true"> </span>xn<span class=3D"token number">1</span=
><span class=3D"token comment" spellcheck=3D"true"> </span>...<span class=
=3D"token comment" spellcheck=3D"true"> </span>xnk<span class=3D"token comm=
ent" spellcheck=3D"true"> </span>-&gt;<span class=3D"token comment" spellch=
eck=3D"true"> </span>En<span class=3D"token comment" spellcheck=3D"true"> <=
/span>}</code>)</li>
<li>Type applications (ex: <code class=3D"  language-freest">id<span class=
=3D"token comment" spellcheck=3D"true"> </span>[<span class=3D"token keywor=
d">Int</span>]</code>)</li>
<li>Boolean elimination (ex: <code class=3D"  language-freest"><span class=
=3D"token keyword">if</span><span class=3D"token comment" spellcheck=3D"tru=
e"> </span>E<span class=3D"token number">1</span><span class=3D"token comme=
nt" spellcheck=3D"true"> </span><span class=3D"token keyword">then</span><s=
pan class=3D"token comment" spellcheck=3D"true"> </span>E<span class=3D"tok=
en number">2</span><span class=3D"token comment" spellcheck=3D"true"> </spa=
n><span class=3D"token keyword">else</span><span class=3D"token comment" sp=
ellcheck=3D"true"> </span>E<span class=3D"token number">3</span></code>)</l=
i>
<li>Let: (ex: <code class=3D"  language-freest"><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>x<sp=
an class=3D"token comment" spellcheck=3D"true"> </span>=3D<span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token number">2</sp=
an><span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D=
"token keyword">in</span><span class=3D"token comment" spellcheck=3D"true">=
 </span>E</code>)</li>
</ul>

<p><em>Note:</em> Type applications are calls to polymorphic functions in w=
hich we specify the types that should substitute the polymorphic variables.=
=20
For example, to call a function <code class=3D"  language-freest">f</code> =
which type is <code class=3D"  language-freest"><span class=3D"token keywor=
d">forall</span><span class=3D"token comment" spellcheck=3D"true"> </span>a=
,<span class=3D"token comment" spellcheck=3D"true"> </span>b<span class=3D"=
token comment" spellcheck=3D"true"> </span>=3D&gt;<span class=3D"token comm=
ent" spellcheck=3D"true"> </span>a<span class=3D"token comment" spellcheck=
=3D"true"> </span>-&gt;<span class=3D"token comment" spellcheck=3D"true"> <=
/span>b<span class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<span=
 class=3D"token comment" spellcheck=3D"true"> </span>a</code>, we must use =
a type application like the following <code class=3D"  language-freest">f<s=
pan class=3D"token comment" spellcheck=3D"true"> </span>[<span class=3D"tok=
en keyword">Int</span>,<span class=3D"token comment" spellcheck=3D"true"> <=
/span><span class=3D"token keyword">Bool</span>]</code>.</p>

<h2><a name=3D"st"></a>Programming with session types</h2>

<h3>Types</h3>

<p>The session types are the following:</p>

<ul>
<li>Sequential composition: <code class=3D"  language-freest">S<span class=
=3D"token number">1</span>;S<span class=3D"token number">2</span></code> of=
 kind <code class=3D"  language-freest"><span class=3D"token keyword">SU</s=
pan></code> or <code class=3D"  language-freest"><span class=3D"token keywo=
rd">SL</span></code>=20
depending on the kinds of <code class=3D"  language-freest">S<span class=3D=
"token number">1</span></code> and <code class=3D"  language-freest">S<span=
 class=3D"token number">2</span></code></li>
<li>The unit of sequential composition: <code class=3D"  language-freest"><=
span class=3D"token keyword">Skip</span></code> of kind <code class=3D"  la=
nguage-freest"><span class=3D"token keyword">SU</span></code></li>
<li>Messages, <code class=3D"  language-freest">!B</code>, <code class=3D" =
 language-freest">?B</code> both of kind <code class=3D"  language-freest">=
<span class=3D"token keyword">SL</span></code>=20
(<code class=3D"  language-freest">B</code> stands for basic types, <code c=
lass=3D"  language-freest">!</code> for sending messages, <code class=3D"  =
language-freest">?</code> for receiving messages)</li>
<li>Choices: <code class=3D"  language-freest">+{l<span class=3D"token numb=
er">1</span>:<span class=3D"token comment" spellcheck=3D"true"> </span>S<sp=
an class=3D"token number">1</span>,<span class=3D"token comment" spellcheck=
=3D"true"> </span>...,<span class=3D"token comment" spellcheck=3D"true"> </=
span>ln<span class=3D"token comment" spellcheck=3D"true"> </span>:Sn}</code=
> and <code class=3D"  language-freest">&amp;{l<span class=3D"token number"=
>1</span>:<span class=3D"token comment" spellcheck=3D"true"> </span>S<span =
class=3D"token number">1</span>,<span class=3D"token comment" spellcheck=3D=
"true"> </span>...,<span class=3D"token comment" spellcheck=3D"true"> </spa=
n>ln:<span class=3D"token comment" spellcheck=3D"true"> </span>Sn}</code>,=
=20
both of kind <code class=3D"  language-freest"><span class=3D"token keyword=
">SL</span></code> (<code class=3D"  language-freest">+</code> stands for i=
nternal choices and <code class=3D"  language-freest">&amp;</code> for exte=
rnal choices)</li>
<li>Recursive types: <code class=3D"  language-freest"><span class=3D"token=
 keyword">rec</span><span class=3D"token comment" spellcheck=3D"true"> </sp=
an>x.S</code> , bearing the kind of <code class=3D"  language-freest">S</co=
de></li>
</ul>

<h3>Creating threads, channels, and sending/receiving messages</h3>

<ul>
<li>Thread creation: <code class=3D"  language-freest"><span class=3D"token=
 keyword">fork</span><span class=3D"token comment" spellcheck=3D"true"> </s=
pan>E</code></li>
<li>Channel creation: <code class=3D"  language-freest"><span class=3D"toke=
n keyword">new</span><span class=3D"token comment" spellcheck=3D"true"> </s=
pan>T</code></li>
<li>Message sending: <code class=3D"  language-freest"><span class=3D"token=
 keyword">send</span><span class=3D"token comment" spellcheck=3D"true"> </s=
pan>E</code></li>
<li>Message receiving: <code class=3D"  language-freest"><span class=3D"tok=
en keyword">receive</span><span class=3D"token comment" spellcheck=3D"true"=
> </span>E</code></li>
<li>Branch selection, <code class=3D"  language-freest"><span class=3D"toke=
n keyword">select</span><span class=3D"token comment" spellcheck=3D"true"> =
</span>C</code></li>
<li>Match: <code class=3D"  language-freest"><span class=3D"token keyword">=
match</span><span class=3D"token comment" spellcheck=3D"true"> </span>E<spa=
n class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token =
keyword">with</span><span class=3D"token comment" spellcheck=3D"true"> </sp=
an>{<span class=3D"token comment" spellcheck=3D"true"> </span>C<span class=
=3D"token number">1</span><span class=3D"token comment" spellcheck=3D"true"=
> </span>x<span class=3D"token comment" spellcheck=3D"true"> </span>=E2=86=
=92<span class=3D"token comment" spellcheck=3D"true"> </span>E<span class=
=3D"token number">1</span><span class=3D"token comment" spellcheck=3D"true"=
> </span>,...,<span class=3D"token comment" spellcheck=3D"true"> </span>Cn<=
span class=3D"token comment" spellcheck=3D"true"> </span>x<span class=3D"to=
ken comment" spellcheck=3D"true"> </span>=E2=86=92<span class=3D"token comm=
ent" spellcheck=3D"true"> </span>En<span class=3D"token comment" spellcheck=
=3D"true"> </span>}</code></li>
</ul>

<p>In the expressions above, <code class=3D"  language-freest">E</code> sta=
nds for expression and <code class=3D"  language-freest">T</code> for type.=
</p>

<h2>Examples</h2>

<h3>Example 1: Exchange an integer</h3>

<p>This first example is a simple integer exchange between two parties. </p=
>

<p>First, determine the type of the main function (the <strong>integer</str=
ong> exchanged):</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest">main<sp=
an class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D"toke=
n comment" spellcheck=3D"true"> </span><span class=3D"token keyword">Int</s=
pan>
<span class=3D"line-numbers-rows"><span></span></span></code></pre></div>
               =20
            </div>
       =20
<p>Then, create the communication channel with the session type that repres=
ents=20
sending an integer (<code class=3D"  language-freest">!<span class=3D"token=
 keyword">Int</span></code>) and bind both channel-ends to two distinct var=
iables.</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest">main<sp=
an class=3D"token comment" spellcheck=3D"true"> </span>=3D<span class=3D"to=
ken comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">let<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>(w,<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>r)<span class=3D"token co=
mment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spellch=
eck=3D"true"> </span><span class=3D"token keyword">new</span><span class=3D=
"token comment" spellcheck=3D"true"> </span>!<span class=3D"token keyword">=
Int</span><span class=3D"token comment" spellcheck=3D"true"> </span><span c=
lass=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span>...
<span class=3D"line-numbers-rows"><span></span><span></span><span></span></=
span></code></pre></div>
               =20
            </div>
       =20
<p>The new operator returns a pair <code class=3D"  language-freest">(w,<sp=
an class=3D"token comment" spellcheck=3D"true"> </span>r)</code> representi=
ng both channel-ends.=20
The types of <code class=3D"  language-freest">w</code> and <code class=3D"=
  language-freest">r</code> are dual, which means that if <code class=3D"  =
language-freest">w</code> has type <code class=3D"  language-freest">!<span=
 class=3D"token keyword">Int</span></code>,=20
then <code class=3D"  language-freest">r</code> will have type <code class=
=3D"  language-freest">?<span class=3D"token keyword">Int</span></code>.</p=
>

<p>Create a new thread and send the integer:</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest">main<sp=
an class=3D"token comment" spellcheck=3D"true"> </span>=3D<span class=3D"to=
ken comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">let<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>(w,<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>r)<span class=3D"token co=
mment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spellch=
eck=3D"true"> </span><span class=3D"token keyword">new</span><span class=3D=
"token comment" spellcheck=3D"true"> </span>!<span class=3D"token keyword">=
Int</span><span class=3D"token comment" spellcheck=3D"true"> </span><span c=
lass=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">let<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>_<span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token commen=
t" spellcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"=
true"> </span><span class=3D"token comment" spellcheck=3D"true"> </span><sp=
an class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token=
 comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token keyword">fork</span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span>(<span class=3D"token keywo=
rd">send</span><span class=3D"token comment" spellcheck=3D"true"> </span><s=
pan class=3D"token number">5</span><span class=3D"token comment" spellcheck=
=3D"true"> </span>w)<span class=3D"token comment" spellcheck=3D"true"> </sp=
an><span class=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span>...
<span class=3D"line-numbers-rows"><span></span><span></span><span></span><s=
pan></span></span></code></pre></div>
               =20
            </div>
       =20
<p>The wildcard <code class=3D"  language-freest">_</code> discards the val=
ue returned by the expression on the right. The
values that are discarded must be <strong>unrestricted</strong> since the l=
inear resources
must be fully-consumed. The fork expression is a function of type <code cla=
ss=3D"  language-freest">()<span class=3D"token comment" spellcheck=3D"true=
"> </span>-&gt;<span class=3D"token comment" spellcheck=3D"true"> </span>()=
</code>
that spawns new threads. The return value, of type <code class=3D"  languag=
e-freest">()</code> is unrestricted and so
it can be discarded.</p>

<p>The expression <code class=3D"  language-freest"><span class=3D"token ke=
yword">fork</span><span class=3D"token comment" spellcheck=3D"true"> </span=
>(<span class=3D"token keyword">send</span><span class=3D"token comment" sp=
ellcheck=3D"true"> </span><span class=3D"token number">5</span><span class=
=3D"token comment" spellcheck=3D"true"> </span>w)</code> yields an error si=
nce <code class=3D"  language-freest"><span class=3D"token keyword">fork</s=
pan></code> receives a value
of type <code class=3D"  language-freest">()</code> and <code class=3D"  la=
nguage-freest"><span class=3D"token keyword">send</span></code> returns a c=
hannel (fully consumed of type <code class=3D"  language-freest"><span clas=
s=3D"token keyword">Skip</span></code>). To
circumvent this error one can write a function <code class=3D"  language-fr=
eest">sink</code> (for example) that receives
a value of type <code class=3D"  language-freest"><span class=3D"token keyw=
ord">Skip</span></code>, discards it and return <code class=3D"  language-f=
reest">()</code>.</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest">sink<sp=
an class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D"toke=
n comment" spellcheck=3D"true"> </span><span class=3D"token keyword">Skip</=
span><span class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<span c=
lass=3D"token comment" spellcheck=3D"true"> </span>()
sink<span class=3D"token comment" spellcheck=3D"true"> </span>_<span class=
=3D"token comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comm=
ent" spellcheck=3D"true"> </span>()

main<span class=3D"token comment" spellcheck=3D"true"> </span>=3D<span clas=
s=3D"token comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">let<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>(w,<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>r)<span class=3D"token co=
mment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spellch=
eck=3D"true"> </span><span class=3D"token keyword">new</span><span class=3D=
"token comment" spellcheck=3D"true"> </span>!<span class=3D"token keyword">=
Int</span><span class=3D"token comment" spellcheck=3D"true"> </span><span c=
lass=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">let<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>_<span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token commen=
t" spellcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"=
true"> </span><span class=3D"token comment" spellcheck=3D"true"> </span><sp=
an class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token=
 comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token keyword">fork</span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span>(sink<span class=3D"token c=
omment" spellcheck=3D"true"> </span>$<span class=3D"token comment" spellche=
ck=3D"true"> </span><span class=3D"token keyword">send</span><span class=3D=
"token comment" spellcheck=3D"true"> </span><span class=3D"token number">5<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>w)<span cla=
ss=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywo=
rd">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span>...

<span class=3D"line-numbers-rows"><span></span><span></span><span></span><s=
pan></span><span></span><span></span><span></span><span></span></span></cod=
e></pre></div>
               =20
            </div>
       =20
<p>Finally, receive the integer on the main thread (full code)</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest">sink<sp=
an class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D"toke=
n comment" spellcheck=3D"true"> </span><span class=3D"token keyword">Skip</=
span><span class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<span c=
lass=3D"token comment" spellcheck=3D"true"> </span>()
sink<span class=3D"token comment" spellcheck=3D"true"> </span>_<span class=
=3D"token comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comm=
ent" spellcheck=3D"true"> </span>()

main<span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=
=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keyword=
">Int</span>
main<span class=3D"token comment" spellcheck=3D"true"> </span>=3D<span clas=
s=3D"token comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">let<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>(w,<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>r)<span class=3D"token co=
mment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spellch=
eck=3D"true"> </span><span class=3D"token keyword">new</span><span class=3D=
"token comment" spellcheck=3D"true"> </span>!<span class=3D"token keyword">=
Int</span><span class=3D"token comment" spellcheck=3D"true"> </span><span c=
lass=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">let<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>_<span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token commen=
t" spellcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"=
true"> </span><span class=3D"token comment" spellcheck=3D"true"> </span><sp=
an class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token=
 comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token keyword">fork</span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span>(sink<span class=3D"token c=
omment" spellcheck=3D"true"> </span>$<span class=3D"token comment" spellche=
ck=3D"true"> </span><span class=3D"token keyword">send</span><span class=3D=
"token comment" spellcheck=3D"true"> </span><span class=3D"token number">5<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>w)<span cla=
ss=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywo=
rd">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">let<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>(v,<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>_)<span class=3D"token co=
mment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spellch=
eck=3D"true"> </span><span class=3D"token keyword">receive</span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span>r<span class=3D"token comme=
nt" spellcheck=3D"true"> </span><span class=3D"token keyword">in</span><spa=
n class=3D"token comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span>v
<span class=3D"line-numbers-rows"><span></span><span></span><span></span><s=
pan></span><span></span><span></span><span></span><span></span><span></span=
></span></code></pre></div>
                <div class=3D"button-area"><div class=3D"load-button button=
"><span class=3D"button-label">Load in editor</span><span class=3D"glyphico=
n glyphicon-share-alt" aria-hidden=3D"true"></span></div></div>
            </div>
       =20
<p>The <code class=3D"  language-freest"><span class=3D"token keyword">rece=
ive</span></code> operation returns a pair containing the value received an=
d the channel-end.=20
In the example, the channel is discarded in the end because it was fully-co=
nsumed
(already sent the integer).</p>

<h3>Example 2: Exchange a binary tree (of integers)</h3>

<p>First, we define a suitable datatype to describe trees</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest"><span c=
lass=3D"token keyword">data</span><span class=3D"token comment" spellcheck=
=3D"true"> </span>Tree<span class=3D"token comment" spellcheck=3D"true"> </=
span>=3D<span class=3D"token comment" spellcheck=3D"true"> </span>Node<span=
 class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token k=
eyword">Int</span><span class=3D"token comment" spellcheck=3D"true"> </span=
>Tree<span class=3D"token comment" spellcheck=3D"true"> </span>Tree<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>|<span class=3D"token com=
ment" spellcheck=3D"true"> </span>Leaf
<span class=3D"line-numbers-rows"><span></span></span></code></pre></div>
               =20
            </div>
       =20
<p>This datatype has two constructors: a <code class=3D"  language-freest">=
Node</code>, composed of an <code class=3D"  language-freest"><span class=
=3D"token keyword">Int</span></code> (the value)=20
and the two sub-trees; and a <code class=3D"  language-freest">Leaf</code> =
that represents leafs.</p>

<p>Then the type of the channel that will carry the tree (from the point-of=
-view of the sender).</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest"><span c=
lass=3D"token keyword">type</span><span class=3D"token comment" spellcheck=
=3D"true"> </span>TreeC<span class=3D"token comment" spellcheck=3D"true"> <=
/span>:<span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token keyword">SL</span><span class=3D"token comment" spellcheck=3D"tr=
ue"> </span>=3D<span class=3D"token comment" spellcheck=3D"true"> </span>+{=
Node:<span class=3D"token comment" spellcheck=3D"true"> </span>!<span class=
=3D"token keyword">Int</span>;TreeC;TreeC,<span class=3D"token comment" spe=
llcheck=3D"true"> </span>Leaf:<span class=3D"token comment" spellcheck=3D"t=
rue"> </span><span class=3D"token keyword">Skip</span>}
<span class=3D"line-numbers-rows"><span></span></span></code></pre></div>
               =20
            </div>
       =20
<p>The channel's type is recursive over a choice. The sender either choose =
the=20
protocol of indexed by <code class=3D"  language-freest">Leaf</code> or <co=
de class=3D"  language-freest">Node</code>. In the former case, there is=20
nothing to do since the channel has type <code class=3D"  language-freest">=
<span class=3D"token keyword">Skip</span></code>. In the latter,=20
the sender must send the Node value (the integer) and then recursively both=
 sub-trees.</p>

<p><em>Note:</em> We must specify that <code class=3D"  language-freest">Tr=
eeC</code> has kind <code class=3D"  language-freest"><span class=3D"token =
keyword">SL</span></code> (the default kind is <code class=3D"  language-fr=
eest"><span class=3D"token keyword">TU</span></code>)</p>

<p>Now, we are going to write the function that sends the tree. It is a fun=
ction
that receives a Tree and a communication channel of type <code class=3D"  l=
anguage-freest">TreeC;a</code>. The function=20
returns the communication channel.</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest">sendTre=
e<span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D"=
token comment" spellcheck=3D"true"> </span><span class=3D"token keyword">fo=
rall</span><span class=3D"token comment" spellcheck=3D"true"> </span>a<span=
 class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D"token =
comment" spellcheck=3D"true"> </span><span class=3D"token keyword">SL</span=
><span class=3D"token comment" spellcheck=3D"true"> </span>=3D&gt;<span cla=
ss=3D"token comment" spellcheck=3D"true"> </span>TreeC;a<span class=3D"toke=
n comment" spellcheck=3D"true"> </span>-&gt;<span class=3D"token comment" s=
pellcheck=3D"true"> </span>Tree<span class=3D"token comment" spellcheck=3D"=
true"> </span>-&gt;<span class=3D"token comment" spellcheck=3D"true"> </spa=
n>a
<span class=3D"line-numbers-rows"><span></span></span></code></pre></div>
               =20
            </div>
       =20
<p>The type of the function above is polymorphic to accommodate recursive c=
all=20
to send the sub-trees.</p>

<p>Similarly to the definition of <code class=3D"  language-freest"><span c=
lass=3D"token keyword">type</span><span class=3D"token comment" spellcheck=
=3D"true"> </span>TreeC</code>, we must declare the polymorphic=20
variable <code class=3D"  language-freest">a</code> as a linear session typ=
e (kind <code class=3D"  language-freest"><span class=3D"token keyword">SL<=
/span></code>).</p>

<p>And, the body of the function sendTree:</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest">sendTre=
e<span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D"=
token comment" spellcheck=3D"true"> </span><span class=3D"token keyword">fo=
rall</span><span class=3D"token comment" spellcheck=3D"true"> </span>a<span=
 class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D"token =
comment" spellcheck=3D"true"> </span><span class=3D"token keyword">SL</span=
><span class=3D"token comment" spellcheck=3D"true"> </span>=3D&gt;<span cla=
ss=3D"token comment" spellcheck=3D"true"> </span>TreeC;a<span class=3D"toke=
n comment" spellcheck=3D"true"> </span>-&gt;<span class=3D"token comment" s=
pellcheck=3D"true"> </span>Tree<span class=3D"token comment" spellcheck=3D"=
true"> </span>-&gt;<span class=3D"token comment" spellcheck=3D"true"> </spa=
n>a
sendTree<span class=3D"token comment" spellcheck=3D"true"> </span>c<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>t<span class=3D"token com=
ment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spellche=
ck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">case=
</span><span class=3D"token comment" spellcheck=3D"true"> </span>t<span cla=
ss=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywo=
rd">of</span><span class=3D"token comment" spellcheck=3D"true"> </span>{
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span>Leaf<span class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<=
span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"tok=
en keyword">select</span><span class=3D"token comment" spellcheck=3D"true">=
 </span>c<span class=3D"token comment" spellcheck=3D"true"> </span>Leaf,
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span>Node<span class=3D"token comment" spellcheck=3D"true"> </span>v<span=
 class=3D"token comment" spellcheck=3D"true"> </span>l<span class=3D"token =
comment" spellcheck=3D"true"> </span>r<span class=3D"token comment" spellch=
eck=3D"true"> </span>-&gt;<span class=3D"token comment" spellcheck=3D"true"=
> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>c<sp=
an class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token=
 comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token keyword">select</span><span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>Node<span class=3D"token =
comment" spellcheck=3D"true"> </span>c<span class=3D"token comment" spellch=
eck=3D"true"> </span><span class=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>c<sp=
an class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token=
 comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token keyword">send</span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span>v<span class=3D"token comme=
nt" spellcheck=3D"true"> </span>c<span class=3D"token comment" spellcheck=
=3D"true"> </span><span class=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>c<sp=
an class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token=
 comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spel=
lcheck=3D"true"> </span>sendTree[TreeC;a]<span class=3D"token comment" spel=
lcheck=3D"true"> </span>c<span class=3D"token comment" spellcheck=3D"true">=
 </span>l<span class=3D"token comment" spellcheck=3D"true"> </span><span cl=
ass=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span>sendTree[a]<span class=3D"t=
oken comment" spellcheck=3D"true"> </span>c<span class=3D"token comment" sp=
ellcheck=3D"true"> </span>r
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span>}
<span class=3D"line-numbers-rows"><span></span><span></span><span></span><s=
pan></span><span></span><span></span><span></span><span></span><span></span=
><span></span></span></code></pre></div>
               =20
            </div>
       =20
<p>The function above selects the corresponding branch of the protocol depe=
nding=20
on the datatype constructor that is present in each moment (<code class=3D"=
  language-freest">Node</code> and <code class=3D"  language-freest">Leaf</=
code>).=20
Since that <code class=3D"  language-freest">sendTree</code> is a polymorph=
ic function, it must be called with a type=20
application. In this case, the first recursive call (line 8) takes the type=
 to
consume the remaining sub-tree. The last recursive call (line 9) differs on=
 the
type application because, at this point, we already processed the left sub-=
tree,=20
and only the right sub-tree is missing.</p>

<p>The function that receives the binary tree, a function that receives the=
=20
dual-channel of TreeC and returns a pair containing the received tree and t=
he channel.</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest">receive=
Tree<span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=
=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keyword=
">forall</span><span class=3D"token comment" spellcheck=3D"true"> </span>a<=
span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">SL</=
span><span class=3D"token comment" spellcheck=3D"true"> </span>=3D&gt;<span=
 class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token k=
eyword">dualof</span><span class=3D"token comment" spellcheck=3D"true"> </s=
pan>TreeC;a<span class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<=
span class=3D"token comment" spellcheck=3D"true"> </span>(Tree,<span class=
=3D"token comment" spellcheck=3D"true"> </span>a)
<span class=3D"line-numbers-rows"><span></span></span></code></pre></div>
               =20
            </div>
       =20
<p>The dual-channel of TreeC (+{Node: !Int;TreeC;TreeC, Leaf: Skip}) is=20
&amp;{Node: ?Int;TreeC;TreeC, Leaf: Skip}.</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest">receive=
Tree<span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=
=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keyword=
">forall</span><span class=3D"token comment" spellcheck=3D"true"> </span>a<=
span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">SL</=
span><span class=3D"token comment" spellcheck=3D"true"> </span>=3D&gt;<span=
 class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token k=
eyword">dualof</span><span class=3D"token comment" spellcheck=3D"true"> </s=
pan>TreeC;a<span class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<=
span class=3D"token comment" spellcheck=3D"true"> </span>(Tree,<span class=
=3D"token comment" spellcheck=3D"true"> </span>a)
receiveTree<span class=3D"token comment" spellcheck=3D"true"> </span>c<span=
 class=3D"token comment" spellcheck=3D"true"> </span>=3D<span class=3D"toke=
n comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">matc=
h</span><span class=3D"token comment" spellcheck=3D"true"> </span>c<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keyw=
ord">with</span><span class=3D"token comment" spellcheck=3D"true"> </span>{
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span>Leaf<span class=3D"token comment" spellcheck=3D"true"> </span>c<span=
 class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<span class=3D"to=
ken comment" spellcheck=3D"true"> </span>(Leaf,<span class=3D"token comment=
" spellcheck=3D"true"> </span>c),
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span>Node<span class=3D"token comment" spellcheck=3D"true"> </span>c<span=
 class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<span class=3D"to=
ken comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>(v,<=
span class=3D"token comment" spellcheck=3D"true"> </span>c)<span class=3D"t=
oken comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" =
spellcheck=3D"true"> </span><span class=3D"token keyword">receive</span><sp=
an class=3D"token comment" spellcheck=3D"true"> </span>c<span class=3D"toke=
n comment" spellcheck=3D"true"> </span><span class=3D"token keyword">in</sp=
an>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>(lt,=
<span class=3D"token comment" spellcheck=3D"true"> </span>c)<span class=3D"=
token comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment"=
 spellcheck=3D"true"> </span>receiveTree[<span class=3D"token keyword">dual=
of</span><span class=3D"token comment" spellcheck=3D"true"> </span>TreeC;a]=
<span class=3D"token comment" spellcheck=3D"true"> </span>c<span class=3D"t=
oken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">in<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>(rt,=
<span class=3D"token comment" spellcheck=3D"true"> </span>c)<span class=3D"=
token comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment"=
 spellcheck=3D"true"> </span>receiveTree[a]<span class=3D"token comment" sp=
ellcheck=3D"true"> </span>c<span class=3D"token comment" spellcheck=3D"true=
"> </span><span class=3D"token keyword">in</span><span class=3D"token comme=
nt" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span>(Node<span class=3D"token c=
omment" spellcheck=3D"true"> </span>v<span class=3D"token comment" spellche=
ck=3D"true"> </span>lt<span class=3D"token comment" spellcheck=3D"true"> </=
span>rt,<span class=3D"token comment" spellcheck=3D"true"> </span>c)
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span>}

<span class=3D"line-numbers-rows"><span></span><span></span><span></span><s=
pan></span><span></span><span></span><span></span><span></span><span></span=
><span></span><span></span></span></code></pre></div>
               =20
            </div>
       =20
<p>The main difference between this function and the <code class=3D"  langu=
age-freest">sendTree</code> function
is that, in this case, we must use the expression <code class=3D"  language=
-freest"><span class=3D"token keyword">match</span></code> to break down=20
the choice and adopt different behaviours based on the label selected=20
on <code class=3D"  language-freest">sendTree</code>.</p>

<p>Define a simple tree:</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest">aTree<s=
pan class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D"tok=
en comment" spellcheck=3D"true"> </span>Tree
aTree<span class=3D"token comment" spellcheck=3D"true"> </span>=3D<span cla=
ss=3D"token comment" spellcheck=3D"true"> </span>Node<span class=3D"token c=
omment" spellcheck=3D"true"> </span><span class=3D"token number">5</span><s=
pan class=3D"token comment" spellcheck=3D"true"> </span>(Node<span class=3D=
"token comment" spellcheck=3D"true"> </span><span class=3D"token number">4<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>(Node<span =
class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token nu=
mber">3</span><span class=3D"token comment" spellcheck=3D"true"> </span>Lea=
f<span class=3D"token comment" spellcheck=3D"true"> </span>Leaf)<span class=
=3D"token comment" spellcheck=3D"true"> </span>(Node<span class=3D"token co=
mment" spellcheck=3D"true"> </span><span class=3D"token number">2</span><sp=
an class=3D"token comment" spellcheck=3D"true"> </span>(Node<span class=3D"=
token comment" spellcheck=3D"true"> </span><span class=3D"token number">1</=
span><span class=3D"token comment" spellcheck=3D"true"> </span>Leaf<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>Leaf)<span class=3D"token=
 comment" spellcheck=3D"true"> </span>Leaf))<span class=3D"token comment" s=
pellcheck=3D"true"> </span>(Node<span class=3D"token comment" spellcheck=3D=
"true"> </span><span class=3D"token number">6</span><span class=3D"token co=
mment" spellcheck=3D"true"> </span>Leaf<span class=3D"token comment" spellc=
heck=3D"true"> </span>Leaf)
<span class=3D"line-numbers-rows"><span></span><span></span></span></code><=
/pre></div>
               =20
            </div>
       =20
<p>The main function follows the same pattern as the one from the previous =
example:
first creates the communication channel, then spawns a new process that cal=
ls the
<code class=3D"  language-freest">sendTree</code> function, and finally cal=
ls the <code class=3D"  language-freest">receiveTree</code> function return=
ing the=20
received tree.</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest">sink<sp=
an class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D"toke=
n comment" spellcheck=3D"true"> </span><span class=3D"token keyword">Skip</=
span><span class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<span c=
lass=3D"token comment" spellcheck=3D"true"> </span>()
sink<span class=3D"token comment" spellcheck=3D"true"> </span>_<span class=
=3D"token comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comm=
ent" spellcheck=3D"true"> </span>()

main<span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=
=3D"token comment" spellcheck=3D"true"> </span>Tree
main<span class=3D"token comment" spellcheck=3D"true"> </span>=3D<span clas=
s=3D"token comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token keyword">let</span><span class=3D"token comment=
" spellcheck=3D"true"> </span>(w,<span class=3D"token comment" spellcheck=
=3D"true"> </span>r)<span class=3D"token comment" spellcheck=3D"true"> </sp=
an><span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D=
"token comment" spellcheck=3D"true"> </span><span class=3D"token comment" s=
pellcheck=3D"true"> </span>=3D<span class=3D"token comment" spellcheck=3D"t=
rue"> </span><span class=3D"token keyword">new</span><span class=3D"token c=
omment" spellcheck=3D"true"> </span>TreeC<span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token keyword">let</span><span class=3D"token comment=
" spellcheck=3D"true"> </span>_<span class=3D"token comment" spellcheck=3D"=
true"> </span><span class=3D"token comment" spellcheck=3D"true"> </span><sp=
an class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token=
 comment" spellcheck=3D"true"> </span><span class=3D"token comment" spellch=
eck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> </s=
pan><span class=3D"token comment" spellcheck=3D"true"> </span><span class=
=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token comment=
" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spellcheck=
=3D"true"> </span><span class=3D"token keyword">fork</span><span class=3D"t=
oken comment" spellcheck=3D"true"> </span>(sink<span class=3D"token comment=
" spellcheck=3D"true"> </span>$<span class=3D"token comment" spellcheck=3D"=
true"> </span>sendTree[<span class=3D"token keyword">Skip</span>]<span clas=
s=3D"token comment" spellcheck=3D"true"> </span>w<span class=3D"token comme=
nt" spellcheck=3D"true"> </span>aTree)<span class=3D"token comment" spellch=
eck=3D"true"> </span><span class=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token keyword">let</span><span class=3D"token comment=
" spellcheck=3D"true"> </span>(tree,<span class=3D"token comment" spellchec=
k=3D"true"> </span>_)<span class=3D"token comment" spellcheck=3D"true"> </s=
pan>=3D<span class=3D"token comment" spellcheck=3D"true"> </span>receiveTre=
e[<span class=3D"token keyword">Skip</span>]<span class=3D"token comment" s=
pellcheck=3D"true"> </span>r<span class=3D"token comment" spellcheck=3D"tru=
e"> </span><span class=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span>tree
<span class=3D"line-numbers-rows"><span></span><span></span><span></span><s=
pan></span><span></span><span></span><span></span><span></span><span></span=
></span></code></pre></div>
               =20
            </div>
       =20
<p>We can write a <code class=3D"  language-freest">sink</code> function li=
ke on the previous example.</p>

<p>Full example:</p>

            <div class=3D"example">
                <div class=3D"code-part"><pre class=3D"no-wrapping line-num=
bers  language-freest"><code class=3D"no-wrapping  language-freest"><span c=
lass=3D"token keyword">data</span><span class=3D"token comment" spellcheck=
=3D"true"> </span>Tree<span class=3D"token comment" spellcheck=3D"true"> </=
span>=3D<span class=3D"token comment" spellcheck=3D"true"> </span>Node<span=
 class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token k=
eyword">Int</span><span class=3D"token comment" spellcheck=3D"true"> </span=
>Tree<span class=3D"token comment" spellcheck=3D"true"> </span>Tree<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>|<span class=3D"token com=
ment" spellcheck=3D"true"> </span>Leaf

<span class=3D"token keyword">type</span><span class=3D"token comment" spel=
lcheck=3D"true"> </span>TreeC<span class=3D"token comment" spellcheck=3D"tr=
ue"> </span>:<span class=3D"token comment" spellcheck=3D"true"> </span><spa=
n class=3D"token keyword">SL</span><span class=3D"token comment" spellcheck=
=3D"true"> </span>=3D<span class=3D"token comment" spellcheck=3D"true"> </s=
pan>+{Node:<span class=3D"token comment" spellcheck=3D"true"> </span>!<span=
 class=3D"token keyword">Int</span>;TreeC;TreeC,<span class=3D"token commen=
t" spellcheck=3D"true"> </span>Leaf:<span class=3D"token comment" spellchec=
k=3D"true"> </span><span class=3D"token keyword">Skip</span>}

sendTree<span class=3D"token comment" spellcheck=3D"true"> </span>:<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keyw=
ord">forall</span><span class=3D"token comment" spellcheck=3D"true"> </span=
>a<span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=3D=
"token comment" spellcheck=3D"true"> </span><span class=3D"token keyword">S=
L</span><span class=3D"token comment" spellcheck=3D"true"> </span>=3D&gt;<s=
pan class=3D"token comment" spellcheck=3D"true"> </span>TreeC;a<span class=
=3D"token comment" spellcheck=3D"true"> </span>-&gt;<span class=3D"token co=
mment" spellcheck=3D"true"> </span>Tree<span class=3D"token comment" spellc=
heck=3D"true"> </span>-&gt;<span class=3D"token comment" spellcheck=3D"true=
"> </span>a
sendTree<span class=3D"token comment" spellcheck=3D"true"> </span>c<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>t<span class=3D"token com=
ment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spellche=
ck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">case=
</span><span class=3D"token comment" spellcheck=3D"true"> </span>t<span cla=
ss=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywo=
rd">of</span><span class=3D"token comment" spellcheck=3D"true"> </span>{
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span>Leaf<span class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<=
span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"tok=
en keyword">select</span><span class=3D"token comment" spellcheck=3D"true">=
 </span>Leaf<span class=3D"token comment" spellcheck=3D"true"> </span>c,
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span>Node<span class=3D"token comment" spellcheck=3D"true"> </span>v<span=
 class=3D"token comment" spellcheck=3D"true"> </span>l<span class=3D"token =
comment" spellcheck=3D"true"> </span>r<span class=3D"token comment" spellch=
eck=3D"true"> </span>-&gt;<span class=3D"token comment" spellcheck=3D"true"=
> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>c<sp=
an class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token=
 comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token keyword">select</span><span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>Node<span class=3D"token =
comment" spellcheck=3D"true"> </span>c<span class=3D"token comment" spellch=
eck=3D"true"> </span><span class=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>c<sp=
an class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token=
 comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token keyword">send</span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span>v<span class=3D"token comme=
nt" spellcheck=3D"true"> </span>c<span class=3D"token comment" spellcheck=
=3D"true"> </span><span class=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>c<sp=
an class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token=
 comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spel=
lcheck=3D"true"> </span>sendTree[TreeC;a]<span class=3D"token comment" spel=
lcheck=3D"true"> </span>c<span class=3D"token comment" spellcheck=3D"true">=
 </span>l<span class=3D"token comment" spellcheck=3D"true"> </span><span cl=
ass=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span>sendTree[a]<span class=3D"t=
oken comment" spellcheck=3D"true"> </span>c<span class=3D"token comment" sp=
ellcheck=3D"true"> </span>r
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span>}

receiveTree<span class=3D"token comment" spellcheck=3D"true"> </span>:<span=
 class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token k=
eyword">forall</span><span class=3D"token comment" spellcheck=3D"true"> </s=
pan>a<span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=
=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keyword=
">SL</span><span class=3D"token comment" spellcheck=3D"true"> </span>=3D&gt=
;<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"t=
oken keyword">dualof</span><span class=3D"token comment" spellcheck=3D"true=
"> </span>TreeC;a<span class=3D"token comment" spellcheck=3D"true"> </span>=
-&gt;<span class=3D"token comment" spellcheck=3D"true"> </span>(Tree,<span =
class=3D"token comment" spellcheck=3D"true"> </span>a)
receiveTree<span class=3D"token comment" spellcheck=3D"true"> </span>c<span=
 class=3D"token comment" spellcheck=3D"true"> </span>=3D<span class=3D"toke=
n comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">matc=
h</span><span class=3D"token comment" spellcheck=3D"true"> </span>c<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keyw=
ord">with</span><span class=3D"token comment" spellcheck=3D"true"> </span>{
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span>Leaf<span class=3D"token comment" spellcheck=3D"true"> </span>c<span=
 class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<span class=3D"to=
ken comment" spellcheck=3D"true"> </span>(Leaf,<span class=3D"token comment=
" spellcheck=3D"true"> </span>c),
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span>Node<span class=3D"token comment" spellcheck=3D"true"> </span>c<span=
 class=3D"token comment" spellcheck=3D"true"> </span>-&gt;<span class=3D"to=
ken comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>(v,<=
span class=3D"token comment" spellcheck=3D"true"> </span>c)<span class=3D"t=
oken comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" =
spellcheck=3D"true"> </span><span class=3D"token keyword">receive</span><sp=
an class=3D"token comment" spellcheck=3D"true"> </span>c<span class=3D"toke=
n comment" spellcheck=3D"true"> </span><span class=3D"token keyword">in</sp=
an>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>(lt,=
<span class=3D"token comment" spellcheck=3D"true"> </span>c)<span class=3D"=
token comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment"=
 spellcheck=3D"true"> </span>receiveTree[<span class=3D"token keyword">dual=
of</span><span class=3D"token comment" spellcheck=3D"true"> </span>TreeC;a]=
<span class=3D"token comment" spellcheck=3D"true"> </span>c<span class=3D"t=
oken comment" spellcheck=3D"true"> </span><span class=3D"token keyword">in<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keywor=
d">let</span><span class=3D"token comment" spellcheck=3D"true"> </span>(rt,=
<span class=3D"token comment" spellcheck=3D"true"> </span>c)<span class=3D"=
token comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comment"=
 spellcheck=3D"true"> </span>receiveTree[a]<span class=3D"token comment" sp=
ellcheck=3D"true"> </span>c<span class=3D"token comment" spellcheck=3D"true=
"> </span><span class=3D"token keyword">in</span><span class=3D"token comme=
nt" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token comment" spellcheck=3D"true"> </span><span clas=
s=3D"token comment" spellcheck=3D"true"> </span>(Node<span class=3D"token c=
omment" spellcheck=3D"true"> </span>v<span class=3D"token comment" spellche=
ck=3D"true"> </span>lt<span class=3D"token comment" spellcheck=3D"true"> </=
span>rt,<span class=3D"token comment" spellcheck=3D"true"> </span>c)
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span>}

aTree<span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=
=3D"token comment" spellcheck=3D"true"> </span>Tree
aTree<span class=3D"token comment" spellcheck=3D"true"> </span>=3D<span cla=
ss=3D"token comment" spellcheck=3D"true"> </span>Node<span class=3D"token c=
omment" spellcheck=3D"true"> </span><span class=3D"token number">5</span><s=
pan class=3D"token comment" spellcheck=3D"true"> </span>(Node<span class=3D=
"token comment" spellcheck=3D"true"> </span><span class=3D"token number">4<=
/span><span class=3D"token comment" spellcheck=3D"true"> </span>(Node<span =
class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token nu=
mber">3</span><span class=3D"token comment" spellcheck=3D"true"> </span>Lea=
f<span class=3D"token comment" spellcheck=3D"true"> </span>Leaf)<span class=
=3D"token comment" spellcheck=3D"true"> </span>(Node<span class=3D"token co=
mment" spellcheck=3D"true"> </span><span class=3D"token number">2</span><sp=
an class=3D"token comment" spellcheck=3D"true"> </span>(Node<span class=3D"=
token comment" spellcheck=3D"true"> </span><span class=3D"token number">1</=
span><span class=3D"token comment" spellcheck=3D"true"> </span>Leaf<span cl=
ass=3D"token comment" spellcheck=3D"true"> </span>Leaf)<span class=3D"token=
 comment" spellcheck=3D"true"> </span>Leaf))<span class=3D"token comment" s=
pellcheck=3D"true"> </span>(Node<span class=3D"token comment" spellcheck=3D=
"true"> </span><span class=3D"token number">6</span><span class=3D"token co=
mment" spellcheck=3D"true"> </span>Leaf<span class=3D"token comment" spellc=
heck=3D"true"> </span>Leaf)

sink<span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=
=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token keyword=
">Skip</span><span class=3D"token comment" spellcheck=3D"true"> </span>-&gt=
;<span class=3D"token comment" spellcheck=3D"true"> </span>()
sink<span class=3D"token comment" spellcheck=3D"true"> </span>_<span class=
=3D"token comment" spellcheck=3D"true"> </span>=3D<span class=3D"token comm=
ent" spellcheck=3D"true"> </span>()

main<span class=3D"token comment" spellcheck=3D"true"> </span>:<span class=
=3D"token comment" spellcheck=3D"true"> </span>Tree
main<span class=3D"token comment" spellcheck=3D"true"> </span>=3D<span clas=
s=3D"token comment" spellcheck=3D"true"> </span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token keyword">let</span><span class=3D"token comment=
" spellcheck=3D"true"> </span>(w,<span class=3D"token comment" spellcheck=
=3D"true"> </span>r)<span class=3D"token comment" spellcheck=3D"true"> </sp=
an><span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D=
"token comment" spellcheck=3D"true"> </span><span class=3D"token comment" s=
pellcheck=3D"true"> </span>=3D<span class=3D"token comment" spellcheck=3D"t=
rue"> </span><span class=3D"token keyword">new</span><span class=3D"token c=
omment" spellcheck=3D"true"> </span>TreeC<span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token keyword">let</span><span class=3D"token comment=
" spellcheck=3D"true"> </span>_<span class=3D"token comment" spellcheck=3D"=
true"> </span><span class=3D"token comment" spellcheck=3D"true"> </span><sp=
an class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token=
 comment" spellcheck=3D"true"> </span><span class=3D"token comment" spellch=
eck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> </s=
pan><span class=3D"token comment" spellcheck=3D"true"> </span><span class=
=3D"token comment" spellcheck=3D"true"> </span><span class=3D"token comment=
" spellcheck=3D"true"> </span>=3D<span class=3D"token comment" spellcheck=
=3D"true"> </span><span class=3D"token keyword">fork</span><span class=3D"t=
oken comment" spellcheck=3D"true"> </span>(sink<span class=3D"token comment=
" spellcheck=3D"true"> </span>$<span class=3D"token comment" spellcheck=3D"=
true"> </span>sendTree[<span class=3D"token keyword">Skip</span>]<span clas=
s=3D"token comment" spellcheck=3D"true"> </span>w<span class=3D"token comme=
nt" spellcheck=3D"true"> </span>aTree)<span class=3D"token comment" spellch=
eck=3D"true"> </span><span class=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span><span class=3D"token keyword">let</span><span class=3D"token comment=
" spellcheck=3D"true"> </span>(tree,<span class=3D"token comment" spellchec=
k=3D"true"> </span>_)<span class=3D"token comment" spellcheck=3D"true"> </s=
pan>=3D<span class=3D"token comment" spellcheck=3D"true"> </span>receiveTre=
e[<span class=3D"token keyword">Skip</span>]<span class=3D"token comment" s=
pellcheck=3D"true"> </span>r<span class=3D"token comment" spellcheck=3D"tru=
e"> </span><span class=3D"token keyword">in</span>
<span class=3D"token comment" spellcheck=3D"true"> </span><span class=3D"to=
ken comment" spellcheck=3D"true"> </span><span class=3D"token comment" spel=
lcheck=3D"true"> </span><span class=3D"token comment" spellcheck=3D"true"> =
</span>tree
<span class=3D"line-numbers-rows"><span></span><span></span><span></span><s=
pan></span><span></span><span></span><span></span><span></span><span></span=
><span></span><span></span><span></span><span></span><span></span><span></s=
pan><span></span><span></span><span></span><span></span><span></span><span>=
</span><span></span><span></span><span></span><span></span><span></span><sp=
an></span><span></span><span></span><span></span><span></span><span></span>=
<span></span><span></span><span></span><span></span><span></span><span></sp=
an></span></code></pre></div>
                <div class=3D"button-area"><div class=3D"load-button button=
"><span class=3D"button-label">Load in editor</span><span class=3D"glyphico=
n glyphicon-share-alt" aria-hidden=3D"true"></span></div></div>
            </div>
       =20
<p>(to be completed)</p>
</div>
       =20
       =20
            <div id=3D"examples" style=3D"display: block;">
                <h1>Examples</h1>
                <ul>
                   =20
                    <li><a class=3D"example-link" data-file=3D"ArithExprSer=
ver.fst"><span class=3D"glyphicon glyphicon-file" aria-hidden=3D"true"></sp=
an>ArithExprServer.fst</a></li>
                   =20
                    <li><a class=3D"example-link" data-file=3D"Sorting.fst"=
><span class=3D"glyphicon glyphicon-file" aria-hidden=3D"true"></span>Sorti=
ng.fst</a></li>
                   =20
                    <li><a class=3D"example-link" data-file=3D"TreeTransfor=
m.fst"><span class=3D"glyphicon glyphicon-file" aria-hidden=3D"true"></span=
>TreeTransform.fst</a></li>
                   =20
                    <li><a class=3D"example-link" data-file=3D"Crisscross.f=
st"><span class=3D"glyphicon glyphicon-file" aria-hidden=3D"true"></span>Cr=
isscross.fst</a></li>
                   =20
                    <li><a class=3D"example-link" data-file=3D"FixZcombinat=
or.fst"><span class=3D"glyphicon glyphicon-file" aria-hidden=3D"true"></spa=
n>FixZcombinator.fst</a></li>
                   =20
                    <li><a class=3D"example-link" data-file=3D"AnBn.fst"><s=
pan class=3D"glyphicon glyphicon-file" aria-hidden=3D"true"></span>AnBn.fst=
</a></li>
                   =20
                    <li><a class=3D"example-link" data-file=3D"LazyTreeTrav=
ersal.fst"><span class=3D"glyphicon glyphicon-file" aria-hidden=3D"true"></=
span>LazyTreeTraversal.fst</a></li>
                   =20
                    <li><a class=3D"example-link" data-file=3D"DyckWords.fs=
t"><span class=3D"glyphicon glyphicon-file" aria-hidden=3D"true"></span>Dyc=
kWords.fst</a></li>
                   =20
                    <li><a class=3D"example-link" data-file=3D"Unnormed.fst=
"><span class=3D"glyphicon glyphicon-file" aria-hidden=3D"true"></span>Unno=
rmed.fst</a></li>
                   =20
                </ul>
            </div>
       =20
       =20
        </div>
    </div>
    <div class=3D"splitter"></div>
    <div id=3D"right-column" class=3D"column">
        <div id=3D"right-tab-area" class=3D"tab-area">
            <ul>
                <li><a class=3D"tab right-tab active-tab" href=3D"http://rs=
s.di.fc.ul.pt/tryit/FreeST#">Code</a></li>
                <!-- <li><a class=3D"tab right-tab" href=3D"#">C program</a=
></li> -->
            </ul>
        </div>
        <div id=3D"editor-area">
            <textarea class=3D"code-area" rows=3D"1" id=3D"code-editor" dat=
a-role=3D"none" style=3D"display: none;"></textarea><div class=3D"CodeMirro=
r cm-s-neat CodeMirror-focused"><div style=3D"overflow: hidden; position: r=
elative; width: 3px; height: 0px; top: 184px; left: 175.594px;"><textarea a=
utocorrect=3D"off" autocapitalize=3D"off" spellcheck=3D"false" style=3D"pos=
ition: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;" =
tabindex=3D"0"></textarea></div><div class=3D"CodeMirror-vscrollbar" cm-not=
-content=3D"true" style=3D"bottom: 0px;"><div style=3D"min-width: 1px; heig=
ht: 0px;"></div></div><div class=3D"CodeMirror-hscrollbar" cm-not-content=
=3D"true"><div style=3D"height: 100%; min-height: 1px; width: 0px;"></div><=
/div><div class=3D"CodeMirror-scrollbar-filler" cm-not-content=3D"true"></d=
iv><div class=3D"CodeMirror-gutter-filler" cm-not-content=3D"true"></div><d=
iv class=3D"CodeMirror-scroll" tabindex=3D"-1" draggable=3D"false"><div cla=
ss=3D"CodeMirror-sizer" style=3D"margin-left: 30px; margin-bottom: -17px; b=
order-right-width: 13px; min-width: 476.781px; min-height: 208px; padding-r=
ight: 0px; padding-bottom: 0px;"><div style=3D"position: relative; top: 0px=
;"><div class=3D"CodeMirror-lines"><div style=3D"position: relative; outlin=
e: none;"><div class=3D"CodeMirror-measure"><pre>x</pre><div class=3D"CodeM=
irror-linenumber CodeMirror-gutter-elt"><div>10</div></div><div class=3D"Co=
deMirror-linenumber CodeMirror-gutter-elt"><div>9</div></div><div class=3D"=
CodeMirror-linenumber CodeMirror-gutter-elt"><div>10</div></div></div><div =
class=3D"CodeMirror-measure"></div><div style=3D"position: relative; z-inde=
x: 1;"></div><div class=3D"CodeMirror-cursors" style=3D""><div class=3D"Cod=
eMirror-cursor" style=3D"left: 142.594px; top: 180px; height: 20px;">&nbsp;=
</div></div><div class=3D"CodeMirror-code" style=3D""><div style=3D"positio=
n: relative;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px=
; width: 30px;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" =
style=3D"left: 0px; width: 21px;">1</div></div><pre><span style=3D"padding-=
right: 0.1px;"><span class=3D"cm-keyword">data</span><span class=3D"cm-stri=
ng"> </span>Coordenates<span class=3D"cm-string"> </span>=3D<span class=3D"=
cm-string"> </span>XY<span class=3D"cm-string"> </span><span class=3D"cm-ke=
yword">Int</span><span class=3D"cm-string"> </span><span class=3D"cm-keywor=
d">Int</span></span></pre></div><div style=3D"position: relative;"><div cla=
ss=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px; width: 30px;"><div c=
lass=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px; wi=
dth: 21px;">2</div></div><pre><span style=3D"padding-right: 0.1px;"><span c=
lass=3D"cm-keyword">data</span><span class=3D"cm-string"> </span>State<span=
 class=3D"cm-string"> </span>=3D<span class=3D"cm-string"> </span>S<span cl=
ass=3D"cm-string"> </span><span class=3D"cm-keyword">Int</span></span></pre=
></div><div style=3D"position: relative;"><div class=3D"CodeMirror-gutter-w=
rapper" style=3D"left: -30px; width: 30px;"><div class=3D"CodeMirror-linenu=
mber CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">3</div></div>=
<pre class=3D""><span style=3D"padding-right: 0.1px;"><span class=3D"cm-key=
word">data</span><span class=3D"cm-string"> </span>Celule<span class=3D"cm-=
string"> </span>=3D<span class=3D"cm-string"> </span>C<span class=3D"cm-str=
ing"> </span>Coordenates<span class=3D"cm-string"> </span>State</span></pre=
></div><div style=3D"position: relative;"><div class=3D"CodeMirror-gutter-w=
rapper" style=3D"left: -30px; width: 30px;"><div class=3D"CodeMirror-linenu=
mber CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">4</div></div>=
<pre><span style=3D"padding-right: 0.1px;"><span class=3D"cm-keyword">data<=
/span><span class=3D"cm-string"> </span>World<span class=3D"cm-string"> </s=
pan>=3D<span class=3D"cm-string"> </span>Nil<span class=3D"cm-string"> </sp=
an>|<span class=3D"cm-string"> </span>W<span class=3D"cm-string"> </span>Ce=
lule<span class=3D"cm-string"> </span>World</span></pre></div><div style=3D=
"position: relative;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"lef=
t: -30px; width: 30px;"><div class=3D"CodeMirror-linenumber CodeMirror-gutt=
er-elt" style=3D"left: 0px; width: 21px;">5</div></div><pre class=3D""><spa=
n style=3D"padding-right: 0.1px;"><span cm-text=3D"">=E2=80=8B</span></span=
></pre></div><div style=3D"position: relative;"><div class=3D"CodeMirror-gu=
tter-wrapper" style=3D"left: -30px; width: 30px;"><div class=3D"CodeMirror-=
linenumber CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">6</div>=
</div><pre><span style=3D"padding-right: 0.1px;">createWorld<span class=3D"=
cm-string"> </span>:<span class=3D"cm-string"> </span>World</span></pre></d=
iv><div style=3D"position: relative;"><div class=3D"CodeMirror-gutter-wrapp=
er" style=3D"left: -30px; width: 30px;"><div class=3D"CodeMirror-linenumber=
 CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">7</div></div><pre=
><span style=3D"padding-right: 0.1px;">createWorld<span class=3D"cm-string"=
> </span>=3D<span class=3D"cm-string"> </span>W<span class=3D"cm-string"> <=
/span>(C<span class=3D"cm-string"> </span>(XY<span class=3D"cm-string"> </s=
pan><span class=3D"cm-number">1</span><span class=3D"cm-string"> </span><sp=
an class=3D"cm-number">1</span>)<span class=3D"cm-string"> </span>(S<span c=
lass=3D"cm-string"> </span><span class=3D"cm-number">0</span>))<span class=
=3D"cm-string"> </span>(W<span class=3D"cm-string"> </span>(C<span class=3D=
"cm-string"> </span>(XY<span class=3D"cm-string"> </span><span class=3D"cm-=
number">1</span><span class=3D"cm-string"> </span><span class=3D"cm-number"=
>1</span>)<span class=3D"cm-string"> </span>(S<span class=3D"cm-string"> </=
span><span class=3D"cm-number">0</span>))<span class=3D"cm-string"> </span>=
Nil)</span></pre></div><div style=3D"position: relative;"><div class=3D"Cod=
eMirror-gutter-wrapper" style=3D"left: -30px; width: 30px;"><div class=3D"C=
odeMirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px=
;">8</div></div><pre class=3D""><span style=3D"padding-right: 0.1px;"><span=
 cm-text=3D"">=E2=80=8B</span></span></pre></div><div style=3D"position: re=
lative;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px; wid=
th: 30px;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=
=3D"left: 0px; width: 21px;">9</div></div><pre><span style=3D"padding-right=
: 0.1px;">ma<span class=3D"cm-keyword">in</span><span class=3D"cm-string"> =
</span>:<span class=3D"cm-string"> </span>World</span></pre></div><div styl=
e=3D"position: relative;"><div class=3D"CodeMirror-gutter-wrapper" style=3D=
"left: -30px; width: 30px;"><div class=3D"CodeMirror-linenumber CodeMirror-=
gutter-elt" style=3D"left: 0px; width: 21px;">10</div></div><pre><span styl=
e=3D"padding-right: 0.1px;">ma<span class=3D"cm-keyword">in</span><span cla=
ss=3D"cm-string"> </span>=3D<span class=3D"cm-string"> </span>createWorld</=
span></pre></div></div></div></div></div></div><div style=3D"position: abso=
lute; height: 13px; width: 1px; top: 208px;"></div><div class=3D"CodeMirror=
-gutters" style=3D"height: 338px;"><div class=3D"CodeMirror-gutter CodeMirr=
or-linenumbers" style=3D"width: 29px;"></div></div></div></div>
        </div>
        <div class=3D"button-area">
            <div id=3D"run-button" class=3D"button"><span class=3D"glyphico=
n glyphicon-play" aria-hidden=3D"true"></span><span class=3D"button-label">=
Run</span></div>
        </div>
        <div id=3D"terminal" class=3D"scroll-area">
            <pre id=3D"terminal-content">W (C (XY 1 1) (S 0)) (W (C (XY 1 1=
) (S 0)) Nil)
</pre>
        </div>
    </div>
</div>



</div>







   =20
   =20
   =20
   =20
   =20
   =20


</body></html>
------MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://rss.di.fc.ul.pt/tryit/static/css/bootstrap.min.css

@charset "utf-8";

html { font-family: sans-serif; text-size-adjust: 100%; }

body { margin: 0px; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, =
menu, nav, section, summary { display: block; }

audio, canvas, progress, video { display: inline-block; vertical-align: bas=
eline; }

audio:not([controls]) { display: none; height: 0px; }

[hidden], template { display: none; }

a { background-color: transparent; }

a:active, a:hover { outline: 0px; }

abbr[title] { border-bottom: 1px dotted; }

b, strong { font-weight: 700; }

dfn { font-style: italic; }

h1 { margin: 0.67em 0px; font-size: 2em; }

mark { color: rgb(0, 0, 0); background: rgb(255, 255, 0); }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { border: 0px; }

svg:not(:root) { overflow: hidden; }

figure { margin: 1em 40px; }

hr { height: 0px; box-sizing: content-box; }

pre { overflow: auto; }

code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }

button, input, optgroup, select, textarea { margin: 0px; font: inherit; col=
or: inherit; }

button { overflow: visible; }

button, select { text-transform: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { appearance: button; cursor: pointer; }

button[disabled], html input[disabled] { cursor: default; }

input { line-height: normal; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { height: auto; }

input[type=3D"search"] { box-sizing: content-box; appearance: textfield; }

input[type=3D"search"]::-webkit-search-cancel-button, input[type=3D"search"=
]::-webkit-search-decoration { appearance: none; }

fieldset { padding: 0.35em 0.625em 0.75em; margin: 0px 2px; border: 1px sol=
id silver; }

legend { padding: 0px; border: 0px; }

textarea { overflow: auto; }

optgroup { font-weight: 700; }

table { border-spacing: 0px; border-collapse: collapse; }

td, th { padding: 0px; }

@media print {
  *, ::before, ::after { color: rgb(0, 0, 0) !important; text-shadow: none =
!important; background: transparent !important; box-shadow: none !important=
; }
  a, a:visited { text-decoration: underline; }
  a[href]::after { content: " (" attr(href) ")"; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  a[href^=3D"#"]::after, a[href^=3D"javascript:"]::after { content: ""; }
  pre, blockquote { border: 1px solid rgb(153, 153, 153); break-inside: avo=
id; }
  thead { display: table-header-group; }
  tr, img { break-inside: avoid; }
  img { max-width: 100% !important; }
  p, h2, h3 { orphans: 3; widows: 3; }
  h2, h3 { break-after: avoid; }
  select { background: rgb(255, 255, 255) !important; }
  .navbar { display: none; }
  .btn > .caret, .dropup > .btn > .caret { border-top-color: rgb(0, 0, 0) !=
important; }
  .label { border: 1px solid rgb(0, 0, 0); }
  .table { border-collapse: collapse !important; }
  .table td, .table th { background-color: rgb(255, 255, 255) !important; }
  .table-bordered th, .table-bordered td { border: 1px solid rgb(221, 221, =
221) !important; }
}

@font-face { font-family: "Glyphicons Halflings"; src: url("../fonts/glyphi=
cons-halflings-regular.eot?#iefix") format("embedded-opentype"), url("../fo=
nts/glyphicons-halflings-regular.woff") format("woff"), url("../fonts/glyph=
icons-halflings-regular.ttf") format("truetype"), url("../fonts/glyphicons-=
halflings-regular.svg#glyphicons_halflingsregular") format("svg"); }

.glyphicon { position: relative; top: 1px; display: inline-block; font-fami=
ly: "Glyphicons Halflings"; font-style: normal; font-weight: 400; line-heig=
ht: 1; -webkit-font-smoothing: antialiased; }

.glyphicon-asterisk::before { content: "*"; }

.glyphicon-plus::before { content: "+"; }

.glyphicon-euro::before, .glyphicon-eur::before { content: "=E2=82=AC"; }

.glyphicon-minus::before { content: "=E2=88=92"; }

.glyphicon-cloud::before { content: "=E2=98=81"; }

.glyphicon-envelope::before { content: "=E2=9C=89"; }

.glyphicon-pencil::before { content: "=E2=9C=8F"; }

.glyphicon-glass::before { content: "=EE=80=81"; }

.glyphicon-music::before { content: "=EE=80=82"; }

.glyphicon-search::before { content: "=EE=80=83"; }

.glyphicon-heart::before { content: "=EE=80=85"; }

.glyphicon-star::before { content: "=EE=80=86"; }

.glyphicon-star-empty::before { content: "=EE=80=87"; }

.glyphicon-user::before { content: "=EE=80=88"; }

.glyphicon-film::before { content: "=EE=80=89"; }

.glyphicon-th-large::before { content: "=EE=80=90"; }

.glyphicon-th::before { content: "=EE=80=91"; }

.glyphicon-th-list::before { content: "=EE=80=92"; }

.glyphicon-ok::before { content: "=EE=80=93"; }

.glyphicon-remove::before { content: "=EE=80=94"; }

.glyphicon-zoom-in::before { content: "=EE=80=95"; }

.glyphicon-zoom-out::before { content: "=EE=80=96"; }

.glyphicon-off::before { content: "=EE=80=97"; }

.glyphicon-signal::before { content: "=EE=80=98"; }

.glyphicon-cog::before { content: "=EE=80=99"; }

.glyphicon-trash::before { content: "=EE=80=A0"; }

.glyphicon-home::before { content: "=EE=80=A1"; }

.glyphicon-file::before { content: "=EE=80=A2"; }

.glyphicon-time::before { content: "=EE=80=A3"; }

.glyphicon-road::before { content: "=EE=80=A4"; }

.glyphicon-download-alt::before { content: "=EE=80=A5"; }

.glyphicon-download::before { content: "=EE=80=A6"; }

.glyphicon-upload::before { content: "=EE=80=A7"; }

.glyphicon-inbox::before { content: "=EE=80=A8"; }

.glyphicon-play-circle::before { content: "=EE=80=A9"; }

.glyphicon-repeat::before { content: "=EE=80=B0"; }

.glyphicon-refresh::before { content: "=EE=80=B1"; }

.glyphicon-list-alt::before { content: "=EE=80=B2"; }

.glyphicon-lock::before { content: "=EE=80=B3"; }

.glyphicon-flag::before { content: "=EE=80=B4"; }

.glyphicon-headphones::before { content: "=EE=80=B5"; }

.glyphicon-volume-off::before { content: "=EE=80=B6"; }

.glyphicon-volume-down::before { content: "=EE=80=B7"; }

.glyphicon-volume-up::before { content: "=EE=80=B8"; }

.glyphicon-qrcode::before { content: "=EE=80=B9"; }

.glyphicon-barcode::before { content: "=EE=81=80"; }

.glyphicon-tag::before { content: "=EE=81=81"; }

.glyphicon-tags::before { content: "=EE=81=82"; }

.glyphicon-book::before { content: "=EE=81=83"; }

.glyphicon-bookmark::before { content: "=EE=81=84"; }

.glyphicon-print::before { content: "=EE=81=85"; }

.glyphicon-camera::before { content: "=EE=81=86"; }

.glyphicon-font::before { content: "=EE=81=87"; }

.glyphicon-bold::before { content: "=EE=81=88"; }

.glyphicon-italic::before { content: "=EE=81=89"; }

.glyphicon-text-height::before { content: "=EE=81=90"; }

.glyphicon-text-width::before { content: "=EE=81=91"; }

.glyphicon-align-left::before { content: "=EE=81=92"; }

.glyphicon-align-center::before { content: "=EE=81=93"; }

.glyphicon-align-right::before { content: "=EE=81=94"; }

.glyphicon-align-justify::before { content: "=EE=81=95"; }

.glyphicon-list::before { content: "=EE=81=96"; }

.glyphicon-indent-left::before { content: "=EE=81=97"; }

.glyphicon-indent-right::before { content: "=EE=81=98"; }

.glyphicon-facetime-video::before { content: "=EE=81=99"; }

.glyphicon-picture::before { content: "=EE=81=A0"; }

.glyphicon-map-marker::before { content: "=EE=81=A2"; }

.glyphicon-adjust::before { content: "=EE=81=A3"; }

.glyphicon-tint::before { content: "=EE=81=A4"; }

.glyphicon-edit::before { content: "=EE=81=A5"; }

.glyphicon-share::before { content: "=EE=81=A6"; }

.glyphicon-check::before { content: "=EE=81=A7"; }

.glyphicon-move::before { content: "=EE=81=A8"; }

.glyphicon-step-backward::before { content: "=EE=81=A9"; }

.glyphicon-fast-backward::before { content: "=EE=81=B0"; }

.glyphicon-backward::before { content: "=EE=81=B1"; }

.glyphicon-play::before { content: "=EE=81=B2"; }

.glyphicon-pause::before { content: "=EE=81=B3"; }

.glyphicon-stop::before { content: "=EE=81=B4"; }

.glyphicon-forward::before { content: "=EE=81=B5"; }

.glyphicon-fast-forward::before { content: "=EE=81=B6"; }

.glyphicon-step-forward::before { content: "=EE=81=B7"; }

.glyphicon-eject::before { content: "=EE=81=B8"; }

.glyphicon-chevron-left::before { content: "=EE=81=B9"; }

.glyphicon-chevron-right::before { content: "=EE=82=80"; }

.glyphicon-plus-sign::before { content: "=EE=82=81"; }

.glyphicon-minus-sign::before { content: "=EE=82=82"; }

.glyphicon-remove-sign::before { content: "=EE=82=83"; }

.glyphicon-ok-sign::before { content: "=EE=82=84"; }

.glyphicon-question-sign::before { content: "=EE=82=85"; }

.glyphicon-info-sign::before { content: "=EE=82=86"; }

.glyphicon-screenshot::before { content: "=EE=82=87"; }

.glyphicon-remove-circle::before { content: "=EE=82=88"; }

.glyphicon-ok-circle::before { content: "=EE=82=89"; }

.glyphicon-ban-circle::before { content: "=EE=82=90"; }

.glyphicon-arrow-left::before { content: "=EE=82=91"; }

.glyphicon-arrow-right::before { content: "=EE=82=92"; }

.glyphicon-arrow-up::before { content: "=EE=82=93"; }

.glyphicon-arrow-down::before { content: "=EE=82=94"; }

.glyphicon-share-alt::before { content: "=EE=82=95"; }

.glyphicon-resize-full::before { content: "=EE=82=96"; }

.glyphicon-resize-small::before { content: "=EE=82=97"; }

.glyphicon-exclamation-sign::before { content: "=EE=84=81"; }

.glyphicon-gift::before { content: "=EE=84=82"; }

.glyphicon-leaf::before { content: "=EE=84=83"; }

.glyphicon-fire::before { content: "=EE=84=84"; }

.glyphicon-eye-open::before { content: "=EE=84=85"; }

.glyphicon-eye-close::before { content: "=EE=84=86"; }

.glyphicon-warning-sign::before { content: "=EE=84=87"; }

.glyphicon-plane::before { content: "=EE=84=88"; }

.glyphicon-calendar::before { content: "=EE=84=89"; }

.glyphicon-random::before { content: "=EE=84=90"; }

.glyphicon-comment::before { content: "=EE=84=91"; }

.glyphicon-magnet::before { content: "=EE=84=92"; }

.glyphicon-chevron-up::before { content: "=EE=84=93"; }

.glyphicon-chevron-down::before { content: "=EE=84=94"; }

.glyphicon-retweet::before { content: "=EE=84=95"; }

.glyphicon-shopping-cart::before { content: "=EE=84=96"; }

.glyphicon-folder-close::before { content: "=EE=84=97"; }

.glyphicon-folder-open::before { content: "=EE=84=98"; }

.glyphicon-resize-vertical::before { content: "=EE=84=99"; }

.glyphicon-resize-horizontal::before { content: "=EE=84=A0"; }

.glyphicon-hdd::before { content: "=EE=84=A1"; }

.glyphicon-bullhorn::before { content: "=EE=84=A2"; }

.glyphicon-bell::before { content: "=EE=84=A3"; }

.glyphicon-certificate::before { content: "=EE=84=A4"; }

.glyphicon-thumbs-up::before { content: "=EE=84=A5"; }

.glyphicon-thumbs-down::before { content: "=EE=84=A6"; }

.glyphicon-hand-right::before { content: "=EE=84=A7"; }

.glyphicon-hand-left::before { content: "=EE=84=A8"; }

.glyphicon-hand-up::before { content: "=EE=84=A9"; }

.glyphicon-hand-down::before { content: "=EE=84=B0"; }

.glyphicon-circle-arrow-right::before { content: "=EE=84=B1"; }

.glyphicon-circle-arrow-left::before { content: "=EE=84=B2"; }

.glyphicon-circle-arrow-up::before { content: "=EE=84=B3"; }

.glyphicon-circle-arrow-down::before { content: "=EE=84=B4"; }

.glyphicon-globe::before { content: "=EE=84=B5"; }

.glyphicon-wrench::before { content: "=EE=84=B6"; }

.glyphicon-tasks::before { content: "=EE=84=B7"; }

.glyphicon-filter::before { content: "=EE=84=B8"; }

.glyphicon-briefcase::before { content: "=EE=84=B9"; }

.glyphicon-fullscreen::before { content: "=EE=85=80"; }

.glyphicon-dashboard::before { content: "=EE=85=81"; }

.glyphicon-paperclip::before { content: "=EE=85=82"; }

.glyphicon-heart-empty::before { content: "=EE=85=83"; }

.glyphicon-link::before { content: "=EE=85=84"; }

.glyphicon-phone::before { content: "=EE=85=85"; }

.glyphicon-pushpin::before { content: "=EE=85=86"; }

.glyphicon-usd::before { content: "=EE=85=88"; }

.glyphicon-gbp::before { content: "=EE=85=89"; }

.glyphicon-sort::before { content: "=EE=85=90"; }

.glyphicon-sort-by-alphabet::before { content: "=EE=85=91"; }

.glyphicon-sort-by-alphabet-alt::before { content: "=EE=85=92"; }

.glyphicon-sort-by-order::before { content: "=EE=85=93"; }

.glyphicon-sort-by-order-alt::before { content: "=EE=85=94"; }

.glyphicon-sort-by-attributes::before { content: "=EE=85=95"; }

.glyphicon-sort-by-attributes-alt::before { content: "=EE=85=96"; }

.glyphicon-unchecked::before { content: "=EE=85=97"; }

.glyphicon-expand::before { content: "=EE=85=98"; }

.glyphicon-collapse-down::before { content: "=EE=85=99"; }

.glyphicon-collapse-up::before { content: "=EE=85=A0"; }

.glyphicon-log-in::before { content: "=EE=85=A1"; }

.glyphicon-flash::before { content: "=EE=85=A2"; }

.glyphicon-log-out::before { content: "=EE=85=A3"; }

.glyphicon-new-window::before { content: "=EE=85=A4"; }

.glyphicon-record::before { content: "=EE=85=A5"; }

.glyphicon-save::before { content: "=EE=85=A6"; }

.glyphicon-open::before { content: "=EE=85=A7"; }

.glyphicon-saved::before { content: "=EE=85=A8"; }

.glyphicon-import::before { content: "=EE=85=A9"; }

.glyphicon-export::before { content: "=EE=85=B0"; }

.glyphicon-send::before { content: "=EE=85=B1"; }

.glyphicon-floppy-disk::before { content: "=EE=85=B2"; }

.glyphicon-floppy-saved::before { content: "=EE=85=B3"; }

.glyphicon-floppy-remove::before { content: "=EE=85=B4"; }

.glyphicon-floppy-save::before { content: "=EE=85=B5"; }

.glyphicon-floppy-open::before { content: "=EE=85=B6"; }

.glyphicon-credit-card::before { content: "=EE=85=B7"; }

.glyphicon-transfer::before { content: "=EE=85=B8"; }

.glyphicon-cutlery::before { content: "=EE=85=B9"; }

.glyphicon-header::before { content: "=EE=86=80"; }

.glyphicon-compressed::before { content: "=EE=86=81"; }

.glyphicon-earphone::before { content: "=EE=86=82"; }

.glyphicon-phone-alt::before { content: "=EE=86=83"; }

.glyphicon-tower::before { content: "=EE=86=84"; }

.glyphicon-stats::before { content: "=EE=86=85"; }

.glyphicon-sd-video::before { content: "=EE=86=86"; }

.glyphicon-hd-video::before { content: "=EE=86=87"; }

.glyphicon-subtitles::before { content: "=EE=86=88"; }

.glyphicon-sound-stereo::before { content: "=EE=86=89"; }

.glyphicon-sound-dolby::before { content: "=EE=86=90"; }

.glyphicon-sound-5-1::before { content: "=EE=86=91"; }

.glyphicon-sound-6-1::before { content: "=EE=86=92"; }

.glyphicon-sound-7-1::before { content: "=EE=86=93"; }

.glyphicon-copyright-mark::before { content: "=EE=86=94"; }

.glyphicon-registration-mark::before { content: "=EE=86=95"; }

.glyphicon-cloud-download::before { content: "=EE=86=97"; }

.glyphicon-cloud-upload::before { content: "=EE=86=98"; }

.glyphicon-tree-conifer::before { content: "=EE=86=99"; }

.glyphicon-tree-deciduous::before { content: "=EE=88=80"; }

* { box-sizing: border-box; }

::before, ::after { box-sizing: border-box; }

html { font-size: 10px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

body { font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; font-si=
ze: 14px; line-height: 1.42857; color: rgb(51, 51, 51); background-color: r=
gb(255, 255, 255); }

input, button, select, textarea { font-family: inherit; font-size: inherit;=
 line-height: inherit; }

a { color: rgb(51, 122, 183); text-decoration: none; }

a:hover, a:focus { color: rgb(35, 82, 124); text-decoration: underline; }

a:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2px;=
 }

figure { margin: 0px; }

img { vertical-align: middle; }

.img-responsive, .thumbnail > img, .thumbnail a > img, .carousel-inner > .i=
tem > img, .carousel-inner > .item > a > img { display: block; max-width: 1=
00%; height: auto; }

.img-rounded { border-radius: 6px; }

.img-thumbnail { display: inline-block; max-width: 100%; height: auto; padd=
ing: 4px; line-height: 1.42857; background-color: rgb(255, 255, 255); borde=
r: 1px solid rgb(221, 221, 221); border-radius: 4px; transition: all 0.2s e=
ase-in-out 0s; }

.img-circle { border-radius: 50%; }

hr { margin-top: 20px; margin-bottom: 20px; border-width: 1px 0px 0px; bord=
er-right-style: initial; border-bottom-style: initial; border-left-style: i=
nitial; border-right-color: initial; border-bottom-color: initial; border-l=
eft-color: initial; border-image: initial; border-top-style: solid; border-=
top-color: rgb(238, 238, 238); }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); border: 0px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; margin: 0px; overflow: visible; clip: auto; }

h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 { font-family: inherit=
; font-weight: 500; line-height: 1.1; color: inherit; }

h1 small, h2 small, h3 small, h4 small, h5 small, h6 small, .h1 small, .h2 =
small, .h3 small, .h4 small, .h5 small, .h6 small, h1 .small, h2 .small, h3=
 .small, h4 .small, h5 .small, h6 .small, .h1 .small, .h2 .small, .h3 .smal=
l, .h4 .small, .h5 .small, .h6 .small { font-weight: 400; line-height: 1; c=
olor: rgb(119, 119, 119); }

h1, .h1, h2, .h2, h3, .h3 { margin-top: 20px; margin-bottom: 10px; }

h1 small, .h1 small, h2 small, .h2 small, h3 small, .h3 small, h1 .small, .=
h1 .small, h2 .small, .h2 .small, h3 .small, .h3 .small { font-size: 65%; }

h4, .h4, h5, .h5, h6, .h6 { margin-top: 10px; margin-bottom: 10px; }

h4 small, .h4 small, h5 small, .h5 small, h6 small, .h6 small, h4 .small, .=
h4 .small, h5 .small, .h5 .small, h6 .small, .h6 .small { font-size: 75%; }

h1, .h1 { font-size: 36px; }

h2, .h2 { font-size: 30px; }

h3, .h3 { font-size: 24px; }

h4, .h4 { font-size: 18px; }

h5, .h5 { font-size: 14px; }

h6, .h6 { font-size: 12px; }

p { margin: 0px 0px 10px; }

.lead { margin-bottom: 20px; font-size: 16px; font-weight: 300; line-height=
: 1.4; }

@media (min-width: 768px) {
  .lead { font-size: 21px; }
}

small, .small { font-size: 85%; }

mark, .mark { padding: 0.2em; background-color: rgb(252, 248, 227); }

.text-left { text-align: left; }

.text-right { text-align: right; }

.text-center { text-align: center; }

.text-justify { text-align: justify; }

.text-nowrap { white-space: nowrap; }

.text-lowercase { text-transform: lowercase; }

.text-uppercase { text-transform: uppercase; }

.text-capitalize { text-transform: capitalize; }

.text-muted { color: rgb(119, 119, 119); }

.text-primary { color: rgb(51, 122, 183); }

a.text-primary:hover { color: rgb(40, 96, 144); }

.text-success { color: rgb(60, 118, 61); }

a.text-success:hover { color: rgb(43, 84, 44); }

.text-info { color: rgb(49, 112, 143); }

a.text-info:hover { color: rgb(36, 82, 105); }

.text-warning { color: rgb(138, 109, 59); }

a.text-warning:hover { color: rgb(102, 81, 44); }

.text-danger { color: rgb(169, 68, 66); }

a.text-danger:hover { color: rgb(132, 53, 52); }

.bg-primary { color: rgb(255, 255, 255); background-color: rgb(51, 122, 183=
); }

a.bg-primary:hover { background-color: rgb(40, 96, 144); }

.bg-success { background-color: rgb(223, 240, 216); }

a.bg-success:hover { background-color: rgb(193, 226, 179); }

.bg-info { background-color: rgb(217, 237, 247); }

a.bg-info:hover { background-color: rgb(175, 217, 238); }

.bg-warning { background-color: rgb(252, 248, 227); }

a.bg-warning:hover { background-color: rgb(247, 236, 181); }

.bg-danger { background-color: rgb(242, 222, 222); }

a.bg-danger:hover { background-color: rgb(228, 185, 185); }

.page-header { padding-bottom: 9px; margin: 40px 0px 20px; border-bottom: 1=
px solid rgb(238, 238, 238); }

ul, ol { margin-top: 0px; margin-bottom: 10px; }

ul ul, ol ul, ul ol, ol ol { margin-bottom: 0px; }

.list-unstyled { padding-left: 0px; list-style: none; }

.list-inline { padding-left: 0px; margin-left: -5px; list-style: none; }

.list-inline > li { display: inline-block; padding-right: 5px; padding-left=
: 5px; }

dl { margin-top: 0px; margin-bottom: 20px; }

dt, dd { line-height: 1.42857; }

dt { font-weight: 700; }

dd { margin-left: 0px; }

@media (min-width: 768px) {
  .dl-horizontal dt { float: left; width: 160px; overflow: hidden; clear: l=
eft; text-align: right; text-overflow: ellipsis; white-space: nowrap; }
  .dl-horizontal dd { margin-left: 180px; }
}

abbr[title], abbr[data-original-title] { cursor: help; border-bottom: 1px d=
otted rgb(119, 119, 119); }

.initialism { font-size: 90%; text-transform: uppercase; }

blockquote { padding: 10px 20px; margin: 0px 0px 20px; font-size: 17.5px; b=
order-left: 5px solid rgb(238, 238, 238); }

blockquote p:last-child, blockquote ul:last-child, blockquote ol:last-child=
 { margin-bottom: 0px; }

blockquote footer, blockquote small, blockquote .small { display: block; fo=
nt-size: 80%; line-height: 1.42857; color: rgb(119, 119, 119); }

blockquote footer::before, blockquote small::before, blockquote .small::bef=
ore { content: "=E2=80=94=C2=A0"; }

.blockquote-reverse, blockquote.pull-right { padding-right: 15px; padding-l=
eft: 0px; text-align: right; border-right: 5px solid rgb(238, 238, 238); bo=
rder-left: 0px; }

.blockquote-reverse footer::before, blockquote.pull-right footer::before, .=
blockquote-reverse small::before, blockquote.pull-right small::before, .blo=
ckquote-reverse .small::before, blockquote.pull-right .small::before { cont=
ent: ""; }

.blockquote-reverse footer::after, blockquote.pull-right footer::after, .bl=
ockquote-reverse small::after, blockquote.pull-right small::after, .blockqu=
ote-reverse .small::after, blockquote.pull-right .small::after { content: "=
=C2=A0=E2=80=94"; }

address { margin-bottom: 20px; font-style: normal; line-height: 1.42857; }

code, kbd, pre, samp { font-family: Menlo, Monaco, Consolas, "Courier New",=
 monospace; }

code { padding: 2px 4px; font-size: 90%; color: rgb(199, 37, 78); backgroun=
d-color: rgb(249, 242, 244); border-radius: 4px; }

kbd { padding: 2px 4px; font-size: 90%; color: rgb(255, 255, 255); backgrou=
nd-color: rgb(51, 51, 51); border-radius: 3px; box-shadow: rgba(0, 0, 0, 0.=
25) 0px -1px 0px inset; }

kbd kbd { padding: 0px; font-size: 100%; font-weight: 700; box-shadow: none=
; }

pre { display: block; padding: 9.5px; margin: 0px 0px 10px; font-size: 13px=
; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; over=
flow-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px so=
lid rgb(204, 204, 204); border-radius: 4px; }

pre code { padding: 0px; font-size: inherit; color: inherit; white-space: p=
re-wrap; background-color: transparent; border-radius: 0px; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

.container { padding-right: 15px; padding-left: 15px; margin-right: auto; m=
argin-left: auto; }

@media (min-width: 768px) {
  .container { width: 750px; }
}

@media (min-width: 992px) {
  .container { width: 970px; }
}

@media (min-width: 1200px) {
  .container { width: 1170px; }
}

.container-fluid { padding-right: 15px; padding-left: 15px; margin-right: a=
uto; margin-left: auto; }

.row { margin-right: -15px; margin-left: -15px; }

.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2=
, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm=
-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-=
xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .co=
l-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .=
col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-x=
s-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-1=
2, .col-lg-12 { position: relative; min-height: 1px; padding-right: 15px; p=
adding-left: 15px; }

.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7=
, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12 { float: left; }

.col-xs-12 { width: 100%; }

.col-xs-11 { width: 91.6667%; }

.col-xs-10 { width: 83.3333%; }

.col-xs-9 { width: 75%; }

.col-xs-8 { width: 66.6667%; }

.col-xs-7 { width: 58.3333%; }

.col-xs-6 { width: 50%; }

.col-xs-5 { width: 41.6667%; }

.col-xs-4 { width: 33.3333%; }

.col-xs-3 { width: 25%; }

.col-xs-2 { width: 16.6667%; }

.col-xs-1 { width: 8.33333%; }

.col-xs-pull-12 { right: 100%; }

.col-xs-pull-11 { right: 91.6667%; }

.col-xs-pull-10 { right: 83.3333%; }

.col-xs-pull-9 { right: 75%; }

.col-xs-pull-8 { right: 66.6667%; }

.col-xs-pull-7 { right: 58.3333%; }

.col-xs-pull-6 { right: 50%; }

.col-xs-pull-5 { right: 41.6667%; }

.col-xs-pull-4 { right: 33.3333%; }

.col-xs-pull-3 { right: 25%; }

.col-xs-pull-2 { right: 16.6667%; }

.col-xs-pull-1 { right: 8.33333%; }

.col-xs-pull-0 { right: auto; }

.col-xs-push-12 { left: 100%; }

.col-xs-push-11 { left: 91.6667%; }

.col-xs-push-10 { left: 83.3333%; }

.col-xs-push-9 { left: 75%; }

.col-xs-push-8 { left: 66.6667%; }

.col-xs-push-7 { left: 58.3333%; }

.col-xs-push-6 { left: 50%; }

.col-xs-push-5 { left: 41.6667%; }

.col-xs-push-4 { left: 33.3333%; }

.col-xs-push-3 { left: 25%; }

.col-xs-push-2 { left: 16.6667%; }

.col-xs-push-1 { left: 8.33333%; }

.col-xs-push-0 { left: auto; }

.col-xs-offset-12 { margin-left: 100%; }

.col-xs-offset-11 { margin-left: 91.6667%; }

.col-xs-offset-10 { margin-left: 83.3333%; }

.col-xs-offset-9 { margin-left: 75%; }

.col-xs-offset-8 { margin-left: 66.6667%; }

.col-xs-offset-7 { margin-left: 58.3333%; }

.col-xs-offset-6 { margin-left: 50%; }

.col-xs-offset-5 { margin-left: 41.6667%; }

.col-xs-offset-4 { margin-left: 33.3333%; }

.col-xs-offset-3 { margin-left: 25%; }

.col-xs-offset-2 { margin-left: 16.6667%; }

.col-xs-offset-1 { margin-left: 8.33333%; }

.col-xs-offset-0 { margin-left: 0px; }

@media (min-width: 768px) {
  .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm=
-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12 { float: left;=
 }
  .col-sm-12 { width: 100%; }
  .col-sm-11 { width: 91.6667%; }
  .col-sm-10 { width: 83.3333%; }
  .col-sm-9 { width: 75%; }
  .col-sm-8 { width: 66.6667%; }
  .col-sm-7 { width: 58.3333%; }
  .col-sm-6 { width: 50%; }
  .col-sm-5 { width: 41.6667%; }
  .col-sm-4 { width: 33.3333%; }
  .col-sm-3 { width: 25%; }
  .col-sm-2 { width: 16.6667%; }
  .col-sm-1 { width: 8.33333%; }
  .col-sm-pull-12 { right: 100%; }
  .col-sm-pull-11 { right: 91.6667%; }
  .col-sm-pull-10 { right: 83.3333%; }
  .col-sm-pull-9 { right: 75%; }
  .col-sm-pull-8 { right: 66.6667%; }
  .col-sm-pull-7 { right: 58.3333%; }
  .col-sm-pull-6 { right: 50%; }
  .col-sm-pull-5 { right: 41.6667%; }
  .col-sm-pull-4 { right: 33.3333%; }
  .col-sm-pull-3 { right: 25%; }
  .col-sm-pull-2 { right: 16.6667%; }
  .col-sm-pull-1 { right: 8.33333%; }
  .col-sm-pull-0 { right: auto; }
  .col-sm-push-12 { left: 100%; }
  .col-sm-push-11 { left: 91.6667%; }
  .col-sm-push-10 { left: 83.3333%; }
  .col-sm-push-9 { left: 75%; }
  .col-sm-push-8 { left: 66.6667%; }
  .col-sm-push-7 { left: 58.3333%; }
  .col-sm-push-6 { left: 50%; }
  .col-sm-push-5 { left: 41.6667%; }
  .col-sm-push-4 { left: 33.3333%; }
  .col-sm-push-3 { left: 25%; }
  .col-sm-push-2 { left: 16.6667%; }
  .col-sm-push-1 { left: 8.33333%; }
  .col-sm-push-0 { left: auto; }
  .col-sm-offset-12 { margin-left: 100%; }
  .col-sm-offset-11 { margin-left: 91.6667%; }
  .col-sm-offset-10 { margin-left: 83.3333%; }
  .col-sm-offset-9 { margin-left: 75%; }
  .col-sm-offset-8 { margin-left: 66.6667%; }
  .col-sm-offset-7 { margin-left: 58.3333%; }
  .col-sm-offset-6 { margin-left: 50%; }
  .col-sm-offset-5 { margin-left: 41.6667%; }
  .col-sm-offset-4 { margin-left: 33.3333%; }
  .col-sm-offset-3 { margin-left: 25%; }
  .col-sm-offset-2 { margin-left: 16.6667%; }
  .col-sm-offset-1 { margin-left: 8.33333%; }
  .col-sm-offset-0 { margin-left: 0px; }
}

@media (min-width: 992px) {
  .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md=
-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 { float: left;=
 }
  .col-md-12 { width: 100%; }
  .col-md-11 { width: 91.6667%; }
  .col-md-10 { width: 83.3333%; }
  .col-md-9 { width: 75%; }
  .col-md-8 { width: 66.6667%; }
  .col-md-7 { width: 58.3333%; }
  .col-md-6 { width: 50%; }
  .col-md-5 { width: 41.6667%; }
  .col-md-4 { width: 33.3333%; }
  .col-md-3 { width: 25%; }
  .col-md-2 { width: 16.6667%; }
  .col-md-1 { width: 8.33333%; }
  .col-md-pull-12 { right: 100%; }
  .col-md-pull-11 { right: 91.6667%; }
  .col-md-pull-10 { right: 83.3333%; }
  .col-md-pull-9 { right: 75%; }
  .col-md-pull-8 { right: 66.6667%; }
  .col-md-pull-7 { right: 58.3333%; }
  .col-md-pull-6 { right: 50%; }
  .col-md-pull-5 { right: 41.6667%; }
  .col-md-pull-4 { right: 33.3333%; }
  .col-md-pull-3 { right: 25%; }
  .col-md-pull-2 { right: 16.6667%; }
  .col-md-pull-1 { right: 8.33333%; }
  .col-md-pull-0 { right: auto; }
  .col-md-push-12 { left: 100%; }
  .col-md-push-11 { left: 91.6667%; }
  .col-md-push-10 { left: 83.3333%; }
  .col-md-push-9 { left: 75%; }
  .col-md-push-8 { left: 66.6667%; }
  .col-md-push-7 { left: 58.3333%; }
  .col-md-push-6 { left: 50%; }
  .col-md-push-5 { left: 41.6667%; }
  .col-md-push-4 { left: 33.3333%; }
  .col-md-push-3 { left: 25%; }
  .col-md-push-2 { left: 16.6667%; }
  .col-md-push-1 { left: 8.33333%; }
  .col-md-push-0 { left: auto; }
  .col-md-offset-12 { margin-left: 100%; }
  .col-md-offset-11 { margin-left: 91.6667%; }
  .col-md-offset-10 { margin-left: 83.3333%; }
  .col-md-offset-9 { margin-left: 75%; }
  .col-md-offset-8 { margin-left: 66.6667%; }
  .col-md-offset-7 { margin-left: 58.3333%; }
  .col-md-offset-6 { margin-left: 50%; }
  .col-md-offset-5 { margin-left: 41.6667%; }
  .col-md-offset-4 { margin-left: 33.3333%; }
  .col-md-offset-3 { margin-left: 25%; }
  .col-md-offset-2 { margin-left: 16.6667%; }
  .col-md-offset-1 { margin-left: 8.33333%; }
  .col-md-offset-0 { margin-left: 0px; }
}

@media (min-width: 1200px) {
  .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg=
-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12 { float: left;=
 }
  .col-lg-12 { width: 100%; }
  .col-lg-11 { width: 91.6667%; }
  .col-lg-10 { width: 83.3333%; }
  .col-lg-9 { width: 75%; }
  .col-lg-8 { width: 66.6667%; }
  .col-lg-7 { width: 58.3333%; }
  .col-lg-6 { width: 50%; }
  .col-lg-5 { width: 41.6667%; }
  .col-lg-4 { width: 33.3333%; }
  .col-lg-3 { width: 25%; }
  .col-lg-2 { width: 16.6667%; }
  .col-lg-1 { width: 8.33333%; }
  .col-lg-pull-12 { right: 100%; }
  .col-lg-pull-11 { right: 91.6667%; }
  .col-lg-pull-10 { right: 83.3333%; }
  .col-lg-pull-9 { right: 75%; }
  .col-lg-pull-8 { right: 66.6667%; }
  .col-lg-pull-7 { right: 58.3333%; }
  .col-lg-pull-6 { right: 50%; }
  .col-lg-pull-5 { right: 41.6667%; }
  .col-lg-pull-4 { right: 33.3333%; }
  .col-lg-pull-3 { right: 25%; }
  .col-lg-pull-2 { right: 16.6667%; }
  .col-lg-pull-1 { right: 8.33333%; }
  .col-lg-pull-0 { right: auto; }
  .col-lg-push-12 { left: 100%; }
  .col-lg-push-11 { left: 91.6667%; }
  .col-lg-push-10 { left: 83.3333%; }
  .col-lg-push-9 { left: 75%; }
  .col-lg-push-8 { left: 66.6667%; }
  .col-lg-push-7 { left: 58.3333%; }
  .col-lg-push-6 { left: 50%; }
  .col-lg-push-5 { left: 41.6667%; }
  .col-lg-push-4 { left: 33.3333%; }
  .col-lg-push-3 { left: 25%; }
  .col-lg-push-2 { left: 16.6667%; }
  .col-lg-push-1 { left: 8.33333%; }
  .col-lg-push-0 { left: auto; }
  .col-lg-offset-12 { margin-left: 100%; }
  .col-lg-offset-11 { margin-left: 91.6667%; }
  .col-lg-offset-10 { margin-left: 83.3333%; }
  .col-lg-offset-9 { margin-left: 75%; }
  .col-lg-offset-8 { margin-left: 66.6667%; }
  .col-lg-offset-7 { margin-left: 58.3333%; }
  .col-lg-offset-6 { margin-left: 50%; }
  .col-lg-offset-5 { margin-left: 41.6667%; }
  .col-lg-offset-4 { margin-left: 33.3333%; }
  .col-lg-offset-3 { margin-left: 25%; }
  .col-lg-offset-2 { margin-left: 16.6667%; }
  .col-lg-offset-1 { margin-left: 8.33333%; }
  .col-lg-offset-0 { margin-left: 0px; }
}

table { background-color: transparent; }

caption { padding-top: 8px; padding-bottom: 8px; color: rgb(119, 119, 119);=
 text-align: left; }

th { text-align: left; }

.table { width: 100%; max-width: 100%; margin-bottom: 20px; }

.table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > t=
h, .table > thead > tr > td, .table > tbody > tr > td, .table > tfoot > tr =
> td { padding: 8px; line-height: 1.42857; vertical-align: top; border-top:=
 1px solid rgb(221, 221, 221); }

.table > thead > tr > th { vertical-align: bottom; border-bottom: 2px solid=
 rgb(221, 221, 221); }

.table > caption + thead > tr:first-child > th, .table > colgroup + thead >=
 tr:first-child > th, .table > thead:first-child > tr:first-child > th, .ta=
ble > caption + thead > tr:first-child > td, .table > colgroup + thead > tr=
:first-child > td, .table > thead:first-child > tr:first-child > td { borde=
r-top: 0px; }

.table > tbody + tbody { border-top: 2px solid rgb(221, 221, 221); }

.table .table { background-color: rgb(255, 255, 255); }

.table-condensed > thead > tr > th, .table-condensed > tbody > tr > th, .ta=
ble-condensed > tfoot > tr > th, .table-condensed > thead > tr > td, .table=
-condensed > tbody > tr > td, .table-condensed > tfoot > tr > td { padding:=
 5px; }

.table-bordered { border: 1px solid rgb(221, 221, 221); }

.table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .tabl=
e-bordered > tfoot > tr > th, .table-bordered > thead > tr > td, .table-bor=
dered > tbody > tr > td, .table-bordered > tfoot > tr > td { border: 1px so=
lid rgb(221, 221, 221); }

.table-bordered > thead > tr > th, .table-bordered > thead > tr > td { bord=
er-bottom-width: 2px; }

.table-striped > tbody > tr:nth-child(2n+1) { background-color: rgb(249, 24=
9, 249); }

.table-hover > tbody > tr:hover { background-color: rgb(245, 245, 245); }

table col[class*=3D"col-"] { position: static; display: table-column; float=
: none; }

table td[class*=3D"col-"], table th[class*=3D"col-"] { position: static; di=
splay: table-cell; float: none; }

.table > thead > tr > td.active, .table > tbody > tr > td.active, .table > =
tfoot > tr > td.active, .table > thead > tr > th.active, .table > tbody > t=
r > th.active, .table > tfoot > tr > th.active, .table > thead > tr.active =
> td, .table > tbody > tr.active > td, .table > tfoot > tr.active > td, .ta=
ble > thead > tr.active > th, .table > tbody > tr.active > th, .table > tfo=
ot > tr.active > th { background-color: rgb(245, 245, 245); }

.table-hover > tbody > tr > td.active:hover, .table-hover > tbody > tr > th=
.active:hover, .table-hover > tbody > tr.active:hover > td, .table-hover > =
tbody > tr:hover > .active, .table-hover > tbody > tr.active:hover > th { b=
ackground-color: rgb(232, 232, 232); }

.table > thead > tr > td.success, .table > tbody > tr > td.success, .table =
> tfoot > tr > td.success, .table > thead > tr > th.success, .table > tbody=
 > tr > th.success, .table > tfoot > tr > th.success, .table > thead > tr.s=
uccess > td, .table > tbody > tr.success > td, .table > tfoot > tr.success =
> td, .table > thead > tr.success > th, .table > tbody > tr.success > th, .=
table > tfoot > tr.success > th { background-color: rgb(223, 240, 216); }

.table-hover > tbody > tr > td.success:hover, .table-hover > tbody > tr > t=
h.success:hover, .table-hover > tbody > tr.success:hover > td, .table-hover=
 > tbody > tr:hover > .success, .table-hover > tbody > tr.success:hover > t=
h { background-color: rgb(208, 233, 198); }

.table > thead > tr > td.info, .table > tbody > tr > td.info, .table > tfoo=
t > tr > td.info, .table > thead > tr > th.info, .table > tbody > tr > th.i=
nfo, .table > tfoot > tr > th.info, .table > thead > tr.info > td, .table >=
 tbody > tr.info > td, .table > tfoot > tr.info > td, .table > thead > tr.i=
nfo > th, .table > tbody > tr.info > th, .table > tfoot > tr.info > th { ba=
ckground-color: rgb(217, 237, 247); }

.table-hover > tbody > tr > td.info:hover, .table-hover > tbody > tr > th.i=
nfo:hover, .table-hover > tbody > tr.info:hover > td, .table-hover > tbody =
> tr:hover > .info, .table-hover > tbody > tr.info:hover > th { background-=
color: rgb(196, 227, 243); }

.table > thead > tr > td.warning, .table > tbody > tr > td.warning, .table =
> tfoot > tr > td.warning, .table > thead > tr > th.warning, .table > tbody=
 > tr > th.warning, .table > tfoot > tr > th.warning, .table > thead > tr.w=
arning > td, .table > tbody > tr.warning > td, .table > tfoot > tr.warning =
> td, .table > thead > tr.warning > th, .table > tbody > tr.warning > th, .=
table > tfoot > tr.warning > th { background-color: rgb(252, 248, 227); }

.table-hover > tbody > tr > td.warning:hover, .table-hover > tbody > tr > t=
h.warning:hover, .table-hover > tbody > tr.warning:hover > td, .table-hover=
 > tbody > tr:hover > .warning, .table-hover > tbody > tr.warning:hover > t=
h { background-color: rgb(250, 242, 204); }

.table > thead > tr > td.danger, .table > tbody > tr > td.danger, .table > =
tfoot > tr > td.danger, .table > thead > tr > th.danger, .table > tbody > t=
r > th.danger, .table > tfoot > tr > th.danger, .table > thead > tr.danger =
> td, .table > tbody > tr.danger > td, .table > tfoot > tr.danger > td, .ta=
ble > thead > tr.danger > th, .table > tbody > tr.danger > th, .table > tfo=
ot > tr.danger > th { background-color: rgb(242, 222, 222); }

.table-hover > tbody > tr > td.danger:hover, .table-hover > tbody > tr > th=
.danger:hover, .table-hover > tbody > tr.danger:hover > td, .table-hover > =
tbody > tr:hover > .danger, .table-hover > tbody > tr.danger:hover > th { b=
ackground-color: rgb(235, 204, 204); }

.table-responsive { min-height: 0.01%; overflow-x: auto; }

@media screen and (max-width: 767px) {
  .table-responsive { width: 100%; margin-bottom: 15px; overflow-y: hidden;=
 border: 1px solid rgb(221, 221, 221); }
  .table-responsive > .table { margin-bottom: 0px; }
  .table-responsive > .table > thead > tr > th, .table-responsive > .table =
> tbody > tr > th, .table-responsive > .table > tfoot > tr > th, .table-res=
ponsive > .table > thead > tr > td, .table-responsive > .table > tbody > tr=
 > td, .table-responsive > .table > tfoot > tr > td { white-space: nowrap; =
}
  .table-responsive > .table-bordered { border: 0px; }
  .table-responsive > .table-bordered > thead > tr > th:first-child, .table=
-responsive > .table-bordered > tbody > tr > th:first-child, .table-respons=
ive > .table-bordered > tfoot > tr > th:first-child, .table-responsive > .t=
able-bordered > thead > tr > td:first-child, .table-responsive > .table-bor=
dered > tbody > tr > td:first-child, .table-responsive > .table-bordered > =
tfoot > tr > td:first-child { border-left: 0px; }
  .table-responsive > .table-bordered > thead > tr > th:last-child, .table-=
responsive > .table-bordered > tbody > tr > th:last-child, .table-responsiv=
e > .table-bordered > tfoot > tr > th:last-child, .table-responsive > .tabl=
e-bordered > thead > tr > td:last-child, .table-responsive > .table-bordere=
d > tbody > tr > td:last-child, .table-responsive > .table-bordered > tfoot=
 > tr > td:last-child { border-right: 0px; }
  .table-responsive > .table-bordered > tbody > tr:last-child > th, .table-=
responsive > .table-bordered > tfoot > tr:last-child > th, .table-responsiv=
e > .table-bordered > tbody > tr:last-child > td, .table-responsive > .tabl=
e-bordered > tfoot > tr:last-child > td { border-bottom: 0px; }
}

fieldset { min-width: 0px; padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; padding: 0px; margin-bottom: 20px; fo=
nt-size: 21px; line-height: inherit; color: rgb(51, 51, 51); border-width: =
0px 0px 1px; border-top-style: initial; border-right-style: initial; border=
-left-style: initial; border-top-color: initial; border-right-color: initia=
l; border-left-color: initial; border-image: initial; border-bottom-style: =
solid; border-bottom-color: rgb(229, 229, 229); }

label { display: inline-block; max-width: 100%; margin-bottom: 5px; font-we=
ight: 700; }

input[type=3D"search"] { box-sizing: border-box; }

input[type=3D"radio"], input[type=3D"checkbox"] { margin: 4px 0px 0px; line=
-height: normal; }

input[type=3D"file"] { display: block; }

input[type=3D"range"] { display: block; width: 100%; }

select[multiple], select[size] { height: auto; }

input[type=3D"file"]:focus, input[type=3D"radio"]:focus, input[type=3D"chec=
kbox"]:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: =
-2px; }

output { display: block; padding-top: 7px; font-size: 14px; line-height: 1.=
42857; color: rgb(85, 85, 85); }

.form-control { display: block; width: 100%; height: 34px; padding: 6px 12p=
x; font-size: 14px; line-height: 1.42857; color: rgb(85, 85, 85); backgroun=
d-color: rgb(255, 255, 255); background-image: none; border: 1px solid rgb(=
204, 204, 204); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.075) 0px 1p=
x 1px inset; transition: border-color 0.15s ease-in-out 0s, box-shadow 0.15=
s ease-in-out 0s; }

.form-control:focus { border-color: rgb(102, 175, 233); outline: 0px; box-s=
hadow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgba(102, 175, 233, 0.6) 0px=
 0px 8px; }

.form-control::-webkit-input-placeholder { color: rgb(153, 153, 153); }

.form-control[disabled], .form-control[readonly], fieldset[disabled] .form-=
control { cursor: not-allowed; background-color: rgb(238, 238, 238); opacit=
y: 1; }

textarea.form-control { height: auto; }

input[type=3D"search"] { appearance: none; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type=3D"date"], input[type=3D"time"], input[type=3D"datetime-local"=
], input[type=3D"month"] { line-height: 34px; }
  input[type=3D"date"].input-sm, input[type=3D"time"].input-sm, input[type=
=3D"datetime-local"].input-sm, input[type=3D"month"].input-sm { line-height=
: 30px; }
  input[type=3D"date"].input-lg, input[type=3D"time"].input-lg, input[type=
=3D"datetime-local"].input-lg, input[type=3D"month"].input-lg { line-height=
: 46px; }
}

.form-group { margin-bottom: 15px; }

.radio, .checkbox { position: relative; display: block; margin-top: 10px; m=
argin-bottom: 10px; }

.radio label, .checkbox label { min-height: 20px; padding-left: 20px; margi=
n-bottom: 0px; font-weight: 400; cursor: pointer; }

.radio input[type=3D"radio"], .radio-inline input[type=3D"radio"], .checkbo=
x input[type=3D"checkbox"], .checkbox-inline input[type=3D"checkbox"] { pos=
ition: absolute; margin-left: -20px; }

.radio + .radio, .checkbox + .checkbox { margin-top: -5px; }

.radio-inline, .checkbox-inline { display: inline-block; padding-left: 20px=
; margin-bottom: 0px; font-weight: 400; vertical-align: middle; cursor: poi=
nter; }

.radio-inline + .radio-inline, .checkbox-inline + .checkbox-inline { margin=
-top: 0px; margin-left: 10px; }

input[type=3D"radio"][disabled], input[type=3D"checkbox"][disabled], input[=
type=3D"radio"].disabled, input[type=3D"checkbox"].disabled, fieldset[disab=
led] input[type=3D"radio"], fieldset[disabled] input[type=3D"checkbox"] { c=
ursor: not-allowed; }

.radio-inline.disabled, .checkbox-inline.disabled, fieldset[disabled] .radi=
o-inline, fieldset[disabled] .checkbox-inline { cursor: not-allowed; }

.radio.disabled label, .checkbox.disabled label, fieldset[disabled] .radio =
label, fieldset[disabled] .checkbox label { cursor: not-allowed; }

.form-control-static { padding-top: 7px; padding-bottom: 7px; margin-bottom=
: 0px; }

.form-control-static.input-lg, .form-control-static.input-sm { padding-righ=
t: 0px; padding-left: 0px; }

.input-sm, .form-group-sm .form-control { height: 30px; padding: 5px 10px; =
font-size: 12px; line-height: 1.5; border-radius: 3px; }

select.input-sm, select.form-group-sm .form-control { height: 30px; line-he=
ight: 30px; }

textarea.input-sm, textarea.form-group-sm .form-control, select[multiple].i=
nput-sm, select[multiple].form-group-sm .form-control { height: auto; }

.input-lg, .form-group-lg .form-control { height: 46px; padding: 10px 16px;=
 font-size: 18px; line-height: 1.33; border-radius: 6px; }

select.input-lg, select.form-group-lg .form-control { height: 46px; line-he=
ight: 46px; }

textarea.input-lg, textarea.form-group-lg .form-control, select[multiple].i=
nput-lg, select[multiple].form-group-lg .form-control { height: auto; }

.has-feedback { position: relative; }

.has-feedback .form-control { padding-right: 42.5px; }

.form-control-feedback { position: absolute; top: 0px; right: 0px; z-index:=
 2; display: block; width: 34px; height: 34px; line-height: 34px; text-alig=
n: center; pointer-events: none; }

.input-lg + .form-control-feedback { width: 46px; height: 46px; line-height=
: 46px; }

.input-sm + .form-control-feedback { width: 30px; height: 30px; line-height=
: 30px; }

.has-success .help-block, .has-success .control-label, .has-success .radio,=
 .has-success .checkbox, .has-success .radio-inline, .has-success .checkbox=
-inline, .has-success.radio label, .has-success.checkbox label, .has-succes=
s.radio-inline label, .has-success.checkbox-inline label { color: rgb(60, 1=
18, 61); }

.has-success .form-control { border-color: rgb(60, 118, 61); box-shadow: rg=
ba(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-success .form-control:focus { border-color: rgb(43, 84, 44); box-shado=
w: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(103, 177, 104) 0px 0px 6px; =
}

.has-success .input-group-addon { color: rgb(60, 118, 61); background-color=
: rgb(223, 240, 216); border-color: rgb(60, 118, 61); }

.has-success .form-control-feedback { color: rgb(60, 118, 61); }

.has-warning .help-block, .has-warning .control-label, .has-warning .radio,=
 .has-warning .checkbox, .has-warning .radio-inline, .has-warning .checkbox=
-inline, .has-warning.radio label, .has-warning.checkbox label, .has-warnin=
g.radio-inline label, .has-warning.checkbox-inline label { color: rgb(138, =
109, 59); }

.has-warning .form-control { border-color: rgb(138, 109, 59); box-shadow: r=
gba(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-warning .form-control:focus { border-color: rgb(102, 81, 44); box-shad=
ow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(192, 161, 107) 0px 0px 6px;=
 }

.has-warning .input-group-addon { color: rgb(138, 109, 59); background-colo=
r: rgb(252, 248, 227); border-color: rgb(138, 109, 59); }

.has-warning .form-control-feedback { color: rgb(138, 109, 59); }

.has-error .help-block, .has-error .control-label, .has-error .radio, .has-=
error .checkbox, .has-error .radio-inline, .has-error .checkbox-inline, .ha=
s-error.radio label, .has-error.checkbox label, .has-error.radio-inline lab=
el, .has-error.checkbox-inline label { color: rgb(169, 68, 66); }

.has-error .form-control { border-color: rgb(169, 68, 66); box-shadow: rgba=
(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-error .form-control:focus { border-color: rgb(132, 53, 52); box-shadow=
: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(206, 132, 131) 0px 0px 6px; }

.has-error .input-group-addon { color: rgb(169, 68, 66); background-color: =
rgb(242, 222, 222); border-color: rgb(169, 68, 66); }

.has-error .form-control-feedback { color: rgb(169, 68, 66); }

.has-feedback label ~ .form-control-feedback { top: 25px; }

.has-feedback label.sr-only ~ .form-control-feedback { top: 0px; }

.help-block { display: block; margin-top: 5px; margin-bottom: 10px; color: =
rgb(115, 115, 115); }

@media (min-width: 768px) {
  .form-inline .form-group { display: inline-block; margin-bottom: 0px; ver=
tical-align: middle; }
  .form-inline .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .form-inline .form-control-static { display: inline-block; }
  .form-inline .input-group { display: inline-table; vertical-align: middle=
; }
  .form-inline .input-group .input-group-addon, .form-inline .input-group .=
input-group-btn, .form-inline .input-group .form-control { width: auto; }
  .form-inline .input-group > .form-control { width: 100%; }
  .form-inline .control-label { margin-bottom: 0px; vertical-align: middle;=
 }
  .form-inline .radio, .form-inline .checkbox { display: inline-block; marg=
in-top: 0px; margin-bottom: 0px; vertical-align: middle; }
  .form-inline .radio label, .form-inline .checkbox label { padding-left: 0=
px; }
  .form-inline .radio input[type=3D"radio"], .form-inline .checkbox input[t=
ype=3D"checkbox"] { position: relative; margin-left: 0px; }
  .form-inline .has-feedback .form-control-feedback { top: 0px; }
}

.form-horizontal .radio, .form-horizontal .checkbox, .form-horizontal .radi=
o-inline, .form-horizontal .checkbox-inline { padding-top: 7px; margin-top:=
 0px; margin-bottom: 0px; }

.form-horizontal .radio, .form-horizontal .checkbox { min-height: 27px; }

.form-horizontal .form-group { margin-right: -15px; margin-left: -15px; }

@media (min-width: 768px) {
  .form-horizontal .control-label { padding-top: 7px; margin-bottom: 0px; t=
ext-align: right; }
}

.form-horizontal .has-feedback .form-control-feedback { right: 15px; }

@media (min-width: 768px) {
  .form-horizontal .form-group-lg .control-label { padding-top: 14.3px; }
}

@media (min-width: 768px) {
  .form-horizontal .form-group-sm .control-label { padding-top: 6px; }
}

.btn { display: inline-block; padding: 6px 12px; margin-bottom: 0px; font-s=
ize: 14px; font-weight: 400; line-height: 1.42857; text-align: center; whit=
e-space: nowrap; vertical-align: middle; touch-action: manipulation; cursor=
: pointer; user-select: none; background-image: none; border: 1px solid tra=
nsparent; border-radius: 4px; }

.btn:focus, .btn:active:focus, .btn.active:focus, .btn.focus, .btn:active.f=
ocus, .btn.active.focus { outline: -webkit-focus-ring-color auto 5px; outli=
ne-offset: -2px; }

.btn:hover, .btn:focus, .btn.focus { color: rgb(51, 51, 51); text-decoratio=
n: none; }

.btn:active, .btn.active { background-image: none; outline: 0px; box-shadow=
: rgba(0, 0, 0, 0.125) 0px 3px 5px inset; }

.btn.disabled, .btn[disabled], fieldset[disabled] .btn { pointer-events: no=
ne; cursor: not-allowed; box-shadow: none; opacity: 0.65; }

.btn-default { color: rgb(51, 51, 51); background-color: rgb(255, 255, 255)=
; border-color: rgb(204, 204, 204); }

.btn-default:hover, .btn-default:focus, .btn-default.focus, .btn-default:ac=
tive, .btn-default.active, .open > .dropdown-toggle.btn-default { color: rg=
b(51, 51, 51); background-color: rgb(230, 230, 230); border-color: rgb(173,=
 173, 173); }

.btn-default:active, .btn-default.active, .open > .dropdown-toggle.btn-defa=
ult { background-image: none; }

.btn-default.disabled, .btn-default[disabled], fieldset[disabled] .btn-defa=
ult, .btn-default.disabled:hover, .btn-default[disabled]:hover, fieldset[di=
sabled] .btn-default:hover, .btn-default.disabled:focus, .btn-default[disab=
led]:focus, fieldset[disabled] .btn-default:focus, .btn-default.disabled.fo=
cus, .btn-default[disabled].focus, fieldset[disabled] .btn-default.focus, .=
btn-default.disabled:active, .btn-default[disabled]:active, fieldset[disabl=
ed] .btn-default:active, .btn-default.disabled.active, .btn-default[disable=
d].active, fieldset[disabled] .btn-default.active { background-color: rgb(2=
55, 255, 255); border-color: rgb(204, 204, 204); }

.btn-default .badge { color: rgb(255, 255, 255); background-color: rgb(51, =
51, 51); }

.btn-primary { color: rgb(255, 255, 255); background-color: rgb(51, 122, 18=
3); border-color: rgb(46, 109, 164); }

.btn-primary:hover, .btn-primary:focus, .btn-primary.focus, .btn-primary:ac=
tive, .btn-primary.active, .open > .dropdown-toggle.btn-primary { color: rg=
b(255, 255, 255); background-color: rgb(40, 96, 144); border-color: rgb(32,=
 77, 116); }

.btn-primary:active, .btn-primary.active, .open > .dropdown-toggle.btn-prim=
ary { background-image: none; }

.btn-primary.disabled, .btn-primary[disabled], fieldset[disabled] .btn-prim=
ary, .btn-primary.disabled:hover, .btn-primary[disabled]:hover, fieldset[di=
sabled] .btn-primary:hover, .btn-primary.disabled:focus, .btn-primary[disab=
led]:focus, fieldset[disabled] .btn-primary:focus, .btn-primary.disabled.fo=
cus, .btn-primary[disabled].focus, fieldset[disabled] .btn-primary.focus, .=
btn-primary.disabled:active, .btn-primary[disabled]:active, fieldset[disabl=
ed] .btn-primary:active, .btn-primary.disabled.active, .btn-primary[disable=
d].active, fieldset[disabled] .btn-primary.active { background-color: rgb(5=
1, 122, 183); border-color: rgb(46, 109, 164); }

.btn-primary .badge { color: rgb(51, 122, 183); background-color: rgb(255, =
255, 255); }

.btn-success { color: rgb(255, 255, 255); background-color: rgb(92, 184, 92=
); border-color: rgb(76, 174, 76); }

.btn-success:hover, .btn-success:focus, .btn-success.focus, .btn-success:ac=
tive, .btn-success.active, .open > .dropdown-toggle.btn-success { color: rg=
b(255, 255, 255); background-color: rgb(68, 157, 68); border-color: rgb(57,=
 132, 57); }

.btn-success:active, .btn-success.active, .open > .dropdown-toggle.btn-succ=
ess { background-image: none; }

.btn-success.disabled, .btn-success[disabled], fieldset[disabled] .btn-succ=
ess, .btn-success.disabled:hover, .btn-success[disabled]:hover, fieldset[di=
sabled] .btn-success:hover, .btn-success.disabled:focus, .btn-success[disab=
led]:focus, fieldset[disabled] .btn-success:focus, .btn-success.disabled.fo=
cus, .btn-success[disabled].focus, fieldset[disabled] .btn-success.focus, .=
btn-success.disabled:active, .btn-success[disabled]:active, fieldset[disabl=
ed] .btn-success:active, .btn-success.disabled.active, .btn-success[disable=
d].active, fieldset[disabled] .btn-success.active { background-color: rgb(9=
2, 184, 92); border-color: rgb(76, 174, 76); }

.btn-success .badge { color: rgb(92, 184, 92); background-color: rgb(255, 2=
55, 255); }

.btn-info { color: rgb(255, 255, 255); background-color: rgb(91, 192, 222);=
 border-color: rgb(70, 184, 218); }

.btn-info:hover, .btn-info:focus, .btn-info.focus, .btn-info:active, .btn-i=
nfo.active, .open > .dropdown-toggle.btn-info { color: rgb(255, 255, 255); =
background-color: rgb(49, 176, 213); border-color: rgb(38, 154, 188); }

.btn-info:active, .btn-info.active, .open > .dropdown-toggle.btn-info { bac=
kground-image: none; }

.btn-info.disabled, .btn-info[disabled], fieldset[disabled] .btn-info, .btn=
-info.disabled:hover, .btn-info[disabled]:hover, fieldset[disabled] .btn-in=
fo:hover, .btn-info.disabled:focus, .btn-info[disabled]:focus, fieldset[dis=
abled] .btn-info:focus, .btn-info.disabled.focus, .btn-info[disabled].focus=
, fieldset[disabled] .btn-info.focus, .btn-info.disabled:active, .btn-info[=
disabled]:active, fieldset[disabled] .btn-info:active, .btn-info.disabled.a=
ctive, .btn-info[disabled].active, fieldset[disabled] .btn-info.active { ba=
ckground-color: rgb(91, 192, 222); border-color: rgb(70, 184, 218); }

.btn-info .badge { color: rgb(91, 192, 222); background-color: rgb(255, 255=
, 255); }

.btn-warning { color: rgb(255, 255, 255); background-color: rgb(240, 173, 7=
8); border-color: rgb(238, 162, 54); }

.btn-warning:hover, .btn-warning:focus, .btn-warning.focus, .btn-warning:ac=
tive, .btn-warning.active, .open > .dropdown-toggle.btn-warning { color: rg=
b(255, 255, 255); background-color: rgb(236, 151, 31); border-color: rgb(21=
3, 133, 18); }

.btn-warning:active, .btn-warning.active, .open > .dropdown-toggle.btn-warn=
ing { background-image: none; }

.btn-warning.disabled, .btn-warning[disabled], fieldset[disabled] .btn-warn=
ing, .btn-warning.disabled:hover, .btn-warning[disabled]:hover, fieldset[di=
sabled] .btn-warning:hover, .btn-warning.disabled:focus, .btn-warning[disab=
led]:focus, fieldset[disabled] .btn-warning:focus, .btn-warning.disabled.fo=
cus, .btn-warning[disabled].focus, fieldset[disabled] .btn-warning.focus, .=
btn-warning.disabled:active, .btn-warning[disabled]:active, fieldset[disabl=
ed] .btn-warning:active, .btn-warning.disabled.active, .btn-warning[disable=
d].active, fieldset[disabled] .btn-warning.active { background-color: rgb(2=
40, 173, 78); border-color: rgb(238, 162, 54); }

.btn-warning .badge { color: rgb(240, 173, 78); background-color: rgb(255, =
255, 255); }

.btn-danger { color: rgb(255, 255, 255); background-color: rgb(217, 83, 79)=
; border-color: rgb(212, 63, 58); }

.btn-danger:hover, .btn-danger:focus, .btn-danger.focus, .btn-danger:active=
, .btn-danger.active, .open > .dropdown-toggle.btn-danger { color: rgb(255,=
 255, 255); background-color: rgb(201, 48, 44); border-color: rgb(172, 41, =
37); }

.btn-danger:active, .btn-danger.active, .open > .dropdown-toggle.btn-danger=
 { background-image: none; }

.btn-danger.disabled, .btn-danger[disabled], fieldset[disabled] .btn-danger=
, .btn-danger.disabled:hover, .btn-danger[disabled]:hover, fieldset[disable=
d] .btn-danger:hover, .btn-danger.disabled:focus, .btn-danger[disabled]:foc=
us, fieldset[disabled] .btn-danger:focus, .btn-danger.disabled.focus, .btn-=
danger[disabled].focus, fieldset[disabled] .btn-danger.focus, .btn-danger.d=
isabled:active, .btn-danger[disabled]:active, fieldset[disabled] .btn-dange=
r:active, .btn-danger.disabled.active, .btn-danger[disabled].active, fields=
et[disabled] .btn-danger.active { background-color: rgb(217, 83, 79); borde=
r-color: rgb(212, 63, 58); }

.btn-danger .badge { color: rgb(217, 83, 79); background-color: rgb(255, 25=
5, 255); }

.btn-link { font-weight: 400; color: rgb(51, 122, 183); border-radius: 0px;=
 }

.btn-link, .btn-link:active, .btn-link.active, .btn-link[disabled], fieldse=
t[disabled] .btn-link { background-color: transparent; box-shadow: none; }

.btn-link, .btn-link:hover, .btn-link:focus, .btn-link:active { border-colo=
r: transparent; }

.btn-link:hover, .btn-link:focus { color: rgb(35, 82, 124); text-decoration=
: underline; background-color: transparent; }

.btn-link[disabled]:hover, fieldset[disabled] .btn-link:hover, .btn-link[di=
sabled]:focus, fieldset[disabled] .btn-link:focus { color: rgb(119, 119, 11=
9); text-decoration: none; }

.btn-lg, .btn-group-lg > .btn { padding: 10px 16px; font-size: 18px; line-h=
eight: 1.33; border-radius: 6px; }

.btn-sm, .btn-group-sm > .btn { padding: 5px 10px; font-size: 12px; line-he=
ight: 1.5; border-radius: 3px; }

.btn-xs, .btn-group-xs > .btn { padding: 1px 5px; font-size: 12px; line-hei=
ght: 1.5; border-radius: 3px; }

.btn-block { display: block; width: 100%; }

.btn-block + .btn-block { margin-top: 5px; }

input[type=3D"submit"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"button"].btn-block { width: 100%; }

.fade { opacity: 0; transition: opacity 0.15s linear 0s; }

.fade.in { opacity: 1; }

.collapse { display: none; visibility: hidden; }

.collapse.in { display: block; visibility: visible; }

tr.collapse.in { display: table-row; }

tbody.collapse.in { display: table-row-group; }

.collapsing { position: relative; height: 0px; overflow: hidden; transition=
-timing-function: ease; transition-duration: 0.35s; transition-property: he=
ight, visibility; }

.caret { display: inline-block; width: 0px; height: 0px; margin-left: 2px; =
vertical-align: middle; border-top: 4px solid; border-right: 4px solid tran=
sparent; border-left: 4px solid transparent; }

.dropdown { position: relative; }

.dropdown-toggle:focus { outline: 0px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 160px; padding: 5px 0px; margin: 2px =
0px 0px; font-size: 14px; text-align: left; list-style: none; background-co=
lor: rgb(255, 255, 255); background-clip: padding-box; border: 1px solid rg=
ba(0, 0, 0, 0.15); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.176) 0px=
 6px 12px; }

.dropdown-menu.pull-right { right: 0px; left: auto; }

.dropdown-menu .divider { height: 1px; margin: 9px 0px; overflow: hidden; b=
ackground-color: rgb(229, 229, 229); }

.dropdown-menu > li > a { display: block; padding: 3px 20px; clear: both; f=
ont-weight: 400; line-height: 1.42857; color: rgb(51, 51, 51); white-space:=
 nowrap; }

.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus { color: rgb(3=
8, 38, 38); text-decoration: none; background-color: rgb(245, 245, 245); }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:hover, .dropdown=
-menu > .active > a:focus { color: rgb(255, 255, 255); text-decoration: non=
e; background-color: rgb(51, 122, 183); outline: 0px; }

.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:hover, .drop=
down-menu > .disabled > a:focus { color: rgb(119, 119, 119); }

.dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus =
{ text-decoration: none; cursor: not-allowed; background-color: transparent=
; background-image: none; }

.open > .dropdown-menu { display: block; }

.open > a { outline: 0px; }

.dropdown-menu-right { right: 0px; left: auto; }

.dropdown-menu-left { right: auto; left: 0px; }

.dropdown-header { display: block; padding: 3px 20px; font-size: 12px; line=
-height: 1.42857; color: rgb(119, 119, 119); white-space: nowrap; }

.dropdown-backdrop { position: fixed; inset: 0px; z-index: 990; }

.pull-right > .dropdown-menu { right: 0px; left: auto; }

.dropup .caret, .navbar-fixed-bottom .dropdown .caret { content: ""; border=
-top: 0px; border-bottom: 4px solid; }

.dropup .dropdown-menu, .navbar-fixed-bottom .dropdown .dropdown-menu { top=
: auto; bottom: 100%; margin-bottom: 1px; }

@media (min-width: 768px) {
  .navbar-right .dropdown-menu { right: 0px; left: auto; }
  .navbar-right .dropdown-menu-left { right: auto; left: 0px; }
}

.btn-group, .btn-group-vertical { position: relative; display: inline-block=
; vertical-align: middle; }

.btn-group > .btn, .btn-group-vertical > .btn { position: relative; float: =
left; }

.btn-group > .btn:hover, .btn-group-vertical > .btn:hover, .btn-group > .bt=
n:focus, .btn-group-vertical > .btn:focus, .btn-group > .btn:active, .btn-g=
roup-vertical > .btn:active, .btn-group > .btn.active, .btn-group-vertical =
> .btn.active { z-index: 2; }

.btn-group .btn + .btn, .btn-group .btn + .btn-group, .btn-group .btn-group=
 + .btn, .btn-group .btn-group + .btn-group { margin-left: -1px; }

.btn-toolbar { margin-left: -5px; }

.btn-toolbar .btn-group, .btn-toolbar .input-group { float: left; }

.btn-toolbar > .btn, .btn-toolbar > .btn-group, .btn-toolbar > .input-group=
 { margin-left: 5px; }

.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) =
{ border-radius: 0px; }

.btn-group > .btn:first-child { margin-left: 0px; }

.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) { bord=
er-top-right-radius: 0px; border-bottom-right-radius: 0px; }

.btn-group > .btn:last-child:not(:first-child), .btn-group > .dropdown-togg=
le:not(:first-child) { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.btn-group > .btn-group { float: left; }

.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn { border-=
radius: 0px; }

.btn-group > .btn-group:first-child > .btn:last-child, .btn-group > .btn-gr=
oup:first-child > .dropdown-toggle { border-top-right-radius: 0px; border-b=
ottom-right-radius: 0px; }

.btn-group > .btn-group:last-child > .btn:first-child { border-top-left-rad=
ius: 0px; border-bottom-left-radius: 0px; }

.btn-group .dropdown-toggle:active, .btn-group.open .dropdown-toggle { outl=
ine: 0px; }

.btn-group > .btn + .dropdown-toggle { padding-right: 8px; padding-left: 8p=
x; }

.btn-group > .btn-lg + .dropdown-toggle { padding-right: 12px; padding-left=
: 12px; }

.btn-group.open .dropdown-toggle { box-shadow: rgba(0, 0, 0, 0.125) 0px 3px=
 5px inset; }

.btn-group.open .dropdown-toggle.btn-link { box-shadow: none; }

.btn .caret { margin-left: 0px; }

.btn-lg .caret { border-width: 5px 5px 0px; }

.dropup .btn-lg .caret { border-width: 0px 5px 5px; }

.btn-group-vertical > .btn, .btn-group-vertical > .btn-group, .btn-group-ve=
rtical > .btn-group > .btn { display: block; float: none; width: 100%; max-=
width: 100%; }

.btn-group-vertical > .btn-group > .btn { float: none; }

.btn-group-vertical > .btn + .btn, .btn-group-vertical > .btn + .btn-group,=
 .btn-group-vertical > .btn-group + .btn, .btn-group-vertical > .btn-group =
+ .btn-group { margin-top: -1px; margin-left: 0px; }

.btn-group-vertical > .btn:not(:first-child):not(:last-child) { border-radi=
us: 0px; }

.btn-group-vertical > .btn:first-child:not(:last-child) { border-top-right-=
radius: 4px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0p=
x; }

.btn-group-vertical > .btn:last-child:not(:first-child) { border-top-left-r=
adius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 4px; }

.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn =
{ border-radius: 0px; }

.btn-group-vertical > .btn-group:first-child:not(:last-child) > .btn:last-c=
hild, .btn-group-vertical > .btn-group:first-child:not(:last-child) > .drop=
down-toggle { border-bottom-right-radius: 0px; border-bottom-left-radius: 0=
px; }

.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-=
child { border-top-left-radius: 0px; border-top-right-radius: 0px; }

.btn-group-justified { display: table; width: 100%; table-layout: fixed; bo=
rder-collapse: separate; }

.btn-group-justified > .btn, .btn-group-justified > .btn-group { display: t=
able-cell; float: none; width: 1%; }

.btn-group-justified > .btn-group .btn { width: 100%; }

.btn-group-justified > .btn-group .dropdown-menu { left: auto; }

[data-toggle=3D"buttons"] > .btn input[type=3D"radio"], [data-toggle=3D"but=
tons"] > .btn-group > .btn input[type=3D"radio"], [data-toggle=3D"buttons"]=
 > .btn input[type=3D"checkbox"], [data-toggle=3D"buttons"] > .btn-group > =
.btn input[type=3D"checkbox"] { position: absolute; clip: rect(0px, 0px, 0p=
x, 0px); pointer-events: none; }

.input-group { position: relative; display: table; border-collapse: separat=
e; }

.input-group[class*=3D"col-"] { float: none; padding-right: 0px; padding-le=
ft: 0px; }

.input-group .form-control { position: relative; z-index: 2; float: left; w=
idth: 100%; margin-bottom: 0px; }

.input-group-lg > .form-control, .input-group-lg > .input-group-addon, .inp=
ut-group-lg > .input-group-btn > .btn { height: 46px; padding: 10px 16px; f=
ont-size: 18px; line-height: 1.33; border-radius: 6px; }

select.input-group-lg > .form-control, select.input-group-lg > .input-group=
-addon, select.input-group-lg > .input-group-btn > .btn { height: 46px; lin=
e-height: 46px; }

textarea.input-group-lg > .form-control, textarea.input-group-lg > .input-g=
roup-addon, textarea.input-group-lg > .input-group-btn > .btn, select[multi=
ple].input-group-lg > .form-control, select[multiple].input-group-lg > .inp=
ut-group-addon, select[multiple].input-group-lg > .input-group-btn > .btn {=
 height: auto; }

.input-group-sm > .form-control, .input-group-sm > .input-group-addon, .inp=
ut-group-sm > .input-group-btn > .btn { height: 30px; padding: 5px 10px; fo=
nt-size: 12px; line-height: 1.5; border-radius: 3px; }

select.input-group-sm > .form-control, select.input-group-sm > .input-group=
-addon, select.input-group-sm > .input-group-btn > .btn { height: 30px; lin=
e-height: 30px; }

textarea.input-group-sm > .form-control, textarea.input-group-sm > .input-g=
roup-addon, textarea.input-group-sm > .input-group-btn > .btn, select[multi=
ple].input-group-sm > .form-control, select[multiple].input-group-sm > .inp=
ut-group-addon, select[multiple].input-group-sm > .input-group-btn > .btn {=
 height: auto; }

.input-group-addon, .input-group-btn, .input-group .form-control { display:=
 table-cell; }

.input-group-addon:not(:first-child):not(:last-child), .input-group-btn:not=
(:first-child):not(:last-child), .input-group .form-control:not(:first-chil=
d):not(:last-child) { border-radius: 0px; }

.input-group-addon, .input-group-btn { width: 1%; white-space: nowrap; vert=
ical-align: middle; }

.input-group-addon { padding: 6px 12px; font-size: 14px; font-weight: 400; =
line-height: 1; color: rgb(85, 85, 85); text-align: center; background-colo=
r: rgb(238, 238, 238); border: 1px solid rgb(204, 204, 204); border-radius:=
 4px; }

.input-group-addon.input-sm { padding: 5px 10px; font-size: 12px; border-ra=
dius: 3px; }

.input-group-addon.input-lg { padding: 10px 16px; font-size: 18px; border-r=
adius: 6px; }

.input-group-addon input[type=3D"radio"], .input-group-addon input[type=3D"=
checkbox"] { margin-top: 0px; }

.input-group .form-control:first-child, .input-group-addon:first-child, .in=
put-group-btn:first-child > .btn, .input-group-btn:first-child > .btn-group=
 > .btn, .input-group-btn:first-child > .dropdown-toggle, .input-group-btn:=
last-child > .btn:not(:last-child):not(.dropdown-toggle), .input-group-btn:=
last-child > .btn-group:not(:last-child) > .btn { border-top-right-radius: =
0px; border-bottom-right-radius: 0px; }

.input-group-addon:first-child { border-right: 0px; }

.input-group .form-control:last-child, .input-group-addon:last-child, .inpu=
t-group-btn:last-child > .btn, .input-group-btn:last-child > .btn-group > .=
btn, .input-group-btn:last-child > .dropdown-toggle, .input-group-btn:first=
-child > .btn:not(:first-child), .input-group-btn:first-child > .btn-group:=
not(:first-child) > .btn { border-top-left-radius: 0px; border-bottom-left-=
radius: 0px; }

.input-group-addon:last-child { border-left: 0px; }

.input-group-btn { position: relative; font-size: 0px; white-space: nowrap;=
 }

.input-group-btn > .btn { position: relative; }

.input-group-btn > .btn + .btn { margin-left: -1px; }

.input-group-btn > .btn:hover, .input-group-btn > .btn:focus, .input-group-=
btn > .btn:active { z-index: 2; }

.input-group-btn:first-child > .btn, .input-group-btn:first-child > .btn-gr=
oup { margin-right: -1px; }

.input-group-btn:last-child > .btn, .input-group-btn:last-child > .btn-grou=
p { margin-left: -1px; }

.nav { padding-left: 0px; margin-bottom: 0px; list-style: none; }

.nav > li { position: relative; display: block; }

.nav > li > a { position: relative; display: block; padding: 10px 15px; }

.nav > li > a:hover, .nav > li > a:focus { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.nav > li.disabled > a { color: rgb(119, 119, 119); }

.nav > li.disabled > a:hover, .nav > li.disabled > a:focus { color: rgb(119=
, 119, 119); text-decoration: none; cursor: not-allowed; background-color: =
transparent; }

.nav .open > a, .nav .open > a:hover, .nav .open > a:focus { background-col=
or: rgb(238, 238, 238); border-color: rgb(51, 122, 183); }

.nav .nav-divider { height: 1px; margin: 9px 0px; overflow: hidden; backgro=
und-color: rgb(229, 229, 229); }

.nav > li > a > img { max-width: none; }

.nav-tabs { border-bottom: 1px solid rgb(221, 221, 221); }

.nav-tabs > li { float: left; margin-bottom: -1px; }

.nav-tabs > li > a { margin-right: 2px; line-height: 1.42857; border: 1px s=
olid transparent; border-radius: 4px 4px 0px 0px; }

.nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb(238, 238, 2=
38) rgb(221, 221, 221); }

.nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.=
active > a:focus { color: rgb(85, 85, 85); cursor: default; background-colo=
r: rgb(255, 255, 255); border-width: 1px; border-style: solid; border-color=
: rgb(221, 221, 221) rgb(221, 221, 221) transparent; border-image: initial;=
 }

.nav-tabs.nav-justified { width: 100%; border-bottom: 0px; }

.nav-tabs.nav-justified > li { float: none; }

.nav-tabs.nav-justified > li > a { margin-bottom: 5px; text-align: center; =
}

.nav-tabs.nav-justified > .dropdown .dropdown-menu { top: auto; left: auto;=
 }

@media (min-width: 768px) {
  .nav-tabs.nav-justified > li { display: table-cell; width: 1%; }
  .nav-tabs.nav-justified > li > a { margin-bottom: 0px; }
}

.nav-tabs.nav-justified > li > a { margin-right: 0px; border-radius: 4px; }

.nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active > =
a:hover, .nav-tabs.nav-justified > .active > a:focus { border: 1px solid rg=
b(221, 221, 221); }

@media (min-width: 768px) {
  .nav-tabs.nav-justified > li > a { border-bottom: 1px solid rgb(221, 221,=
 221); border-radius: 4px 4px 0px 0px; }
  .nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active =
> a:hover, .nav-tabs.nav-justified > .active > a:focus { border-bottom-colo=
r: rgb(255, 255, 255); }
}

.nav-pills > li { float: left; }

.nav-pills > li > a { border-radius: 4px; }

.nav-pills > li + li { margin-left: 2px; }

.nav-pills > li.active > a, .nav-pills > li.active > a:hover, .nav-pills > =
li.active > a:focus { color: rgb(255, 255, 255); background-color: rgb(51, =
122, 183); }

.nav-stacked > li { float: none; }

.nav-stacked > li + li { margin-top: 2px; margin-left: 0px; }

.nav-justified { width: 100%; }

.nav-justified > li { float: none; }

.nav-justified > li > a { margin-bottom: 5px; text-align: center; }

.nav-justified > .dropdown .dropdown-menu { top: auto; left: auto; }

@media (min-width: 768px) {
  .nav-justified > li { display: table-cell; width: 1%; }
  .nav-justified > li > a { margin-bottom: 0px; }
}

.nav-tabs-justified { border-bottom: 0px; }

.nav-tabs-justified > li > a { margin-right: 0px; border-radius: 4px; }

.nav-tabs-justified > .active > a, .nav-tabs-justified > .active > a:hover,=
 .nav-tabs-justified > .active > a:focus { border: 1px solid rgb(221, 221, =
221); }

@media (min-width: 768px) {
  .nav-tabs-justified > li > a { border-bottom: 1px solid rgb(221, 221, 221=
); border-radius: 4px 4px 0px 0px; }
  .nav-tabs-justified > .active > a, .nav-tabs-justified > .active > a:hove=
r, .nav-tabs-justified > .active > a:focus { border-bottom-color: rgb(255, =
255, 255); }
}

.tab-content > .tab-pane { display: none; visibility: hidden; }

.tab-content > .active { display: block; visibility: visible; }

.nav-tabs .dropdown-menu { margin-top: -1px; border-top-left-radius: 0px; b=
order-top-right-radius: 0px; }

.navbar { position: relative; min-height: 50px; margin-bottom: 20px; border=
: 1px solid transparent; }

@media (min-width: 768px) {
  .navbar { border-radius: 4px; }
}

@media (min-width: 768px) {
  .navbar-header { float: left; }
}

.navbar-collapse { padding-right: 15px; padding-left: 15px; overflow-x: vis=
ible; border-top: 1px solid transparent; box-shadow: rgba(255, 255, 255, 0.=
1) 0px 1px 0px inset; }

.navbar-collapse.in { overflow-y: auto; }

@media (min-width: 768px) {
  .navbar-collapse { width: auto; border-top: 0px; box-shadow: none; }
  .navbar-collapse.collapse { padding-bottom: 0px; display: block !importan=
t; height: auto !important; overflow: visible !important; visibility: visib=
le !important; }
  .navbar-collapse.in { overflow-y: visible; }
  .navbar-fixed-top .navbar-collapse, .navbar-static-top .navbar-collapse, =
.navbar-fixed-bottom .navbar-collapse { padding-right: 0px; padding-left: 0=
px; }
}

.navbar-fixed-top .navbar-collapse, .navbar-fixed-bottom .navbar-collapse {=
 max-height: 340px; }

@media (max-device-width: 480px) and (orientation: landscape) {
  .navbar-fixed-top .navbar-collapse, .navbar-fixed-bottom .navbar-collapse=
 { max-height: 200px; }
}

.container > .navbar-header, .container-fluid > .navbar-header, .container =
> .navbar-collapse, .container-fluid > .navbar-collapse { margin-right: -15=
px; margin-left: -15px; }

@media (min-width: 768px) {
  .container > .navbar-header, .container-fluid > .navbar-header, .containe=
r > .navbar-collapse, .container-fluid > .navbar-collapse { margin-right: 0=
px; margin-left: 0px; }
}

.navbar-static-top { z-index: 1000; border-width: 0px 0px 1px; }

@media (min-width: 768px) {
  .navbar-static-top { border-radius: 0px; }
}

.navbar-fixed-top, .navbar-fixed-bottom { position: fixed; right: 0px; left=
: 0px; z-index: 1030; }

@media (min-width: 768px) {
  .navbar-fixed-top, .navbar-fixed-bottom { border-radius: 0px; }
}

.navbar-fixed-top { top: 0px; border-width: 0px 0px 1px; }

.navbar-fixed-bottom { bottom: 0px; margin-bottom: 0px; border-width: 1px 0=
px 0px; }

.navbar-brand { float: left; height: 50px; padding: 15px; font-size: 18px; =
line-height: 20px; }

.navbar-brand:hover, .navbar-brand:focus { text-decoration: none; }

.navbar-brand > img { display: block; }

@media (min-width: 768px) {
  .navbar > .container .navbar-brand, .navbar > .container-fluid .navbar-br=
and { margin-left: -15px; }
}

.navbar-toggle { position: relative; float: right; padding: 9px 10px; margi=
n-top: 8px; margin-right: 15px; margin-bottom: 8px; background-color: trans=
parent; background-image: none; border: 1px solid transparent; border-radiu=
s: 4px; }

.navbar-toggle:focus { outline: 0px; }

.navbar-toggle .icon-bar { display: block; width: 22px; height: 2px; border=
-radius: 1px; }

.navbar-toggle .icon-bar + .icon-bar { margin-top: 4px; }

@media (min-width: 768px) {
  .navbar-toggle { display: none; }
}

.navbar-nav { margin: 7.5px -15px; }

.navbar-nav > li > a { padding-top: 10px; padding-bottom: 10px; line-height=
: 20px; }

@media (max-width: 767px) {
  .navbar-nav .open .dropdown-menu { position: static; float: none; width: =
auto; margin-top: 0px; background-color: transparent; border: 0px; box-shad=
ow: none; }
  .navbar-nav .open .dropdown-menu > li > a, .navbar-nav .open .dropdown-me=
nu .dropdown-header { padding: 5px 15px 5px 25px; }
  .navbar-nav .open .dropdown-menu > li > a { line-height: 20px; }
  .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-nav .open .dropd=
own-menu > li > a:focus { background-image: none; }
}

@media (min-width: 768px) {
  .navbar-nav { float: left; margin: 0px; }
  .navbar-nav > li { float: left; }
  .navbar-nav > li > a { padding-top: 15px; padding-bottom: 15px; }
}

.navbar-form { padding: 10px 15px; margin: 8px -15px; border-top: 1px solid=
 transparent; border-bottom: 1px solid transparent; box-shadow: rgba(255, 2=
55, 255, 0.1) 0px 1px 0px inset, rgba(255, 255, 255, 0.1) 0px 1px 0px; }

@media (min-width: 768px) {
  .navbar-form .form-group { display: inline-block; margin-bottom: 0px; ver=
tical-align: middle; }
  .navbar-form .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .navbar-form .form-control-static { display: inline-block; }
  .navbar-form .input-group { display: inline-table; vertical-align: middle=
; }
  .navbar-form .input-group .input-group-addon, .navbar-form .input-group .=
input-group-btn, .navbar-form .input-group .form-control { width: auto; }
  .navbar-form .input-group > .form-control { width: 100%; }
  .navbar-form .control-label { margin-bottom: 0px; vertical-align: middle;=
 }
  .navbar-form .radio, .navbar-form .checkbox { display: inline-block; marg=
in-top: 0px; margin-bottom: 0px; vertical-align: middle; }
  .navbar-form .radio label, .navbar-form .checkbox label { padding-left: 0=
px; }
  .navbar-form .radio input[type=3D"radio"], .navbar-form .checkbox input[t=
ype=3D"checkbox"] { position: relative; margin-left: 0px; }
  .navbar-form .has-feedback .form-control-feedback { top: 0px; }
}

@media (max-width: 767px) {
  .navbar-form .form-group { margin-bottom: 5px; }
  .navbar-form .form-group:last-child { margin-bottom: 0px; }
}

@media (min-width: 768px) {
  .navbar-form { width: auto; padding-top: 0px; padding-bottom: 0px; margin=
-right: 0px; margin-left: 0px; border: 0px; box-shadow: none; }
}

.navbar-nav > li > .dropdown-menu { margin-top: 0px; border-top-left-radius=
: 0px; border-top-right-radius: 0px; }

.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu { border-radius: 4px=
 4px 0px 0px; }

.navbar-btn { margin-top: 8px; margin-bottom: 8px; }

.navbar-btn.btn-sm { margin-top: 10px; margin-bottom: 10px; }

.navbar-btn.btn-xs { margin-top: 14px; margin-bottom: 14px; }

.navbar-text { margin-top: 15px; margin-bottom: 15px; }

@media (min-width: 768px) {
  .navbar-text { float: left; margin-right: 15px; margin-left: 15px; }
}

@media (min-width: 768px) {
  .navbar-left { float: left !important; }
  .navbar-right { margin-right: -15px; float: right !important; }
  .navbar-right ~ .navbar-right { margin-right: 0px; }
}

.navbar-default { background-color: rgb(248, 248, 248); border-color: rgb(2=
31, 231, 231); }

.navbar-default .navbar-brand { color: rgb(119, 119, 119); }

.navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus { =
color: rgb(94, 94, 94); background-color: transparent; }

.navbar-default .navbar-text { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a:hover, .navbar-default .navbar-nav > l=
i > a:focus { color: rgb(51, 51, 51); background-color: transparent; }

.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .a=
ctive > a:hover, .navbar-default .navbar-nav > .active > a:focus { color: r=
gb(85, 85, 85); background-color: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .disabled > a, .navbar-default .navbar-nav > =
.disabled > a:hover, .navbar-default .navbar-nav > .disabled > a:focus { co=
lor: rgb(204, 204, 204); background-color: transparent; }

.navbar-default .navbar-toggle { border-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus =
{ background-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle .icon-bar { background-color: rgb(136, 136, =
136); }

.navbar-default .navbar-collapse, .navbar-default .navbar-form { border-col=
or: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .ope=
n > a:hover, .navbar-default .navbar-nav > .open > a:focus { color: rgb(85,=
 85, 85); background-color: rgb(231, 231, 231); }

@media (max-width: 767px) {
  .navbar-default .navbar-nav .open .dropdown-menu > li > a { color: rgb(11=
9, 119, 119); }
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-=
default .navbar-nav .open .dropdown-menu > li > a:focus { color: rgb(51, 51=
, 51); background-color: transparent; }
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-d=
efault .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-defaul=
t .navbar-nav .open .dropdown-menu > .active > a:focus { color: rgb(85, 85,=
 85); background-color: rgb(231, 231, 231); }
  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-default .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-de=
fault .navbar-nav .open .dropdown-menu > .disabled > a:focus { color: rgb(2=
04, 204, 204); background-color: transparent; }
}

.navbar-default .navbar-link { color: rgb(119, 119, 119); }

.navbar-default .navbar-link:hover { color: rgb(51, 51, 51); }

.navbar-default .btn-link { color: rgb(119, 119, 119); }

.navbar-default .btn-link:hover, .navbar-default .btn-link:focus { color: r=
gb(51, 51, 51); }

.navbar-default .btn-link[disabled]:hover, fieldset[disabled] .navbar-defau=
lt .btn-link:hover, .navbar-default .btn-link[disabled]:focus, fieldset[dis=
abled] .navbar-default .btn-link:focus { color: rgb(204, 204, 204); }

.navbar-inverse { background-color: rgb(34, 34, 34); border-color: rgb(8, 8=
, 8); }

.navbar-inverse .navbar-brand { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-brand:hover, .navbar-inverse .navbar-brand:focus { =
color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-text { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-nav > li > a { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-nav > li > a:hover, .navbar-inverse .navbar-nav > l=
i > a:focus { color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .a=
ctive > a:hover, .navbar-inverse .navbar-nav > .active > a:focus { color: r=
gb(255, 255, 255); background-color: rgb(8, 8, 8); }

.navbar-inverse .navbar-nav > .disabled > a, .navbar-inverse .navbar-nav > =
.disabled > a:hover, .navbar-inverse .navbar-nav > .disabled > a:focus { co=
lor: rgb(68, 68, 68); background-color: transparent; }

.navbar-inverse .navbar-toggle { border-color: rgb(51, 51, 51); }

.navbar-inverse .navbar-toggle:hover, .navbar-inverse .navbar-toggle:focus =
{ background-color: rgb(51, 51, 51); }

.navbar-inverse .navbar-toggle .icon-bar { background-color: rgb(255, 255, =
255); }

.navbar-inverse .navbar-collapse, .navbar-inverse .navbar-form { border-col=
or: rgb(16, 16, 16); }

.navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .ope=
n > a:hover, .navbar-inverse .navbar-nav > .open > a:focus { color: rgb(255=
, 255, 255); background-color: rgb(8, 8, 8); }

@media (max-width: 767px) {
  .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header { bor=
der-color: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu .divider { background-co=
lor: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a { color: rgb(15=
7, 157, 157); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-=
inverse .navbar-nav .open .dropdown-menu > li > a:focus { color: rgb(255, 2=
55, 255); background-color: transparent; }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a, .navbar-i=
nverse .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-invers=
e .navbar-nav .open .dropdown-menu > .active > a:focus { color: rgb(255, 25=
5, 255); background-color: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-inverse .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-in=
verse .navbar-nav .open .dropdown-menu > .disabled > a:focus { color: rgb(6=
8, 68, 68); background-color: transparent; }
}

.navbar-inverse .navbar-link { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-link:hover { color: rgb(255, 255, 255); }

.navbar-inverse .btn-link { color: rgb(157, 157, 157); }

.navbar-inverse .btn-link:hover, .navbar-inverse .btn-link:focus { color: r=
gb(255, 255, 255); }

.navbar-inverse .btn-link[disabled]:hover, fieldset[disabled] .navbar-inver=
se .btn-link:hover, .navbar-inverse .btn-link[disabled]:focus, fieldset[dis=
abled] .navbar-inverse .btn-link:focus { color: rgb(68, 68, 68); }

.breadcrumb { padding: 8px 15px; margin-bottom: 20px; list-style: none; bac=
kground-color: rgb(245, 245, 245); border-radius: 4px; }

.breadcrumb > li { display: inline-block; }

.breadcrumb > li + li::before { padding: 0px 5px; color: rgb(204, 204, 204)=
; content: "/=C2=A0"; }

.breadcrumb > .active { color: rgb(119, 119, 119); }

.pagination { display: inline-block; padding-left: 0px; margin: 20px 0px; b=
order-radius: 4px; }

.pagination > li { display: inline; }

.pagination > li > a, .pagination > li > span { position: relative; float: =
left; padding: 6px 12px; margin-left: -1px; line-height: 1.42857; color: rg=
b(51, 122, 183); text-decoration: none; background-color: rgb(255, 255, 255=
); border: 1px solid rgb(221, 221, 221); }

.pagination > li:first-child > a, .pagination > li:first-child > span { mar=
gin-left: 0px; border-top-left-radius: 4px; border-bottom-left-radius: 4px;=
 }

.pagination > li:last-child > a, .pagination > li:last-child > span { borde=
r-top-right-radius: 4px; border-bottom-right-radius: 4px; }

.pagination > li > a:hover, .pagination > li > span:hover, .pagination > li=
 > a:focus, .pagination > li > span:focus { color: rgb(35, 82, 124); backgr=
ound-color: rgb(238, 238, 238); border-color: rgb(221, 221, 221); }

.pagination > .active > a, .pagination > .active > span, .pagination > .act=
ive > a:hover, .pagination > .active > span:hover, .pagination > .active > =
a:focus, .pagination > .active > span:focus { z-index: 2; color: rgb(255, 2=
55, 255); cursor: default; background-color: rgb(51, 122, 183); border-colo=
r: rgb(51, 122, 183); }

.pagination > .disabled > span, .pagination > .disabled > span:hover, .pagi=
nation > .disabled > span:focus, .pagination > .disabled > a, .pagination >=
 .disabled > a:hover, .pagination > .disabled > a:focus { color: rgb(119, 1=
19, 119); cursor: not-allowed; background-color: rgb(255, 255, 255); border=
-color: rgb(221, 221, 221); }

.pagination-lg > li > a, .pagination-lg > li > span { padding: 10px 16px; f=
ont-size: 18px; }

.pagination-lg > li:first-child > a, .pagination-lg > li:first-child > span=
 { border-top-left-radius: 6px; border-bottom-left-radius: 6px; }

.pagination-lg > li:last-child > a, .pagination-lg > li:last-child > span {=
 border-top-right-radius: 6px; border-bottom-right-radius: 6px; }

.pagination-sm > li > a, .pagination-sm > li > span { padding: 5px 10px; fo=
nt-size: 12px; }

.pagination-sm > li:first-child > a, .pagination-sm > li:first-child > span=
 { border-top-left-radius: 3px; border-bottom-left-radius: 3px; }

.pagination-sm > li:last-child > a, .pagination-sm > li:last-child > span {=
 border-top-right-radius: 3px; border-bottom-right-radius: 3px; }

.pager { padding-left: 0px; margin: 20px 0px; text-align: center; list-styl=
e: none; }

.pager li { display: inline; }

.pager li > a, .pager li > span { display: inline-block; padding: 5px 14px;=
 background-color: rgb(255, 255, 255); border: 1px solid rgb(221, 221, 221)=
; border-radius: 15px; }

.pager li > a:hover, .pager li > a:focus { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.pager .next > a, .pager .next > span { float: right; }

.pager .previous > a, .pager .previous > span { float: left; }

.pager .disabled > a, .pager .disabled > a:hover, .pager .disabled > a:focu=
s, .pager .disabled > span { color: rgb(119, 119, 119); cursor: not-allowed=
; background-color: rgb(255, 255, 255); }

.label { display: inline; padding: 0.2em 0.6em 0.3em; font-size: 75%; font-=
weight: 700; line-height: 1; color: rgb(255, 255, 255); text-align: center;=
 white-space: nowrap; vertical-align: baseline; border-radius: 0.25em; }

a.label:hover, a.label:focus { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

.label:empty { display: none; }

.btn .label { position: relative; top: -1px; }

.label-default { background-color: rgb(119, 119, 119); }

.label-default[href]:hover, .label-default[href]:focus { background-color: =
rgb(94, 94, 94); }

.label-primary { background-color: rgb(51, 122, 183); }

.label-primary[href]:hover, .label-primary[href]:focus { background-color: =
rgb(40, 96, 144); }

.label-success { background-color: rgb(92, 184, 92); }

.label-success[href]:hover, .label-success[href]:focus { background-color: =
rgb(68, 157, 68); }

.label-info { background-color: rgb(91, 192, 222); }

.label-info[href]:hover, .label-info[href]:focus { background-color: rgb(49=
, 176, 213); }

.label-warning { background-color: rgb(240, 173, 78); }

.label-warning[href]:hover, .label-warning[href]:focus { background-color: =
rgb(236, 151, 31); }

.label-danger { background-color: rgb(217, 83, 79); }

.label-danger[href]:hover, .label-danger[href]:focus { background-color: rg=
b(201, 48, 44); }

.badge { display: inline-block; min-width: 10px; padding: 3px 7px; font-siz=
e: 12px; font-weight: 700; line-height: 1; color: rgb(255, 255, 255); text-=
align: center; white-space: nowrap; vertical-align: baseline; background-co=
lor: rgb(119, 119, 119); border-radius: 10px; }

.badge:empty { display: none; }

.btn .badge { position: relative; top: -1px; }

.btn-xs .badge { top: 0px; padding: 1px 5px; }

a.badge:hover, a.badge:focus { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

.list-group-item.active > .badge, .nav-pills > .active > a > .badge { color=
: rgb(51, 122, 183); background-color: rgb(255, 255, 255); }

.list-group-item > .badge { float: right; }

.list-group-item > .badge + .badge { margin-right: 5px; }

.nav-pills > li > a > .badge { margin-left: 3px; }

.jumbotron { padding: 30px 15px; margin-bottom: 30px; color: inherit; backg=
round-color: rgb(238, 238, 238); }

.jumbotron h1, .jumbotron .h1 { color: inherit; }

.jumbotron p { margin-bottom: 15px; font-size: 21px; font-weight: 200; }

.jumbotron > hr { border-top-color: rgb(213, 213, 213); }

.container .jumbotron, .container-fluid .jumbotron { border-radius: 6px; }

.jumbotron .container { max-width: 100%; }

@media screen and (min-width: 768px) {
  .jumbotron { padding: 48px 0px; }
  .container .jumbotron, .container-fluid .jumbotron { padding-right: 60px;=
 padding-left: 60px; }
  .jumbotron h1, .jumbotron .h1 { font-size: 63px; }
}

.thumbnail { display: block; padding: 4px; margin-bottom: 20px; line-height=
: 1.42857; background-color: rgb(255, 255, 255); border: 1px solid rgb(221,=
 221, 221); border-radius: 4px; transition: border 0.2s ease-in-out 0s; }

.thumbnail > img, .thumbnail a > img { margin-right: auto; margin-left: aut=
o; }

a.thumbnail:hover, a.thumbnail:focus, a.thumbnail.active { border-color: rg=
b(51, 122, 183); }

.thumbnail .caption { padding: 9px; color: rgb(51, 51, 51); }

.alert { padding: 15px; margin-bottom: 20px; border: 1px solid transparent;=
 border-radius: 4px; }

.alert h4 { margin-top: 0px; color: inherit; }

.alert .alert-link { font-weight: 700; }

.alert > p, .alert > ul { margin-bottom: 0px; }

.alert > p + p { margin-top: 5px; }

.alert-dismissable, .alert-dismissible { padding-right: 35px; }

.alert-dismissable .close, .alert-dismissible .close { position: relative; =
top: -2px; right: -21px; color: inherit; }

.alert-success { color: rgb(60, 118, 61); background-color: rgb(223, 240, 2=
16); border-color: rgb(214, 233, 198); }

.alert-success hr { border-top-color: rgb(201, 226, 179); }

.alert-success .alert-link { color: rgb(43, 84, 44); }

.alert-info { color: rgb(49, 112, 143); background-color: rgb(217, 237, 247=
); border-color: rgb(188, 232, 241); }

.alert-info hr { border-top-color: rgb(166, 225, 236); }

.alert-info .alert-link { color: rgb(36, 82, 105); }

.alert-warning { color: rgb(138, 109, 59); background-color: rgb(252, 248, =
227); border-color: rgb(250, 235, 204); }

.alert-warning hr { border-top-color: rgb(247, 225, 181); }

.alert-warning .alert-link { color: rgb(102, 81, 44); }

.alert-danger { color: rgb(169, 68, 66); background-color: rgb(242, 222, 22=
2); border-color: rgb(235, 204, 209); }

.alert-danger hr { border-top-color: rgb(228, 185, 192); }

.alert-danger .alert-link { color: rgb(132, 53, 52); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

.progress { height: 20px; margin-bottom: 20px; overflow: hidden; background=
-color: rgb(245, 245, 245); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0=
.1) 0px 1px 2px inset; }

.progress-bar { float: left; width: 0px; height: 100%; font-size: 12px; lin=
e-height: 20px; color: rgb(255, 255, 255); text-align: center; background-c=
olor: rgb(51, 122, 183); box-shadow: rgba(0, 0, 0, 0.15) 0px -1px 0px inset=
; transition: width 0.6s ease 0s; }

.progress-striped .progress-bar, .progress-bar-striped { background-image: =
linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, tran=
sparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, =
transparent 75%, transparent); background-size: 40px 40px; }

.progress.active .progress-bar, .progress-bar.active { animation: 2s linear=
 0s infinite normal none running progress-bar-stripes; }

.progress-bar-success { background-color: rgb(92, 184, 92); }

.progress-striped .progress-bar-success { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%=
, transparent); }

.progress-bar-info { background-color: rgb(91, 192, 222); }

.progress-striped .progress-bar-info { background-image: linear-gradient(45=
deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(=
255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, t=
ransparent); }

.progress-bar-warning { background-color: rgb(240, 173, 78); }

.progress-striped .progress-bar-warning { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%=
, transparent); }

.progress-bar-danger { background-color: rgb(217, 83, 79); }

.progress-striped .progress-bar-danger { background-image: linear-gradient(=
45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgb=
a(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%,=
 transparent); }

.media { margin-top: 15px; }

.media:first-child { margin-top: 0px; }

.media-right, .media > .pull-right { padding-left: 10px; }

.media-left, .media > .pull-left { padding-right: 10px; }

.media-left, .media-right, .media-body { display: table-cell; vertical-alig=
n: top; }

.media-middle { vertical-align: middle; }

.media-bottom { vertical-align: bottom; }

.media-heading { margin-top: 0px; margin-bottom: 5px; }

.media-list { padding-left: 0px; list-style: none; }

.list-group { padding-left: 0px; margin-bottom: 20px; }

.list-group-item { position: relative; display: block; padding: 10px 15px; =
margin-bottom: -1px; background-color: rgb(255, 255, 255); border: 1px soli=
d rgb(221, 221, 221); }

.list-group-item:first-child { border-top-left-radius: 4px; border-top-righ=
t-radius: 4px; }

.list-group-item:last-child { margin-bottom: 0px; border-bottom-right-radiu=
s: 4px; border-bottom-left-radius: 4px; }

a.list-group-item { color: rgb(85, 85, 85); }

a.list-group-item .list-group-item-heading { color: rgb(51, 51, 51); }

a.list-group-item:hover, a.list-group-item:focus { color: rgb(85, 85, 85); =
text-decoration: none; background-color: rgb(245, 245, 245); }

.list-group-item.disabled, .list-group-item.disabled:hover, .list-group-ite=
m.disabled:focus { color: rgb(119, 119, 119); cursor: not-allowed; backgrou=
nd-color: rgb(238, 238, 238); }

.list-group-item.disabled .list-group-item-heading, .list-group-item.disabl=
ed:hover .list-group-item-heading, .list-group-item.disabled:focus .list-gr=
oup-item-heading { color: inherit; }

.list-group-item.disabled .list-group-item-text, .list-group-item.disabled:=
hover .list-group-item-text, .list-group-item.disabled:focus .list-group-it=
em-text { color: rgb(119, 119, 119); }

.list-group-item.active, .list-group-item.active:hover, .list-group-item.ac=
tive:focus { z-index: 2; color: rgb(255, 255, 255); background-color: rgb(5=
1, 122, 183); border-color: rgb(51, 122, 183); }

.list-group-item.active .list-group-item-heading, .list-group-item.active:h=
over .list-group-item-heading, .list-group-item.active:focus .list-group-it=
em-heading, .list-group-item.active .list-group-item-heading > small, .list=
-group-item.active:hover .list-group-item-heading > small, .list-group-item=
.active:focus .list-group-item-heading > small, .list-group-item.active .li=
st-group-item-heading > .small, .list-group-item.active:hover .list-group-i=
tem-heading > .small, .list-group-item.active:focus .list-group-item-headin=
g > .small { color: inherit; }

.list-group-item.active .list-group-item-text, .list-group-item.active:hove=
r .list-group-item-text, .list-group-item.active:focus .list-group-item-tex=
t { color: rgb(199, 221, 239); }

.list-group-item-success { color: rgb(60, 118, 61); background-color: rgb(2=
23, 240, 216); }

a.list-group-item-success { color: rgb(60, 118, 61); }

a.list-group-item-success .list-group-item-heading { color: inherit; }

a.list-group-item-success:hover, a.list-group-item-success:focus { color: r=
gb(60, 118, 61); background-color: rgb(208, 233, 198); }

a.list-group-item-success.active, a.list-group-item-success.active:hover, a=
.list-group-item-success.active:focus { color: rgb(255, 255, 255); backgrou=
nd-color: rgb(60, 118, 61); border-color: rgb(60, 118, 61); }

.list-group-item-info { color: rgb(49, 112, 143); background-color: rgb(217=
, 237, 247); }

a.list-group-item-info { color: rgb(49, 112, 143); }

a.list-group-item-info .list-group-item-heading { color: inherit; }

a.list-group-item-info:hover, a.list-group-item-info:focus { color: rgb(49,=
 112, 143); background-color: rgb(196, 227, 243); }

a.list-group-item-info.active, a.list-group-item-info.active:hover, a.list-=
group-item-info.active:focus { color: rgb(255, 255, 255); background-color:=
 rgb(49, 112, 143); border-color: rgb(49, 112, 143); }

.list-group-item-warning { color: rgb(138, 109, 59); background-color: rgb(=
252, 248, 227); }

a.list-group-item-warning { color: rgb(138, 109, 59); }

a.list-group-item-warning .list-group-item-heading { color: inherit; }

a.list-group-item-warning:hover, a.list-group-item-warning:focus { color: r=
gb(138, 109, 59); background-color: rgb(250, 242, 204); }

a.list-group-item-warning.active, a.list-group-item-warning.active:hover, a=
.list-group-item-warning.active:focus { color: rgb(255, 255, 255); backgrou=
nd-color: rgb(138, 109, 59); border-color: rgb(138, 109, 59); }

.list-group-item-danger { color: rgb(169, 68, 66); background-color: rgb(24=
2, 222, 222); }

a.list-group-item-danger { color: rgb(169, 68, 66); }

a.list-group-item-danger .list-group-item-heading { color: inherit; }

a.list-group-item-danger:hover, a.list-group-item-danger:focus { color: rgb=
(169, 68, 66); background-color: rgb(235, 204, 204); }

a.list-group-item-danger.active, a.list-group-item-danger.active:hover, a.l=
ist-group-item-danger.active:focus { color: rgb(255, 255, 255); background-=
color: rgb(169, 68, 66); border-color: rgb(169, 68, 66); }

.list-group-item-heading { margin-top: 0px; margin-bottom: 5px; }

.list-group-item-text { margin-bottom: 0px; line-height: 1.3; }

.panel { margin-bottom: 20px; background-color: rgb(255, 255, 255); border:=
 1px solid transparent; border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.05)=
 0px 1px 1px; }

.panel-body { padding: 15px; }

.panel-heading { padding: 10px 15px; border-bottom: 1px solid transparent; =
border-top-left-radius: 3px; border-top-right-radius: 3px; }

.panel-heading > .dropdown .dropdown-toggle { color: inherit; }

.panel-title { margin-top: 0px; margin-bottom: 0px; font-size: 16px; color:=
 inherit; }

.panel-title > a { color: inherit; }

.panel-footer { padding: 10px 15px; background-color: rgb(245, 245, 245); b=
order-top: 1px solid rgb(221, 221, 221); border-bottom-right-radius: 3px; b=
order-bottom-left-radius: 3px; }

.panel > .list-group, .panel > .panel-collapse > .list-group { margin-botto=
m: 0px; }

.panel > .list-group .list-group-item, .panel > .panel-collapse > .list-gro=
up .list-group-item { border-width: 1px 0px; border-radius: 0px; }

.panel > .list-group:first-child .list-group-item:first-child, .panel > .pa=
nel-collapse > .list-group:first-child .list-group-item:first-child { borde=
r-top: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; }

.panel > .list-group:last-child .list-group-item:last-child, .panel > .pane=
l-collapse > .list-group:last-child .list-group-item:last-child { border-bo=
ttom: 0px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;=
 }

.panel-heading + .list-group .list-group-item:first-child { border-top-widt=
h: 0px; }

.list-group + .panel-footer { border-top-width: 0px; }

.panel > .table, .panel > .table-responsive > .table, .panel > .panel-colla=
pse > .table { margin-bottom: 0px; }

.panel > .table caption, .panel > .table-responsive > .table caption, .pane=
l > .panel-collapse > .table caption { padding-right: 15px; padding-left: 1=
5px; }

.panel > .table:first-child, .panel > .table-responsive:first-child > .tabl=
e:first-child { border-top-left-radius: 3px; border-top-right-radius: 3px; =
}

.panel > .table:first-child > thead:first-child > tr:first-child, .panel > =
.table-responsive:first-child > .table:first-child > thead:first-child > tr=
:first-child, .panel > .table:first-child > tbody:first-child > tr:first-ch=
ild, .panel > .table-responsive:first-child > .table:first-child > tbody:fi=
rst-child > tr:first-child { border-top-left-radius: 3px; border-top-right-=
radius: 3px; }

.panel > .table:first-child > thead:first-child > tr:first-child td:first-c=
hild, .panel > .table-responsive:first-child > .table:first-child > thead:f=
irst-child > tr:first-child td:first-child, .panel > .table:first-child > t=
body:first-child > tr:first-child td:first-child, .panel > .table-responsiv=
e:first-child > .table:first-child > tbody:first-child > tr:first-child td:=
first-child, .panel > .table:first-child > thead:first-child > tr:first-chi=
ld th:first-child, .panel > .table-responsive:first-child > .table:first-ch=
ild > thead:first-child > tr:first-child th:first-child, .panel > .table:fi=
rst-child > tbody:first-child > tr:first-child th:first-child, .panel > .ta=
ble-responsive:first-child > .table:first-child > tbody:first-child > tr:fi=
rst-child th:first-child { border-top-left-radius: 3px; }

.panel > .table:first-child > thead:first-child > tr:first-child td:last-ch=
ild, .panel > .table-responsive:first-child > .table:first-child > thead:fi=
rst-child > tr:first-child td:last-child, .panel > .table:first-child > tbo=
dy:first-child > tr:first-child td:last-child, .panel > .table-responsive:f=
irst-child > .table:first-child > tbody:first-child > tr:first-child td:las=
t-child, .panel > .table:first-child > thead:first-child > tr:first-child t=
h:last-child, .panel > .table-responsive:first-child > .table:first-child >=
 thead:first-child > tr:first-child th:last-child, .panel > .table:first-ch=
ild > tbody:first-child > tr:first-child th:last-child, .panel > .table-res=
ponsive:first-child > .table:first-child > tbody:first-child > tr:first-chi=
ld th:last-child { border-top-right-radius: 3px; }

.panel > .table:last-child, .panel > .table-responsive:last-child > .table:=
last-child { border-bottom-right-radius: 3px; border-bottom-left-radius: 3p=
x; }

.panel > .table:last-child > tbody:last-child > tr:last-child, .panel > .ta=
ble-responsive:last-child > .table:last-child > tbody:last-child > tr:last-=
child, .panel > .table:last-child > tfoot:last-child > tr:last-child, .pane=
l > .table-responsive:last-child > .table:last-child > tfoot:last-child > t=
r:last-child { border-bottom-right-radius: 3px; border-bottom-left-radius: =
3px; }

.panel > .table:last-child > tbody:last-child > tr:last-child td:first-chil=
d, .panel > .table-responsive:last-child > .table:last-child > tbody:last-c=
hild > tr:last-child td:first-child, .panel > .table:last-child > tfoot:las=
t-child > tr:last-child td:first-child, .panel > .table-responsive:last-chi=
ld > .table:last-child > tfoot:last-child > tr:last-child td:first-child, .=
panel > .table:last-child > tbody:last-child > tr:last-child th:first-child=
, .panel > .table-responsive:last-child > .table:last-child > tbody:last-ch=
ild > tr:last-child th:first-child, .panel > .table:last-child > tfoot:last=
-child > tr:last-child th:first-child, .panel > .table-responsive:last-chil=
d > .table:last-child > tfoot:last-child > tr:last-child th:first-child { b=
order-bottom-left-radius: 3px; }

.panel > .table:last-child > tbody:last-child > tr:last-child td:last-child=
, .panel > .table-responsive:last-child > .table:last-child > tbody:last-ch=
ild > tr:last-child td:last-child, .panel > .table:last-child > tfoot:last-=
child > tr:last-child td:last-child, .panel > .table-responsive:last-child =
> .table:last-child > tfoot:last-child > tr:last-child td:last-child, .pane=
l > .table:last-child > tbody:last-child > tr:last-child th:last-child, .pa=
nel > .table-responsive:last-child > .table:last-child > tbody:last-child >=
 tr:last-child th:last-child, .panel > .table:last-child > tfoot:last-child=
 > tr:last-child th:last-child, .panel > .table-responsive:last-child > .ta=
ble:last-child > tfoot:last-child > tr:last-child th:last-child { border-bo=
ttom-right-radius: 3px; }

.panel > .panel-body + .table, .panel > .panel-body + .table-responsive, .p=
anel > .table + .panel-body, .panel > .table-responsive + .panel-body { bor=
der-top: 1px solid rgb(221, 221, 221); }

.panel > .table > tbody:first-child > tr:first-child th, .panel > .table > =
tbody:first-child > tr:first-child td { border-top: 0px; }

.panel > .table-bordered, .panel > .table-responsive > .table-bordered { bo=
rder: 0px; }

.panel > .table-bordered > thead > tr > th:first-child, .panel > .table-res=
ponsive > .table-bordered > thead > tr > th:first-child, .panel > .table-bo=
rdered > tbody > tr > th:first-child, .panel > .table-responsive > .table-b=
ordered > tbody > tr > th:first-child, .panel > .table-bordered > tfoot > t=
r > th:first-child, .panel > .table-responsive > .table-bordered > tfoot > =
tr > th:first-child, .panel > .table-bordered > thead > tr > td:first-child=
, .panel > .table-responsive > .table-bordered > thead > tr > td:first-chil=
d, .panel > .table-bordered > tbody > tr > td:first-child, .panel > .table-=
responsive > .table-bordered > tbody > tr > td:first-child, .panel > .table=
-bordered > tfoot > tr > td:first-child, .panel > .table-responsive > .tabl=
e-bordered > tfoot > tr > td:first-child { border-left: 0px; }

.panel > .table-bordered > thead > tr > th:last-child, .panel > .table-resp=
onsive > .table-bordered > thead > tr > th:last-child, .panel > .table-bord=
ered > tbody > tr > th:last-child, .panel > .table-responsive > .table-bord=
ered > tbody > tr > th:last-child, .panel > .table-bordered > tfoot > tr > =
th:last-child, .panel > .table-responsive > .table-bordered > tfoot > tr > =
th:last-child, .panel > .table-bordered > thead > tr > td:last-child, .pane=
l > .table-responsive > .table-bordered > thead > tr > td:last-child, .pane=
l > .table-bordered > tbody > tr > td:last-child, .panel > .table-responsiv=
e > .table-bordered > tbody > tr > td:last-child, .panel > .table-bordered =
> tfoot > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > td:last-child { border-right: 0px; }

.panel > .table-bordered > thead > tr:first-child > td, .panel > .table-res=
ponsive > .table-bordered > thead > tr:first-child > td, .panel > .table-bo=
rdered > tbody > tr:first-child > td, .panel > .table-responsive > .table-b=
ordered > tbody > tr:first-child > td, .panel > .table-bordered > thead > t=
r:first-child > th, .panel > .table-responsive > .table-bordered > thead > =
tr:first-child > th, .panel > .table-bordered > tbody > tr:first-child > th=
, .panel > .table-responsive > .table-bordered > tbody > tr:first-child > t=
h { border-bottom: 0px; }

.panel > .table-bordered > tbody > tr:last-child > td, .panel > .table-resp=
onsive > .table-bordered > tbody > tr:last-child > td, .panel > .table-bord=
ered > tfoot > tr:last-child > td, .panel > .table-responsive > .table-bord=
ered > tfoot > tr:last-child > td, .panel > .table-bordered > tbody > tr:la=
st-child > th, .panel > .table-responsive > .table-bordered > tbody > tr:la=
st-child > th, .panel > .table-bordered > tfoot > tr:last-child > th, .pane=
l > .table-responsive > .table-bordered > tfoot > tr:last-child > th { bord=
er-bottom: 0px; }

.panel > .table-responsive { margin-bottom: 0px; border: 0px; }

.panel-group { margin-bottom: 20px; }

.panel-group .panel { margin-bottom: 0px; border-radius: 4px; }

.panel-group .panel + .panel { margin-top: 5px; }

.panel-group .panel-heading { border-bottom: 0px; }

.panel-group .panel-heading + .panel-collapse > .panel-body, .panel-group .=
panel-heading + .panel-collapse > .list-group { border-top: 1px solid rgb(2=
21, 221, 221); }

.panel-group .panel-footer { border-top: 0px; }

.panel-group .panel-footer + .panel-collapse .panel-body { border-bottom: 1=
px solid rgb(221, 221, 221); }

.panel-default { border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading { color: rgb(51, 51, 51); background-color:=
 rgb(245, 245, 245); border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(221, 221, 221); }

.panel-default > .panel-heading .badge { color: rgb(245, 245, 245); backgro=
und-color: rgb(51, 51, 51); }

.panel-default > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(221, 221, 221); }

.panel-primary { border-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading { color: rgb(255, 255, 255); background-col=
or: rgb(51, 122, 183); border-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading .badge { color: rgb(51, 122, 183); backgrou=
nd-color: rgb(255, 255, 255); }

.panel-primary > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(51, 122, 183); }

.panel-success { border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading { color: rgb(60, 118, 61); background-color=
: rgb(223, 240, 216); border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(214, 233, 198); }

.panel-success > .panel-heading .badge { color: rgb(223, 240, 216); backgro=
und-color: rgb(60, 118, 61); }

.panel-success > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(214, 233, 198); }

.panel-info { border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading { color: rgb(49, 112, 143); background-color: =
rgb(217, 237, 247); border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading + .panel-collapse > .panel-body { border-top-c=
olor: rgb(188, 232, 241); }

.panel-info > .panel-heading .badge { color: rgb(217, 237, 247); background=
-color: rgb(49, 112, 143); }

.panel-info > .panel-footer + .panel-collapse > .panel-body { border-bottom=
-color: rgb(188, 232, 241); }

.panel-warning { border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading { color: rgb(138, 109, 59); background-colo=
r: rgb(252, 248, 227); border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading .badge { color: rgb(252, 248, 227); backgro=
und-color: rgb(138, 109, 59); }

.panel-warning > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(250, 235, 204); }

.panel-danger { border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading { color: rgb(169, 68, 66); background-color:=
 rgb(242, 222, 222); border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading + .panel-collapse > .panel-body { border-top=
-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading .badge { color: rgb(242, 222, 222); backgrou=
nd-color: rgb(169, 68, 66); }

.panel-danger > .panel-footer + .panel-collapse > .panel-body { border-bott=
om-color: rgb(235, 204, 209); }

.embed-responsive { position: relative; display: block; height: 0px; paddin=
g: 0px; overflow: hidden; }

.embed-responsive .embed-responsive-item, .embed-responsive iframe, .embed-=
responsive embed, .embed-responsive object, .embed-responsive video { posit=
ion: absolute; top: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;=
 border: 0px; }

.embed-responsive.embed-responsive-16by9 { padding-bottom: 56.25%; }

.embed-responsive.embed-responsive-4by3 { padding-bottom: 75%; }

.well { min-height: 20px; padding: 19px; margin-bottom: 20px; background-co=
lor: rgb(245, 245, 245); border: 1px solid rgb(227, 227, 227); border-radiu=
s: 4px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; }

.well blockquote { border-color: rgba(0, 0, 0, 0.15); }

.well-lg { padding: 24px; border-radius: 6px; }

.well-sm { padding: 9px; border-radius: 3px; }

.close { float: right; font-size: 21px; font-weight: 700; line-height: 1; c=
olor: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity: 0=
.2; }

.close:hover, .close:focus { color: rgb(0, 0, 0); text-decoration: none; cu=
rsor: pointer; opacity: 0.5; }

button.close { appearance: none; padding: 0px; cursor: pointer; background:=
 0px 0px; border: 0px; }

.modal-open { overflow: hidden; }

.modal { position: fixed; inset: 0px; z-index: 1040; display: none; overflo=
w: hidden; outline: 0px; }

.modal.fade .modal-dialog { transition: transform 0.3s ease-out 0s; transfo=
rm: translate(0px, -25%); }

.modal.in .modal-dialog { transform: translate(0px, 0px); }

.modal-open .modal { overflow: hidden auto; }

.modal-dialog { position: relative; width: auto; margin: 10px; }

.modal-content { position: relative; background-color: rgb(255, 255, 255); =
background-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2); border-=
radius: 6px; outline: 0px; box-shadow: rgba(0, 0, 0, 0.5) 0px 3px 9px; }

.modal-backdrop { position: absolute; top: 0px; right: 0px; left: 0px; back=
ground-color: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop.in { opacity: 0.5; }

.modal-header { min-height: 16.43px; padding: 15px; border-bottom: 1px soli=
d rgb(229, 229, 229); }

.modal-header .close { margin-top: -2px; }

.modal-title { margin: 0px; line-height: 1.42857; }

.modal-body { position: relative; padding: 15px; }

.modal-footer { padding: 15px; text-align: right; border-top: 1px solid rgb=
(229, 229, 229); }

.modal-footer .btn + .btn { margin-bottom: 0px; margin-left: 5px; }

.modal-footer .btn-group .btn + .btn { margin-left: -1px; }

.modal-footer .btn-block + .btn-block { margin-left: 0px; }

.modal-scrollbar-measure { position: absolute; top: -9999px; width: 50px; h=
eight: 50px; overflow: scroll; }

@media (min-width: 768px) {
  .modal-dialog { width: 600px; margin: 30px auto; }
  .modal-content { box-shadow: rgba(0, 0, 0, 0.5) 0px 5px 15px; }
  .modal-sm { width: 300px; }
}

@media (min-width: 992px) {
  .modal-lg { width: 900px; }
}

.tooltip { position: absolute; z-index: 1070; display: block; font-family: =
"Helvetica Neue", Helvetica, Arial, sans-serif; font-size: 12px; font-weigh=
t: 400; line-height: 1.4; visibility: visible; opacity: 0; }

.tooltip.in { opacity: 0.9; }

.tooltip.top { padding: 5px 0px; margin-top: -3px; }

.tooltip.right { padding: 0px 5px; margin-left: 3px; }

.tooltip.bottom { padding: 5px 0px; margin-top: 3px; }

.tooltip.left { padding: 0px 5px; margin-left: -3px; }

.tooltip-inner { max-width: 200px; padding: 3px 8px; color: rgb(255, 255, 2=
55); text-align: center; text-decoration: none; background-color: rgb(0, 0,=
 0); border-radius: 4px; }

.tooltip-arrow { position: absolute; width: 0px; height: 0px; border-color:=
 transparent; border-style: solid; }

.tooltip.top .tooltip-arrow { bottom: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-left .tooltip-arrow { right: 5px; bottom: 0px; margin-bottom: =
-5px; border-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-right .tooltip-arrow { bottom: 0px; left: 5px; margin-bottom: =
-5px; border-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.right .tooltip-arrow { top: 50%; left: 0px; margin-top: -5px; bord=
er-width: 5px 5px 5px 0px; border-right-color: rgb(0, 0, 0); }

.tooltip.left .tooltip-arrow { top: 50%; right: 0px; margin-top: -5px; bord=
er-width: 5px 0px 5px 5px; border-left-color: rgb(0, 0, 0); }

.tooltip.bottom .tooltip-arrow { top: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-left .tooltip-arrow { top: 0px; right: 5px; margin-top: -5p=
x; border-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-right .tooltip-arrow { top: 0px; left: 5px; margin-top: -5p=
x; border-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1060; display:=
 none; max-width: 276px; padding: 1px; font-family: "Helvetica Neue", Helve=
tica, Arial, sans-serif; font-size: 14px; font-weight: 400; line-height: 1.=
42857; text-align: left; white-space: normal; background-color: rgb(255, 25=
5, 255); background-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2)=
; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 10px; }

.popover.top { margin-top: -10px; }

.popover.right { margin-left: 10px; }

.popover.bottom { margin-top: 10px; }

.popover.left { margin-left: -10px; }

.popover-title { padding: 8px 14px; margin: 0px; font-size: 14px; backgroun=
d-color: rgb(247, 247, 247); border-bottom: 1px solid rgb(235, 235, 235); b=
order-radius: 5px 5px 0px 0px; }

.popover-content { padding: 9px 14px; }

.popover > .arrow, .popover > .arrow::after { position: absolute; display: =
block; width: 0px; height: 0px; border-color: transparent; border-style: so=
lid; }

.popover > .arrow { border-width: 11px; }

.popover > .arrow::after { content: ""; border-width: 10px; }

.popover.top > .arrow { bottom: -11px; left: 50%; margin-left: -11px; borde=
r-top-color: rgba(0, 0, 0, 0.25); border-bottom-width: 0px; }

.popover.top > .arrow::after { bottom: 1px; margin-left: -10px; content: " =
"; border-top-color: rgb(255, 255, 255); border-bottom-width: 0px; }

.popover.right > .arrow { top: 50%; left: -11px; margin-top: -11px; border-=
right-color: rgba(0, 0, 0, 0.25); border-left-width: 0px; }

.popover.right > .arrow::after { bottom: -10px; left: 1px; content: " "; bo=
rder-right-color: rgb(255, 255, 255); border-left-width: 0px; }

.popover.bottom > .arrow { top: -11px; left: 50%; margin-left: -11px; borde=
r-top-width: 0px; border-bottom-color: rgba(0, 0, 0, 0.25); }

.popover.bottom > .arrow::after { top: 1px; margin-left: -10px; content: " =
"; border-top-width: 0px; border-bottom-color: rgb(255, 255, 255); }

.popover.left > .arrow { top: 50%; right: -11px; margin-top: -11px; border-=
right-width: 0px; border-left-color: rgba(0, 0, 0, 0.25); }

.popover.left > .arrow::after { right: 1px; bottom: -10px; content: " "; bo=
rder-right-width: 0px; border-left-color: rgb(255, 255, 255); }

.carousel { position: relative; }

.carousel-inner { position: relative; width: 100%; overflow: hidden; }

.carousel-inner > .item { position: relative; display: none; transition: le=
ft 0.6s ease-in-out 0s; }

.carousel-inner > .item > img, .carousel-inner > .item > a > img { line-hei=
ght: 1; }

@media not all, (-webkit-transform-3d) {
  .carousel-inner > .item { transition: transform 0.6s ease-in-out 0s; back=
face-visibility: hidden; perspective: 1000px; }
  .carousel-inner > .item.next, .carousel-inner > .item.active.right { left=
: 0px; transform: translate3d(100%, 0px, 0px); }
  .carousel-inner > .item.prev, .carousel-inner > .item.active.left { left:=
 0px; transform: translate3d(-100%, 0px, 0px); }
  .carousel-inner > .item.next.left, .carousel-inner > .item.prev.right, .c=
arousel-inner > .item.active { left: 0px; transform: translate3d(0px, 0px, =
0px); }
}

.carousel-inner > .active, .carousel-inner > .next, .carousel-inner > .prev=
 { display: block; }

.carousel-inner > .active { left: 0px; }

.carousel-inner > .next, .carousel-inner > .prev { position: absolute; top:=
 0px; width: 100%; }

.carousel-inner > .next { left: 100%; }

.carousel-inner > .prev { left: -100%; }

.carousel-inner > .next.left, .carousel-inner > .prev.right { left: 0px; }

.carousel-inner > .active.left { left: -100%; }

.carousel-inner > .active.right { left: 100%; }

.carousel-control { position: absolute; top: 0px; bottom: 0px; left: 0px; w=
idth: 15%; font-size: 20px; color: rgb(255, 255, 255); text-align: center; =
text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; opacity: 0.5; }

.carousel-control.left { background-image: linear-gradient(to right, rgba(0=
, 0, 0, 0.5) 0px, rgba(0, 0, 0, 0) 100%); background-repeat: repeat-x; }

.carousel-control.right { right: 0px; left: auto; background-image: linear-=
gradient(to right, rgba(0, 0, 0, 0) 0px, rgba(0, 0, 0, 0.5) 100%); backgrou=
nd-repeat: repeat-x; }

.carousel-control:hover, .carousel-control:focus { color: rgb(255, 255, 255=
); text-decoration: none; outline: 0px; opacity: 0.9; }

.carousel-control .icon-prev, .carousel-control .icon-next, .carousel-contr=
ol .glyphicon-chevron-left, .carousel-control .glyphicon-chevron-right { po=
sition: absolute; top: 50%; z-index: 5; display: inline-block; }

.carousel-control .icon-prev, .carousel-control .glyphicon-chevron-left { l=
eft: 50%; margin-left: -10px; }

.carousel-control .icon-next, .carousel-control .glyphicon-chevron-right { =
right: 50%; margin-right: -10px; }

.carousel-control .icon-prev, .carousel-control .icon-next { width: 20px; h=
eight: 20px; margin-top: -10px; font-family: serif; }

.carousel-control .icon-prev::before { content: "=E2=80=B9"; }

.carousel-control .icon-next::before { content: "=E2=80=BA"; }

.carousel-indicators { position: absolute; bottom: 10px; left: 50%; z-index=
: 15; width: 60%; padding-left: 0px; margin-left: -30%; text-align: center;=
 list-style: none; }

.carousel-indicators li { display: inline-block; width: 10px; height: 10px;=
 margin: 1px; text-indent: -999px; cursor: pointer; background-color: rgba(=
0, 0, 0, 0); border: 1px solid rgb(255, 255, 255); border-radius: 10px; }

.carousel-indicators .active { width: 12px; height: 12px; margin: 0px; back=
ground-color: rgb(255, 255, 255); }

.carousel-caption { position: absolute; right: 15%; bottom: 20px; left: 15%=
; z-index: 10; padding-top: 20px; padding-bottom: 20px; color: rgb(255, 255=
, 255); text-align: center; text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; }

.carousel-caption .btn { text-shadow: none; }

@media screen and (min-width: 768px) {
  .carousel-control .glyphicon-chevron-left, .carousel-control .glyphicon-c=
hevron-right, .carousel-control .icon-prev, .carousel-control .icon-next { =
width: 30px; height: 30px; margin-top: -15px; font-size: 30px; }
  .carousel-control .glyphicon-chevron-left, .carousel-control .icon-prev {=
 margin-left: -15px; }
  .carousel-control .glyphicon-chevron-right, .carousel-control .icon-next =
{ margin-right: -15px; }
  .carousel-caption { right: 20%; left: 20%; padding-bottom: 30px; }
  .carousel-indicators { bottom: 20px; }
}

.clearfix::before, .clearfix::after, .dl-horizontal dd::before, .dl-horizon=
tal dd::after, .container::before, .container::after, .container-fluid::bef=
ore, .container-fluid::after, .row::before, .row::after, .form-horizontal .=
form-group::before, .form-horizontal .form-group::after, .btn-toolbar::befo=
re, .btn-toolbar::after, .btn-group-vertical > .btn-group::before, .btn-gro=
up-vertical > .btn-group::after, .nav::before, .nav::after, .navbar::before=
, .navbar::after, .navbar-header::before, .navbar-header::after, .navbar-co=
llapse::before, .navbar-collapse::after, .pager::before, .pager::after, .pa=
nel-body::before, .panel-body::after, .modal-footer::before, .modal-footer:=
:after { display: table; content: " "; }

.clearfix::after, .dl-horizontal dd::after, .container::after, .container-f=
luid::after, .row::after, .form-horizontal .form-group::after, .btn-toolbar=
::after, .btn-group-vertical > .btn-group::after, .nav::after, .navbar::aft=
er, .navbar-header::after, .navbar-collapse::after, .pager::after, .panel-b=
ody::after, .modal-footer::after { clear: both; }

.center-block { display: block; margin-right: auto; margin-left: auto; }

.pull-right { float: right !important; }

.pull-left { float: left !important; }

.hide { display: none !important; }

.show { display: block !important; }

.invisible { visibility: hidden; }

.text-hide { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

.hidden { display: none !important; visibility: hidden !important; }

.affix { position: fixed; }

.visible-xs, .visible-sm, .visible-md, .visible-lg { display: none !importa=
nt; }

.visible-xs-block, .visible-xs-inline, .visible-xs-inline-block, .visible-s=
m-block, .visible-sm-inline, .visible-sm-inline-block, .visible-md-block, .=
visible-md-inline, .visible-md-inline-block, .visible-lg-block, .visible-lg=
-inline, .visible-lg-inline-block { display: none !important; }

@media (max-width: 767px) {
  .visible-xs { display: block !important; }
  table.visible-xs { display: table; }
  tr.visible-xs { display: table-row !important; }
  th.visible-xs, td.visible-xs { display: table-cell !important; }
}

@media (max-width: 767px) {
  .visible-xs-block { display: block !important; }
}

@media (max-width: 767px) {
  .visible-xs-inline { display: inline !important; }
}

@media (max-width: 767px) {
  .visible-xs-inline-block { display: inline-block !important; }
}

@media (max-width: 991px) and (min-width: 768px) {
  .visible-sm { display: block !important; }
  table.visible-sm { display: table; }
  tr.visible-sm { display: table-row !important; }
  th.visible-sm, td.visible-sm { display: table-cell !important; }
}

@media (max-width: 991px) and (min-width: 768px) {
  .visible-sm-block { display: block !important; }
}

@media (max-width: 991px) and (min-width: 768px) {
  .visible-sm-inline { display: inline !important; }
}

@media (max-width: 991px) and (min-width: 768px) {
  .visible-sm-inline-block { display: inline-block !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {
  .visible-md { display: block !important; }
  table.visible-md { display: table; }
  tr.visible-md { display: table-row !important; }
  th.visible-md, td.visible-md { display: table-cell !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {
  .visible-md-block { display: block !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {
  .visible-md-inline { display: inline !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {
  .visible-md-inline-block { display: inline-block !important; }
}

@media (min-width: 1200px) {
  .visible-lg { display: block !important; }
  table.visible-lg { display: table; }
  tr.visible-lg { display: table-row !important; }
  th.visible-lg, td.visible-lg { display: table-cell !important; }
}

@media (min-width: 1200px) {
  .visible-lg-block { display: block !important; }
}

@media (min-width: 1200px) {
  .visible-lg-inline { display: inline !important; }
}

@media (min-width: 1200px) {
  .visible-lg-inline-block { display: inline-block !important; }
}

@media (max-width: 767px) {
  .hidden-xs { display: none !important; }
}

@media (max-width: 991px) and (min-width: 768px) {
  .hidden-sm { display: none !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {
  .hidden-md { display: none !important; }
}

@media (min-width: 1200px) {
  .hidden-lg { display: none !important; }
}

.visible-print { display: none !important; }

@media print {
  .visible-print { display: block !important; }
  table.visible-print { display: table; }
  tr.visible-print { display: table-row !important; }
  th.visible-print, td.visible-print { display: table-cell !important; }
}

.visible-print-block { display: none !important; }

@media print {
  .visible-print-block { display: block !important; }
}

.visible-print-inline { display: none !important; }

@media print {
  .visible-print-inline { display: inline !important; }
}

.visible-print-inline-block { display: none !important; }

@media print {
  .visible-print-inline-block { display: inline-block !important; }
}

@media print {
  .hidden-print { display: none !important; }
}
------MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://rss.di.fc.ul.pt/tryit/static/css/bootstrap-theme.min.css

@charset "utf-8";

.btn-default, .btn-primary, .btn-success, .btn-info, .btn-warning, .btn-dan=
ger { text-shadow: rgba(0, 0, 0, 0.2) 0px -1px 0px; box-shadow: rgba(255, 2=
55, 255, 0.15) 0px 1px 0px inset, rgba(0, 0, 0, 0.075) 0px 1px 1px; }

.btn-default:active, .btn-primary:active, .btn-success:active, .btn-info:ac=
tive, .btn-warning:active, .btn-danger:active, .btn-default.active, .btn-pr=
imary.active, .btn-success.active, .btn-info.active, .btn-warning.active, .=
btn-danger.active { box-shadow: rgba(0, 0, 0, 0.125) 0px 3px 5px inset; }

.btn-default .badge, .btn-primary .badge, .btn-success .badge, .btn-info .b=
adge, .btn-warning .badge, .btn-danger .badge { text-shadow: none; }

.btn:active, .btn.active { background-image: none; }

.btn-default { text-shadow: rgb(255, 255, 255) 0px 1px 0px; background-imag=
e: linear-gradient(rgb(255, 255, 255) 0px, rgb(224, 224, 224) 100%); backgr=
ound-repeat: repeat-x; border-color: rgb(204, 204, 204); }

.btn-default:hover, .btn-default:focus { background-color: rgb(224, 224, 22=
4); background-position: 0px -15px; }

.btn-default:active, .btn-default.active { background-color: rgb(224, 224, =
224); border-color: rgb(219, 219, 219); }

.btn-default:disabled, .btn-default[disabled] { background-color: rgb(224, =
224, 224); background-image: none; }

.btn-primary { background-image: linear-gradient(rgb(51, 122, 183) 0px, rgb=
(38, 90, 136) 100%); background-repeat: repeat-x; border-color: rgb(36, 85,=
 128); }

.btn-primary:hover, .btn-primary:focus { background-color: rgb(38, 90, 136)=
; background-position: 0px -15px; }

.btn-primary:active, .btn-primary.active { background-color: rgb(38, 90, 13=
6); border-color: rgb(36, 85, 128); }

.btn-primary:disabled, .btn-primary[disabled] { background-color: rgb(38, 9=
0, 136); background-image: none; }

.btn-success { background-image: linear-gradient(rgb(92, 184, 92) 0px, rgb(=
65, 150, 65) 100%); background-repeat: repeat-x; border-color: rgb(62, 143,=
 62); }

.btn-success:hover, .btn-success:focus { background-color: rgb(65, 150, 65)=
; background-position: 0px -15px; }

.btn-success:active, .btn-success.active { background-color: rgb(65, 150, 6=
5); border-color: rgb(62, 143, 62); }

.btn-success:disabled, .btn-success[disabled] { background-color: rgb(65, 1=
50, 65); background-image: none; }

.btn-info { background-image: linear-gradient(rgb(91, 192, 222) 0px, rgb(42=
, 171, 210) 100%); background-repeat: repeat-x; border-color: rgb(40, 164, =
201); }

.btn-info:hover, .btn-info:focus { background-color: rgb(42, 171, 210); bac=
kground-position: 0px -15px; }

.btn-info:active, .btn-info.active { background-color: rgb(42, 171, 210); b=
order-color: rgb(40, 164, 201); }

.btn-info:disabled, .btn-info[disabled] { background-color: rgb(42, 171, 21=
0); background-image: none; }

.btn-warning { background-image: linear-gradient(rgb(240, 173, 78) 0px, rgb=
(235, 147, 22) 100%); background-repeat: repeat-x; border-color: rgb(227, 1=
41, 19); }

.btn-warning:hover, .btn-warning:focus { background-color: rgb(235, 147, 22=
); background-position: 0px -15px; }

.btn-warning:active, .btn-warning.active { background-color: rgb(235, 147, =
22); border-color: rgb(227, 141, 19); }

.btn-warning:disabled, .btn-warning[disabled] { background-color: rgb(235, =
147, 22); background-image: none; }

.btn-danger { background-image: linear-gradient(rgb(217, 83, 79) 0px, rgb(1=
93, 46, 42) 100%); background-repeat: repeat-x; border-color: rgb(185, 44, =
40); }

.btn-danger:hover, .btn-danger:focus { background-color: rgb(193, 46, 42); =
background-position: 0px -15px; }

.btn-danger:active, .btn-danger.active { background-color: rgb(193, 46, 42)=
; border-color: rgb(185, 44, 40); }

.btn-danger:disabled, .btn-danger[disabled] { background-color: rgb(193, 46=
, 42); background-image: none; }

.thumbnail, .img-thumbnail { box-shadow: rgba(0, 0, 0, 0.075) 0px 1px 2px; =
}

.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus { background-c=
olor: rgb(232, 232, 232); background-image: linear-gradient(rgb(245, 245, 2=
45) 0px, rgb(232, 232, 232) 100%); background-repeat: repeat-x; }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:hover, .dropdown=
-menu > .active > a:focus { background-color: rgb(46, 109, 164); background=
-image: linear-gradient(rgb(51, 122, 183) 0px, rgb(46, 109, 164) 100%); bac=
kground-repeat: repeat-x; }

.navbar-default { background-image: linear-gradient(rgb(255, 255, 255) 0px,=
 rgb(248, 248, 248) 100%); background-repeat: repeat-x; border-radius: 4px;=
 box-shadow: rgba(255, 255, 255, 0.15) 0px 1px 0px inset, rgba(0, 0, 0, 0.0=
75) 0px 1px 5px; }

.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .act=
ive > a { background-image: linear-gradient(rgb(219, 219, 219) 0px, rgb(226=
, 226, 226) 100%); background-repeat: repeat-x; box-shadow: rgba(0, 0, 0, 0=
.075) 0px 3px 9px inset; }

.navbar-brand, .navbar-nav > li > a { text-shadow: rgba(255, 255, 255, 0.25=
) 0px 1px 0px; }

.navbar-inverse { background-image: linear-gradient(rgb(60, 60, 60) 0px, rg=
b(34, 34, 34) 100%); background-repeat: repeat-x; }

.navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .act=
ive > a { background-image: linear-gradient(rgb(8, 8, 8) 0px, rgb(15, 15, 1=
5) 100%); background-repeat: repeat-x; box-shadow: rgba(0, 0, 0, 0.25) 0px =
3px 9px inset; }

.navbar-inverse .navbar-brand, .navbar-inverse .navbar-nav > li > a { text-=
shadow: rgba(0, 0, 0, 0.25) 0px -1px 0px; }

.navbar-static-top, .navbar-fixed-top, .navbar-fixed-bottom { border-radius=
: 0px; }

@media (max-width: 767px) {
  .navbar .navbar-nav .open .dropdown-menu > .active > a, .navbar .navbar-n=
av .open .dropdown-menu > .active > a:hover, .navbar .navbar-nav .open .dro=
pdown-menu > .active > a:focus { color: rgb(255, 255, 255); background-imag=
e: linear-gradient(rgb(51, 122, 183) 0px, rgb(46, 109, 164) 100%); backgrou=
nd-repeat: repeat-x; }
}

.alert { text-shadow: rgba(255, 255, 255, 0.2) 0px 1px 0px; box-shadow: rgb=
a(255, 255, 255, 0.25) 0px 1px 0px inset, rgba(0, 0, 0, 0.05) 0px 1px 2px; =
}

.alert-success { background-image: linear-gradient(rgb(223, 240, 216) 0px, =
rgb(200, 229, 188) 100%); background-repeat: repeat-x; border-color: rgb(17=
8, 219, 161); }

.alert-info { background-image: linear-gradient(rgb(217, 237, 247) 0px, rgb=
(185, 222, 240) 100%); background-repeat: repeat-x; border-color: rgb(154, =
207, 234); }

.alert-warning { background-image: linear-gradient(rgb(252, 248, 227) 0px, =
rgb(248, 239, 192) 100%); background-repeat: repeat-x; border-color: rgb(24=
5, 231, 158); }

.alert-danger { background-image: linear-gradient(rgb(242, 222, 222) 0px, r=
gb(231, 195, 195) 100%); background-repeat: repeat-x; border-color: rgb(220=
, 167, 167); }

.progress { background-image: linear-gradient(rgb(235, 235, 235) 0px, rgb(2=
45, 245, 245) 100%); background-repeat: repeat-x; }

.progress-bar { background-image: linear-gradient(rgb(51, 122, 183) 0px, rg=
b(40, 96, 144) 100%); background-repeat: repeat-x; }

.progress-bar-success { background-image: linear-gradient(rgb(92, 184, 92) =
0px, rgb(68, 157, 68) 100%); background-repeat: repeat-x; }

.progress-bar-info { background-image: linear-gradient(rgb(91, 192, 222) 0p=
x, rgb(49, 176, 213) 100%); background-repeat: repeat-x; }

.progress-bar-warning { background-image: linear-gradient(rgb(240, 173, 78)=
 0px, rgb(236, 151, 31) 100%); background-repeat: repeat-x; }

.progress-bar-danger { background-image: linear-gradient(rgb(217, 83, 79) 0=
px, rgb(201, 48, 44) 100%); background-repeat: repeat-x; }

.progress-bar-striped { background-image: linear-gradient(45deg, rgba(255, =
255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, =
0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); }

.list-group { border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.075) 0px 1px =
2px; }

.list-group-item.active, .list-group-item.active:hover, .list-group-item.ac=
tive:focus { text-shadow: rgb(40, 96, 144) 0px -1px 0px; background-image: =
linear-gradient(rgb(51, 122, 183) 0px, rgb(43, 102, 154) 100%); background-=
repeat: repeat-x; border-color: rgb(43, 102, 154); }

.list-group-item.active .badge, .list-group-item.active:hover .badge, .list=
-group-item.active:focus .badge { text-shadow: none; }

.panel { box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px; }

.panel-default > .panel-heading { background-image: linear-gradient(rgb(245=
, 245, 245) 0px, rgb(232, 232, 232) 100%); background-repeat: repeat-x; }

.panel-primary > .panel-heading { background-image: linear-gradient(rgb(51,=
 122, 183) 0px, rgb(46, 109, 164) 100%); background-repeat: repeat-x; }

.panel-success > .panel-heading { background-image: linear-gradient(rgb(223=
, 240, 216) 0px, rgb(208, 233, 198) 100%); background-repeat: repeat-x; }

.panel-info > .panel-heading { background-image: linear-gradient(rgb(217, 2=
37, 247) 0px, rgb(196, 227, 243) 100%); background-repeat: repeat-x; }

.panel-warning > .panel-heading { background-image: linear-gradient(rgb(252=
, 248, 227) 0px, rgb(250, 242, 204) 100%); background-repeat: repeat-x; }

.panel-danger > .panel-heading { background-image: linear-gradient(rgb(242,=
 222, 222) 0px, rgb(235, 204, 204) 100%); background-repeat: repeat-x; }

.well { background-image: linear-gradient(rgb(232, 232, 232) 0px, rgb(245, =
245, 245) 100%); background-repeat: repeat-x; border-color: rgb(220, 220, 2=
20); box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 3px inset, rgba(255, 255, 255,=
 0.1) 0px 1px 0px; }
------MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://rss.di.fc.ul.pt/tryit/static/css/main.css

@charset "utf-8";

html { position: relative; min-height: 100%; }

body { background: none; margin-bottom: 50px; font-family: "Open Sans", san=
s-serif; padding-top: 0px; }

#backdrop { background: url("../img/bulb3.jpg") center center / cover no-re=
peat rgb(0, 0, 0); box-shadow: rgb(0, 51, 51) 0px -10px 20px; }

.jumbotron { color: rgb(255, 255, 255); text-shadow: rgb(0, 51, 51) 0px 3px=
 6px; background: none; padding-top: 10px; padding-bottom: 10px; }

.jumbotron h1 { margin-top: 0px; margin-bottom: 0px; }

.jumbotron p { padding-left: 7px; }

#logo { background: url("../img/gloss_logo3.png") left center / contain no-=
repeat; display: inline-block; width: 100%; height: 116px; }

.main-content { padding-left: 30px; padding-right: 30px; padding-bottom: 10=
px; }

.tool { top: 0px; display: block; position: relative; border: none; box-sha=
dow: rgb(153, 153, 153) 0px 3px 6px; text-align: justify; transition: top 0=
.1s ease 0s, box-shadow 0.1s ease 0s; }

.tool:hover { top: -5px; box-shadow: rgb(153, 153, 153) 0px 8px 8px; cursor=
: pointer; }

.tool > .panel-body { min-height: 120px; }

.panel-default > .panel-heading { padding-top: 12px; padding-bottom: 12px; =
background: -webkit-linear-gradient(top, rgb(19, 106, 138) 10%, rgb(38, 120=
, 113) 90%) repeat-x; color: rgb(255, 255, 255); }

.footer { border-top: 1px solid rgb(0, 17, 17); position: absolute; bottom:=
 0px; width: 100%; background-color: rgb(17, 51, 51); box-shadow: rgb(17, 3=
4, 34) 0px 5px 10px inset; z-index: 10; }

.footer > .container .text-muted { color: rgb(68, 102, 102); margin: 10px 0=
px; }

a.div-link { position: absolute; top: 0px; left: 0px; width: 100%; height: =
100%; text-decoration: none; background-color: white; opacity: 0; }

a.home-link { position: relative; z-index: 10; }

.navbar { margin-bottom: 0px; }

.navbar-simple .navbar-inner { background: none; }

.navbar-simple .navbar-inner .nav { background: none; color: rgb(255, 255, =
255); text-shadow: rgb(0, 51, 51) 0px 3px 6px; }

.navbar-simple .navbar-inner .nav li a { padding-left: 20px; padding-right:=
 20px; background: linear-gradient(rgba(0, 210, 252, 0.5) 0%, rgba(0, 212, =
255, 0) 50%) 0% 100% / 100% 200%; color: rgb(255, 255, 255); text-shadow: r=
gb(0, 51, 51) 0px 3px 6px; transition: background 0.2s ease 0s; }

.navbar-simple .navbar-inner .nav li a:hover { color: rgb(255, 255, 255); t=
ext-shadow: rgb(0, 51, 51) 0px 3px 6px; background-position: 0% 0%; }

.navbar-simple .navbar-inner .nav li.active a { color: rgb(255, 255, 255); =
text-shadow: rgb(0, 51, 51) 0px 3px 6px; background: linear-gradient(rgba(0=
, 210, 252, 0.75) 0%, rgba(0, 212, 255, 0) 100%); }

@media (max-width: 768px) {
  .nav { border: none; }
  .navbar-simple { margin: 0px; padding: 0px; }
  .navbar-simple .navbar-inner .nav li a { background: linear-gradient(to r=
ight, rgba(0, 210, 252, 0.5) 0%, rgba(0, 212, 255, 0) 50%) 100% 0% / 200% 1=
00%; transition: background 0.2s ease 0s; }
  .navbar-simple .navbar-inner .nav li a:hover { background-position: 0% 0%=
; }
  .navbar-simple .navbar-inner .nav li.active a { background: linear-gradie=
nt(to right, rgba(0, 210, 252, 0.75) 0%, rgba(0, 212, 255, 0) 100%); }
}

.nav-addon { background-color: transparent; border-top: none; border-right:=
 none; border-left: none; border-image: initial; border-radius: 0px; border=
-bottom: 1px solid rgba(0, 210, 252, 0.5); }

.nav-glyph { color: rgb(0, 210, 252); }

.icon-bar { background-color: rgb(255, 255, 255); }
------MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://rss.di.fc.ul.pt/tryit/static/img/bulb3.jpg

/9j/4AAQSkZJRgABAQEAYABgAAD/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdC
IFhZWiAHzgACAAkABgAxAABhY3NwTVNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAAAAAA9tYAAQAA
AADTLUhQICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFj
cHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0AAAB8AAAABRia3B0AAACBAAAABRyWFlaAAACGAAA
ABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kAAACVAAAAHBkbWRkAAACxAAAAIh2dWVkAAAD
TAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAACR0ZWNoAAAEMAAAAAxyVFJD
AAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvcHlyaWdodCAoYykgMTk5
OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEA
AAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAAAAA
AAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAA
AA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAFklFQyBo
dHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAt
IHNSR0IAAAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAt
IHNSR0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcg
Q29uZGl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENv
bmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAA
ABOk/gAUXy4AEM8UAAPtzAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAA
AAABAAAAAAAAAAAAAAAAAAAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAK
AA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUA
mgCfAKQAqQCuALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEy
ATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMC
DAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMh
Ay0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4E
jASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3
BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0gflB/gICwgfCDII
RghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicKPQpUCmoKgQqY
Cq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mDUAN
Wg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJECYQQxBh
EH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE8UT
5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF2UXiReu
F9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG9oc
AhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCY
IMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZcl
xyX3JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2
K2krnSvRLAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIx
SjGCMbox8jIqMmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDec
N9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+
oD7gPyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXe
RiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN
3E4lTm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYP
VlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1f
D19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/
aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfBy
S3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl553pGeqV7BHtje8J8IXyB
fOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrhg6GcobXhzuH
n4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaRP5GokhGSepLj
k02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3nWSd0p5Anq6f
HZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTepqaocqo+rAqt1
q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfguFm4
0blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZG
xsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnU
y9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj
4+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozz
GfOn9DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////4QDKRXhpZgAA
TU0AKgAAAAgABwESAAMAAAABAAEAAAEaAAUAAAABAAAAYgEbAAUAAAABAAAAagEoAAMAAAABAAIA
AAExAAIAAAARAAAAcgEyAAIAAAAUAAAAhIdpAAQAAAABAAAAmAAAAAAAAABgAAAAAQAAAGAAAAAB
UGl4ZWxtYXRvciAzLjMuMQAAMjAxNTowNjoxMSAxNzowNjozMQAAA6ABAAMAAAABAAEAAKACAAQA
AAABAAAHvKADAAQAAAABAAACvAAAAAD/4QInaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8
eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA1LjQu
MCI+CiAgIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1y
ZGYtc3ludGF4LW5zIyI+CiAgICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICAg
ICAgICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgICAgICAg
ICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIj4KICAgICAgICAg
PHhtcDpNb2RpZnlEYXRlPjIwMTUtMDYtMTFUMTc6MDY6MzE8L3htcDpNb2RpZnlEYXRlPgogICAg
ICAgICA8eG1wOkNyZWF0b3JUb29sPlBpeGVsbWF0b3IgMy4zLjE8L3htcDpDcmVhdG9yVG9vbD4K
ICAgICAgICAgPGRjOnN1YmplY3Q+CiAgICAgICAgICAgIDxyZGY6QmFnLz4KICAgICAgICAgPC9k
YzpzdWJqZWN0PgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1w
bWV0YT4K/9sAQwACAQECAQECAgECAgICAgMFAwMDAwMGBAQDBQcGBwcHBgYGBwgLCQcICggGBgkN
CQoLCwwMDAcJDQ4NDA4LDAwL/9sAQwECAgIDAgMFAwMFCwgGCAsLCwsLCwsLCwsLCwsLCwsLCwsL
CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL/8AAEQgCvAe8AwEiAAIRAQMRAf/EAB8AAAEF
AQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFB
BhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RV
VldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrC
w8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAA
AAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRC
kaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdo
aWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT
1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A/AFVzyad0oooIbuFFFFAgooo
oAKKKKACiiigAoAz0pUGTzT6Cr2EUYHNLRRVJkvUKKKKejAKKKKLWAKKKKmzYBRRRT5QCiiinZAO
UjFI5BPFJRQAUUUU7gPVsilqPB60ZpXAkopEJI5pae4BQOvNFFAroUnPSmF/SnEZFJsFJ3BC0Uqr
kU7YKYajKXaTT8Ypm4k8Um7CsKq+tOpFzjmlplbBRRRQLmCiiigXMFFHWlCHvTRIlFPCetLjHSnd
AR0oQmnAckmlqQGMu2kxzUlN2ZPNUgAR+tKFA6U4DcacEApX7gMxmlK460+kK5PNADKcgpwGKUDc
ae4CUY5p+0elG0elCRPMNCk9KCMHmn0U7BdiBQKWlC7qXYKYXtuIAT0oKkdaeBgUUBzEdHWn7R6U
tAXI+tOVeeadSqu6gVwA3GpooaSOLmrdvBnGapIluwkNvuq1Fb7akihx1qUKBW6iZOVyMIBTguaf
jFFXYm4AY6UEZ60UUWFdCbB700pin0UBe5EVz1pjwbqsYHpSFQaVhmdNbYPFVZofatiSHcKqXFv3
ArKUTSMjLdMVFVyaLOeKrunrWTVjVMjooPHWlCk9KRQ0rnrQExTtp9KUJ60BcbRTinpSbDQFxKRk
z0pwGTRsNA7kZBHWjYcU+igBgXJ5oZcdKfRQBHjNFSUjLuoAZ1oqQDHSkK560ARlM0hjp5XFAXdS
1AQDAop3l0GOmK42inbDRsNAXG0U7YaPL9aAuhtFO8v3o8v3ouF0Nop3l+9Hl+9AXQ2inbDRsNKw
XQ2inbDRsNMLobRTtho2GgLoaeetIFAp+w0bDSsF0Nop2w0bDRawXQ2inbDSbDTC4lFOVfWgpzxQ
MbRS7DRsNAXEoPPWl2GjYaBXEwPSinbDRsNTyhcbRSlD2o2GnZDEpCoPWnbDQVx1oVgGFPSkIx1p
9B560MBgwetPAxSFBSgelDuAUUu0ntRsNMBAM9KCMdaeBgUFd3WgAQkelWIJ8EVXC4pQcGhMTVzW
tbvaevFaFvdBh1rn4p8GrUF2R0NaxmYyhc345cin7getZMN/6mrMd8D1NaqSZi4NFw9eKFGepqut
4D3p32wetVcmzJmx2prNtqBr0Z61DJfD1pNpD5WWnlwOTVae8CjrVWa/3dDVSa7z3qJTsaRgTXV3
nPNZ9xcbjSTT7j1qBjurCUrm8Y2Gu+abSlOaChqbliYoqTHGKjIwaACiiilygFFFFHKAU5XKmm0U
0mgLUN4V71dg1EjoayAcdKesxFUpNEuKZ0Vvq+Opq5FqwI5NctFdEdDUy35A61qqrRk6SZ0/9pr3
NIdVUdTXN/2h9KQ6gfWq9sT7E6CXVxg4NU7jVS2eayGvye9RPdE96l1Wy1SSLtzqG7vVGa6LnrUb
yFupphfHSsXK5qopCs2eTTGbPSkJz1oqWirhRSoMmlZMdKEwsCrkc0MmOlCGnUnuOyaI6KKKQkwx
zmiiigsKKKKACiiigBrJ6U2pKRkz0oAZRQRjrRQAUEZ60jEjpTQT70rgO2ilpvmUBznmi6AUpk0F
RilpH+7TAZTlUEc02nIetLYAZeOKbUlMIwaYCUUUUmAU5VyMmm1IBgUwCiiigAooooAKRhkUuM0u
0ntQK5FSqMnmnMnPNGwUtRi0xvvU+k2ihgM60EY61JSE4I96AGUVJRjNFmBHRT9oprLij1ASiiij
cAooop2AKKKKTAQqD2oKCloqB3GlPSmkY61JQRnrQNSI6KcU9KbQFkwooooE1YKKKKBBRRRQAUUU
UAFFFFABRRRQO1wooooKUQooAz0pwT1oHewJ1p1IBjpS00iHqOCZFNp44HNMJyaqwgooooskAqfe
pXGaQHBpWfPSi6AbRRRS5gCgDPSinIMZzQm2D0GkY60U9l3Unl+tDuF7jaKftFGwUAMpVG407aPS
lo5e4B9KCPUU8DApaoVhgUml8v1p1FAMTYKUDFFFADX602nkbqQR+tAxU6UtHSigLhRRRQTzBRRR
RYXMFHWnIueTTqewiOinlQTzQUBoAag5zT6KUKTRYBKKcI/WlCAUaAMpQhNKU54p1P0AYy7aAuaf
SgbulADQMUtOEfrShQKaFcaATShPWnUUaiuxAg70uMUU9V45FAeozFGD6VJRTC40J60u0UtFArhR
RRQIKUKSKAhIp4GBQAwDJpTHShcUuD6UAN8upETOKVV45qSJMmqSE3YkghyavwQ4FR2sPtVtEraK
MZMTpTwoxzRsFKBk8VoRcTYKNo9Kf5fvR5dArjcD0ox7VIF9BS7DQFyIjPWkKCpWT1puw0BcjMdB
jpxGOtFA7pjCpqOWLcOanoZOOaATsZNzBgniqcsdbFzDkdKzp48GsJxNoyuUiuDzRUrpSdKyNCOi
nlQaawwaAEooAyaUqR1oATGaKKKADGaTaPSlooAaU9KQqRT6KB3GYPoaSpKOtA+YjoAz0p+0UoGO
lAcxGeOtFSEZ60mwe9AcwyinbKPLoHzIbRTvL96PL96AuhtFO8v3o8v3oC6G4JoqSkZd1AuYZRTg
nPNKVzQPmGUU/YPejYPegOZDKKdso8v3oDmQ2inhcCkKelAXG0U7YaQoaAuJRS7DRsNA7iUUuw0q
p/eoFcbRT9go2CgOYZRT9gpGT0oFdDaKKKCgooooAKKMZpcH0NACU1lxyTTyMdaQjPWgQwAH1p2w
UtFINxNo9KUDHSneX60eX607BdDaKfsFG0elAuYZRUmMUjLmgOYZRS7DQUIoHcSnLJim0UDtcnS4
IqVbvFUwcdKXeadyHEvLfYH3qd9tJ71n7zRvNPmYuQuve571G93VYue5ppcetLmHykslwWqJpc00
nPc0bDilcrRCE560UoQk0rJgUDG0UUUrIAoIz1oopgJsFJsp1FTZgNKelNIx1qSii7QEdFOcelNq
twCiiiobYBS7j60lFF2Vyilie9ITnrRRRdiSuFB9qKKLlWGlSevNNIx1qSinzByjFXPWnFQe1L0o
pNi0QAY6UUUUWuPmEC4ORS0UUNE3IzwaKVhg0lDEFFFFIrmCiiigYUUUUDCiiigBHXPSmVJQRnrQ
BHRS7cHmnbR6UARMuTxQE55px460UrAFI4yOKWimAzYacq460tFABTXXnNOpQCaBXIqAM9Kl8rJ5
pRGBU2AYq4+tLjNPCgUtUGozYaXy/WnUUBYTYKXFFFAbBSOcCloPPWgLojpVXdTtgpaWoXuIFxSk
Z60UUxjGGDSVIRnrRgelAEdFP2CjYKQDKKd5dIUNFwGFPSkII61IVIpKVkwI6KeVB60hT0os0A2i
lKkUlHMAUUUU73AKKKKTiAUhGetLRUgMK4pKkprJnpQUn3G0UHjrRVXvuDXYKKKKTViQooopAFFF
FBSQUUoGelOCY60DvYaBnpShPWnUUEthRRRT5RBTlTHWkX71PqkAVGeDUlBGetDC5HR1p+wUoT0F
LlFcaUpAh71IRjrSU+VBcb5frShB6U8J606iwxgQ9hS+X606imKw0pxxTakoPPWgexH1pwTPegpz
xQEx3qdwEYYNKnOaXbnrzSgY6UwCiiimTzBRRRQJu4UUu0mjaQOadhXEooHJ5pWXBHvSHcSin7BS
MvI209BDcE0pGDzSnJPJxQPmPNO4B5frS7RS0qjJ5pasBKUITTgoFLTXkA0R+tLsFOCk0oT1oYXG
gY6UU7y/ejy6EhXGgZ6U4J60qrilp2DUZtOaUR+tOo60ai1E2gClA9KUITTlXHWiwDQh704IO9LR
TFcQrmgIKWjBNFguHSil2Gl8v1otYQ2inhB6UvSgBqrnrSlQaWgdeaAE2D3o2D3qQKKXA9KYrkYG
Kcq8c06l2k9qNhcwlFLsNAUmquHMAGTVi2TJqFE/WrtonpVJEt6FqCPAqYD0FJEualC8cCtkjBsa
qetOVPSnKvrTqq1ybibB70mynUU7C5hFG2looAz0o5Q5gpCmelO2GlKelHKHMQsnHIppjqY8daaU
z0pWGmRhMGnEZFO2Gjy6AuV5k45rOvIsE1qzJwao3iZqJo0gzMdeTTCnpU0q4JqOsGrm6ZHSFQak
KZpAnPNLVFEezB4p1P2j0pCnpRZrYBhUGkMdP2GkIx1o9QGFDSVJQeetKyAjAyeKcY6ULg8UtGnU
BhU0h461JRTsgI6KkwPSk2ClYLjKKfsFGwe9FguMopxjpQgHWiwDKKeVBFJ5fvRYBtFO8ul2D3os
Ayin7BSkZFFgI6KfsHvRsFFgGUU/YKCgosAyin7B70nl+9FgG0U7YaTYaQCUUuw0bDRYBKKXYaNh
osAlFLg+hoCknmgBKKeE9BSlM9RQBHRT9g9Ka4x0oATA9KMD0oooAKKKKACiiigBGXdTSmOnNPoo
GnYYFJNO2gUtFAN3CiiigQUUUUAFFKEJoKkUAJRS7Se1JQAhQGjYPelooHdjWUL602pDz1owPSkN
SI6KeVB7UhT0o3C6Y3GaTaKUjHWilYLDdlOo60uDmnbuO3cSg89afsFIU9KAuhhQUhjp5U+lJQA1
Vx1pSgpaKLDGmP0pChFPooC5GeOtFSdaYUPamAlIVz0p+w96RlxRcCMoRSVIehqOktQCiiiiwXCi
gDPSgjHWiyAKKKKlqw7hRRRQlcLsKKKKfKIKKKVRk01oAlFPKDtTSuKLgJTWT0p1FS1Yq6ZHRUnW
mlPShWDlG0UUUiQooooG3cKKKKAuFFFFBV7hRRRQMRl3U3YafRQKwzYaUJzzTqKAsBGRSbBS0UDs
GMUUUUAFFFFAr2CiiigXMFFFFOwuZhRRjNLsNFhCUU7y/Wgp6UANopyp60uwUDuMop+wUhT0o0C4
2iijFIOYKKKAM9KB8wUUpU+lGD6GgOYSgjPWg8daKB3E2Cmsu2n0hXd1oGMopSh7U7bkc0AMIz1p
hTHSn0UmrgR0U8jPWmlCKNUAlFFFF0wCiiipaAQjd1ppXFPo60hp2I6KcU9KTYadx6MSjrShCaeB
jpSC6Q0J60oQClooFcKKKKpREFFFFPRAFFFAGelLmAcq96cBnpSKMCpaaE1caEPelCDvS0UwsAGO
lFFFAXQjDcKFXFLRQK6A0gz3paKB3CiigjHWgm7Cil28ZNJTt2EFFFFIdwopwTIpGGDT0FcSnKuR
zSD6U8e9ADNppfL9ad1op2sAm3HQ0vUc0UVICbQKWijBp2AKOtOVeORTqYEZX1FGKkowPSkkAxRk
80/GKUKTTguKdguMAz0pyqQeadQBk0xasUDPSlCetKq7aWmTfsIEHegqDS0UBcbspdoxxS0UBcb5
frTgMUUdaAvcKKUITSiP1oENpyrnk0oSnhPWgBoT0FO8v1p1FMnmE2CjaBTgM9KXZTFzMbTdlSKu
etKEHYUBcj2DFIEIPapinqKbsFIOZjetOCZFKFweKfsNMQwJilp6rjrS4HpTAjoqTA9KKAGxrk/W
r1qORVVFyauWw5q4kyZdhTipabAuRU1bxOdsaEz1pQuBTguaUR+tUSN2e1OEeaeq569KeBjpTE3Y
h2GjYamooFzEQTHXmgqDUuKCM9aA5iuy+tN8up3jpvl56ZoHci8ukKGpvK9c0nlntQO5XkXjmqN0
vFaUycGs+74BrOaNIMzZ1w1QMMGrUy81AV9RXOdCI6KeUBoAxQAyinlQe1GwUDuxlFOKelHl+tAX
YwqDRsHvT9hpChFIOYbsHvS44oPHWigfMJtFGwe9L1pdhosHMN2D3pNlP2GjYaVkHMM8v3o8unlT
6UYPoaLC5hu0UuB6UuD6GjB9DTDmGsuRxTdhqTB9DRsNKw+YZsNGw0/YaNhosg5hnl8UbDT9ho2m
iwcwzy/ejy/enUAZ6UW8g5hvl+9Hl+9P2GjYaNA5hnl+9Bjp5BHWkosHMIFwOabsNPoosHMM2GnB
OOaWihIOYaU9KNnHNOoosHMM2n0oC5PNPoosPmEVdtLRRTFzDShJprLg81JSFdx5pNDuMwPSjZ7U
/YPelpWC5HgelGz2/SpKKLILoj2n0oIx1qSg89aLILoiZc9OtJsNS7BSMnHFFh3I/L9aPL9afg+h
pMGkAmwUbBTwnrQU54p2C43A9KKftFLRYV0R9aXB9DT6KNAuiOkKZ6VIVyaQp6UguR7DRsNP2Gkx
zQMZsNJUuw0hXPWgCOin7B70nl0ANoIz1p2w00jHWk1cAxjpRRShSadgEopSpFJQAUEZ60UUWAQo
KTy6dRQO7GFSOtJUlBGetA+YjxmipKayZ6UBzDaRhkU4qfSkoKIyMdaTaPSpGXdTSCOtJoBuwUhj
p1FLUBFGBzSkZ60UU7AMK4NJUlFDYEdKqZ60/rS4PoaAGlBTSMGnnjrQeetADFXd1pwTBzS9KKNb
gFB5pVXd1pWXApgQ0VJSFQahgMopWGDSYzRYBCuaaUNPooswGbDShPWnUU7MBhGDSVIRnrTTHS9R
2G0U7YaaRjrRYAooopAmFFGM0UBcKKKKYgooopFXCiijrQJu4UUoUmjYQaBCAZ6U4Ie9OFKBupoB
oQd6UDHSnCP1pSoxxT3AZRTvL9aXYKWgDKOtP2j0pafyAZsNGw0+ijUBmw0bDT8ZpcH0NO7AiMfP
Io24GKkpGXd0pNARGOnBcCl2GnJ0waSAZRUhGetIUFP5ARt905plSuoFN2CkwGUUpGDSUgCiiigr
mGsmTxQ3C4p1HWgLojopxT0ppGOtAXaEK5ppXHWn0UmrlbkdFP2j0pSM9aFoBHRSsuKSjcAoooqW
rAFFFFCVwCiiiq0QBRRShCetK99gEpQpNOC4paLdwECY60tFORcnJqrCuIoyafRRjNCQmwopSMda
QDPSnYkKKft46Unl09GA2jrTwo9KWloAzaT2pfL9acaKLgN2U489aKUDjJp+oCEZ60YxSkZ6A0oQ
0WAZ5ZP3hR5ffmpaKVgI6KfsFG0elGgDOtKFNP60u00IBuCeppQMdKd5frShPWjQVyMqD1o2j0qX
A9KKqwXI6McZp5Xd1o2fWpFzDQmacRxilAx0pcGnYNWNCClpwQ55p3SmFxm0ntShPWnUUxcwgT1o
2gUuM04J60BcbRUgTHakK5oENCk0oj9acB6U8DFOwEewCgoDUhG7rQFAosK6I9gFL9KkxmgD0osH
MM2k9qUJ608KTShPWiwnIaBnpShD3p/WlCk0yRoQd6XGKcI/WjZzQA3GaXYTTtgpQvpR6AN8v1pV
XbTwnrTgmegp+orkdGz2qXYaCposLmIwh7CjYakCZ60FD2phzDQuBzRtFPCetLsFArkewUbBUmwU
FBQFxsYwas2x5qADFTW/BqoieppW/SrKJkVVtWytXU+7XRE55OwhjoVMdad1pdhqiLsSnKvejZzz
TgvpVJaCDA9KQqD2paOtFmAxlweKQ8dal2n0oKn0o5QuRUVLsz2o8v2osFyKipdhHamOuORRYCtc
jg1mXn8Vad2eKzLnkmsZm1MpSLmo2XHWpyOxpjDmsWjdMh2D3oC1IUzQE45pWK5iMoDSbKlC4PFK
RnrRYXMQ+X70hQ1NsFBQdqLD5iHYaNp9Kk2GlCetILkQQmgoal2Gjy/WiwXRFsOaNhqXy/Wl2c0B
ch2mjB9DU2wUhTjigLkWD6GjB9DUhU+lGw0BcjCkmlKYFSBM9aPL96AuiLB9DRsNS7DSFDQFyPYa
NhqTYaXYaAuRBD3o2GptgpCnpQHMRbDRsNS7DR5frQF0RbDTtg96eE55pdgoDmISh7imlQe1TFDn
ijy+eRQFyHy/ajYKnKelJ5ftSsFyHyx70uMCpNmD0pQhNA7kW3PagrnqKm2Gjy/WmK6ICg7ijYKm
MeaRo8UrBe5GBjpRUgGOlHl+1FhkTLupDHUuwUjJ6UAR7DRsNP2Gl2ce9AERQ0bDUhU+lG00ARhD
RsNSbDShOOaLgRbDSEYPNSlOeKQp6ik9QI6Kk6UUBcZg+hpMc1JShd1FgIwuTzTtgp5jo2GgCMp6
UbDUnl+9Hl+9GgEew0bDUnl0mw0ARlDSVLsNIU9RSsBHSFcmpNgpGTjigL2IynpSbDUm0+lIeOtK
w+YZsNJUlHl57UD5iOgD0qQR57Uvln2osHMRHjrR1qbyj3pDDQHMQlAaQx+lSmI00oRQO5GVIpwU
Y5paKBjSnpTSMGpKKAIyMdaKkpCoPWgBlIVB608p6U0jHWgBpT0ptSUm0elJjv3GEZ60m0elSFBS
eX70rD0GbBRsFSBBT0iJ6CnYLkHl/WlEOatx2hY9M1Zi00t0FWotic7GcID2pfs5rXTSWNSf2Mfe
q9myPaoxDAQKa0R7itxtHYdjUEulsO1DpsaqIyPK9qTYPStCWxKnkGoJLciocWUpXKwXHShhuFSN
H6jFN2GkVe4wx02pCMdaayZPFIBpGetFKVNIeOtFkxgRnrSFBS0UrANKelKR8uBS0UagR0VJ1owP
Shu4EdNZOeKkZeeKbQkAzYaUJzzTqKW+gBTWUk8U6inZgN2Gm1JRjFK4DVTPWjy6d1opANZcdOtK
vA5pacE9aAG7cUuCafRjNADAh705V20uKUITVahewlAGTTtnFKBii4uYbtNLsNOpdpPahInmGeXS
7BTthoK4p2YXY3aKXA9KKOtFhXCinBOOaQrg8UWQCUUUUWQDGGDSdakopOJXMN2cUFMDrTqQjNPY
VyNl3UhQ1IY/SkKkVO5VyIj1pNo9KlpNo9KYyPYKQp6VIU9KQqR1pARlCKSpKRhkUAMoIz1oopDT
sNKelNqSkK5oH6DKKUrjrQq7hQJXEIyKjqQjHWkZc9OtJlXGUUUUr33GFFFKEzRfsAKuetO2ClAw
KULmmK40KB0p204yacFxSkZoGR9aUJnrTwMdKKYrCBQKWiigTdthQuafSAYpwTNP1JEIz1opxT0o
EfrTsgG07YaUIKWgBhQ54pQnrTwpNGw0CuM8ujZ61Js9aCvPApJhcYEHYUu0+lSUUxcxGRjrRUnW
gL6CjlDmI8Zpyr6in7DSEYPNIOYaUyeKNnrTsH0pwT1p3YrjAuOlLT9o9KWiwiOnKnHNOop2GJsF
LjFFFFhXGsnU0mw0+iiw7iKCKNuevNLRRYVwopQNxpwj/GmAylQZ607aB2pyruoAFTNOCAUvWlxV
WJchKTaPSn+X60oQUCuxlLtJ7U/GKXaTQK9xnl+tKEHenhPWlCCmBHtBPSlC+lS7cdqAhNFrhcYI
/WlCY6808R+tKEAosK4wDJ4p2zinhPwpSnpRYV7kfl+tGzmpPLoCetMV2MCCnBPwpyrtpaBXuIEH
el6Uu0+lGw0BcSil2Gl8v1oC42ineX70mw0CuJRTtnrTgMdKBkdFPKg9aUD0oAjqWIYNJs9v0p6L
imhNl20bHWr0JytZsDYNXrd+frW8WYzRbVM0pjpYTuFSqmTxW6MG9SLy+O9Kq8cVMIiacIvamTcg
2GlEeanEWKXy/WgLkGwUnlGrAjyaXyvrQK5XEXNKY+OlT+V9aDH65oC5XMftUM4wKtS/KDVO5ek9
CkU7psms+ZeeavTHJNVpUzWEtTpi7FJ0596YRnrVh46jeOszRMgKkUBCal2Gjy6Vh3REVPpRj1zU
vl+9Gw0BdEOM0VN5fvSGP6UWC5FRUhT2pRHjpRYLkVGM1KY89aQRkdKVguMCk0bTUmw0bDSsK5Ee
OtHWpdhpdhosFyGipTFnrik8vB6UBzEdFS+X7Cgx+woHcioqXYaXy/WiwXIaKl2HNLsNGwXIgpNG
w1KE9aXYKYcxBg+lFTlBSGP0pWDmIaKmKUmw0BcioqXYaCh7iiw7kVFSeVQYsdqQrkdFPVMHjNKR
nrTGMCk0bD3qQKccUbTRYLkZQ0YPoafg+lFFgGYPoaTB9KkooAjwPSkK5HFSFATRsHvSAi2Gk2Gp
fLpdg96B8zIdho2Gptg96Ng96A5iLy/WgpgVLsHvRsFAczIcH0NG0+lSFDRsNA+Yi2e36UeX7VLs
NGw0BzEfl+1Gw+lSbDRsNFguyPYaXYafsNLsNAXZHsNHl+9SeX60eXQFyPy/ekYbTUvl+9IVINAX
IqKlwfQ0lKyHci2CkKelTEZFJsHvQ0HMQlT6UBCal8unCLNLlC5CI+acIcmrCQ5qRYD6U1G4nIrL
b808W/rVoQU/yOOlWok85U+zikNsKu+V7UjRDuKdhcxQa19KY9rWgYQelNaA/WlylKRmNARTDF7V
pPD6ioXt6lxKUii0dNKkVZkixURQiosVzEVFSHnrSFAaQ+YZSMmTTzH6UhQigq5GVx1pKkIzTdgo
AbTkTdTo48mrNtalz0ppXE3Yjittx6VdttML9RV2w0vcRxWzZ6UFAyK6IUrnPOtYy7XSM9qvwaSB
jIrSjtRGOBUgjx0FdMaSRzSqtlJNNXHIp/8AZ646VcCDvRtFacqM+dlE6cM8iopNMB7c1okc8A0F
OORScExqbRg3WkZ7ZrOu9KxnArrXgDDkVVuLAODxWUqVzaNZo4u4syh5FVZIiprqb/S+DxWNeWPl
seK5Z07HVCpzGWy5600oRViaLFREetYs2TI6KeEwaUjPWlYd0RFQe1IUqUpnpTDx1osC1GFOeoo2
Gn0Uaj1GFT6UYPoafRRqGpHSMMipDk9MUhT0pbgnci2GnKMCnbDShPWm9R3G0HkU4p6UbDSshXI/
LpNhzUhUg0bDS3HcSgjPWnCP1pQMdKBcwzGKUDPWnkZ60Bc9BTQrjdlKBj1p4j9aXaBSYmxlFP2D
NJs5ppCGjk0/YKAoFLTAMYopQpNLspiuNo607ZSquOuKAuMo61JjFG3npzQLmGYPoaTBqXYaNh9K
A5iKjrT9o9KXA9KA5iIqD2oKCpNgo2CgfMRGP0pNhqUx0GOgLoiKkdaSpdhpjptotcY0jPWmlPSn
UUrDvYYUNIeOtSUdaLD5iIqD1pCnpUpQU0qRSHe5EVz1ppT0qRkz0pCCOtKw7kRGOtFSEZ60wpjp
SAQ89aAMdKUpikoHcCM9aYVxT6RjxzQPRkbLupuw0+ik1caY1U9adRQBnpRawN9Ap6570BMdaWmI
KKKKBXCigDPSnBM9aBXuNAyaeEx1oC4pwUmgBQnrTscUKpxTgmepqloK42lAz0pwUCl607XFzDfL
9aXYKcEJoK4osK7EopdhNL5frTsITaT2oKkU+ilYCPGaXYTT6KAG+X606iiiwBRRg0UWAKKUITTg
uOtFrCuMoqQD0pdhphcjVM9aUp6VJ5frS7BQFyLYaPL9al2j0oKZ6UCuRFPSk2GpfLoCc80DuiPy
/WlCegqUJnoKXYaBcxGENPHSl2n0pQnHNMTdxm0E804Lmn4xSqu6nYVxoTHrRtAqQR/jSiP2pgMV
d1O2CniP1pRHQK4wDHSlCk08D0pQpNMLjQvHNKB6U/aPSloFcZsNKE9adRQK4AY6UUYzShCaBCUU
7y/Wl2CgBnWlCE08L6CnKnrQJsj8v1pwHpUgX0FLsNMVyPaT2o2GpNhpfL9aLC5iPy/ejy/WpPL9
aUIKLMLsj2D3o2CpdntR5ftT5QuRBPQU7B9DUmw+lKE9aOURFsNGw1NsHvSbBT5UBEFJpypj60/y
6cF9BQlYAjGCKswtjFQIvOalUYFWmQ3cvW8tXInyKzYWwatQy4NbRkYyRfQbqeFxUEM1Thw1arUx
egu3PajbjtTkIp1WK5HRUhOOtNZxigVxtNkbAoaTHSq8s2elS5WKWoy4l681SmbOanlYtmoHXNZN
3NY6FZ15qJlx1q2Y6jeOs2jRSKkkdQvHVuSOomHrUNFqRXMeOopNgqxsFIU54pWHzEGwUCPnip9h
o8v3osHMQlPUUmwVPsNJsNFg5iEx+xpPLyeKn2n0oAycUg5iHyvrSeXjrVjy/egx0w5iDYPegR/W
pvK+lHl/SkHMRFfUUYHpU2w0bDQHMQGPPY0eXn1qfy6PL96A5iDy+e9Hl/WrGwUnl0BzEOz2o246
ipvLo8v3oDmIdue1IY/Y1Pspdg96A5iAJjtRt9qm8ujYKA5iHafSgjHWpvL9aQx89KAuRbM9qQx+
xqYRYpfL96AuVzHR5eanaLn1oWP0oHch8v1zSGOrGw00w570WC5D5fvR5dS+SaUrjqKVguQ+X6Ub
DU2B6UbM9qdh3INhoKn0qcx57U3y6VkFyEp6ik2CpzHSFDRYLkOwUbB71N5ftSFPaiw7sh8v3o2G
pdg9KCgpWDmZFsNJsNTbB70nl0g5iLYaNpqUxGjyz3oHchoqUoccimmP2NIfMMop5j+tIY6AuNop
3l0oQZoGMoqQJntS+WfagVyKipfK+lBjx2FAXIqKkMee1J5f1oC4yineXQUoHcYV3daAgFOKn0pU
jyeaAuNVcnipY4MmpIYM4q1HBjrVJXJciGO3qQQgVMFxS1aRnzEJjoMdSlQe1IY6Y+YiKGkI9alK
GjYaQXRDtFBQVN5ZPY/lTTHjrkUWfYdyFo/xqKSL0q0YzTWj9aLDuUJYfUVXkhwa0pos9KrSxYzx
WckWpFB4+aaUNWZI8UwoKztY0vchKkUlSsuKQjPWkBFsFCx8+tSFAakiiyRTSuO4W9tvNbGm6dvI
yKi06z3sOK6HTrEADiumnTuc9WpYWysAmOKvxwBRT44dq9KdXbGNjhlO5GydeKYVIqV+fWkxzTBO
5FRjNS+Xn0pTHQFyHrS7DUgipwj+poDmRF5dNePPWrGzHam7KA5ilcWm8HIrG1LTeuBXStHkVUvL
XcprOcLo0hUsziL202E1Rlj5rpdVscE8ViXUG1jXBOFj0Kc7ookYNJUrpjrTdgrI1GUU7y6QoaAE
Iz1pCoPanFT6UlKwCFBSGOnUUWHdjCmDS7DTqKLBzDCuOtAG40/rRjFFguMKECkqSgjNA7kdHWn7
BS4xU2FoMCE0oj9adRVK4XECgUtFFFhBRS7TSHjrTsAdaUITSpTqCWxmw5p4GKUKTTguKAv3GhCa
UR+tPCk0vl+tArjNgoVcGpNgoKZ5xQK43afSjYe9PAowTQFyPGaUKTUgQ55pSnpTsxXREUwelJtH
pUwTPWk2GnYLkWB6UmwHtU2w56Uvl88UWC5AY/qKTy6mK5600pRYZEUNNZc9anMdMZOeaLAmReUK
a0PpU5T1pDH6UrDuQrERyaY/3qsFSKiYZOWFDGmR0U4p6UhUikO40qDTCMGpKQjPWpaGRFM9KTYc
1KU9KbQPmZGeOtIVz1qUjPWmMuOlIpMjK4prDcKlPPWmsnpSGQkYPNFPZc9aYRg80AKF3U8DHSjp
RQVsFKFzQBk0+gTdxAnrS4pQM9KcEHegQygDPSn7R6UoHpQAirgc9aXrTlT1p1MnmEVcDnrS0Uqg
5qrE7go55FPoo60wCilCHvQFJ6UBcSinBPWndKBNjNpNJipdp9KUJ7UC5iMJ60uwU/y6NlArjNop
wQ+lOCjNP8v1oC5EVPek8vPapvLoKelAXIthxShMHnFSbDQE9aAuNpwTIpypnpTvL9aBEezmjy6k
2ClEX1poCPYKXFSeVjqKMUARbOKTYe9S7BRsFIBgGOlO2GnKmegp3l+tUkK5H5frShBUmwe9Kqc8
U7BcZ5ZpQmetSbD3o8uiwriKuTS+XTqKYriAYpaUKTTtnFMQyinhBShc9BQAwKTTguKeE9aUJ60C
uhlGzHapQvoKNhp2FzEe0ntShPWnhCacq46UWFzEYj+tL5eO1ShSaXy/WnYVyIKTTgvtUmwUvShK
wDAp9KNhp+M0u0ntTFcYI/Wl2D3p2w0uw0C5hmwUAY6U/wAv1o8v3oDmG0U7y/Wl8se9AuZjMZpc
H0NSCLFGw0Bdke0+lGw1JsNGw0Bcj2nPNOCYNOCHPNOC4NAhFXuakRcnNCr3NTIlUkS2CJUqDmkV
ewqRV54qiLj43x1NTJKR0qBV9adWiZD1LK3PHNP88HuKrLn+Kl61fMTyk5uB601p/Tmo9ho2GjmF
YSSUmoycnmpTFmk8nNS3caZCUPamlPUVP5X1oMJpD5kVjHxUbRkVaaHFMaPHWlYakU5I89KgeOr0
kdQSJzyKlotSKhQg8Umw1YaKk8mlYrmIdnrSbDVjysnkUeX9KLBzMr7DQUIqwYqQx+1Fg5iDaaNh
NT+X7UvlUrBzEAT1o8v3qfyz7UbD6U7BzMg8v3oKHtU/l+1Hl+wpWDmZX2Gl8v1qfy/pS7DRYOYr
+X60uwe9T+X60eX70WC5B5f1o8r61P5fvR5fvTsFyDyvrR5fsan8v3o8uiwXIDHg80CPJqcx0eX6
0rIOYhMXtR5ee1T7B70bB707CuQGL0FIYjU+wUGPjilZDuyv5dKYvTNThPWl2D3osguVjHRsNWGT
0pBFRyhzFfYaNhqx5f0o8rPpS5R8xXKkUbDU/lc0hT1FHKHMQ7TSHjrU2yjy/ejlHchoPPWpjHTT
HnqKVguR4HpSbRUpjx1FJsFIZHsFIY/Spdgo2D3oHchMZ+tHl+1TbB70bB70BzMgKY6ijbjtUxjo
MdA+YhpNo9Km2H0o8v2oFzEJTPSk2GpDHzRsNKyKuR+X60eXTyuOppdme9FkFyMp6Um01L5dLsHv
RYZEE9aPL96l2D3o2CiwEXl0GOpdgo2CiyAh2Ggx56ipChzxRsNLlAiMfqKQoKm2H0o8r2FFguQe
XUsUPNSRw5NWIYcHgZrSNJvVichsUOOoqZVxViCEr1xyO4p/2YAHFdKws3qkZOaKvSkKCrX2Qd/p
W94L+D/iP4j3PleAdD1bV3zz9ltXkCj3YDA/E1UcHWm7RjcXOjlwmKCoPavpXwH/AMEwfHniSOGb
xbcaPoEMgy0dxO0k8Y90jVufbNe2/C7/AIJj+DvCk6yfEi6k8SSLztVntoT9RkE1uspxb+x+X+Zk
8XRjvNH5/CAsMqCRToLGSeQLGrMx7KCSfyr9XNF/ZY+FOiyh7X4e+G5XQDBmRpsfQMcZ+tdtpWka
D4djCeHNB0vTVXAH2W2ihx+Krmu2jkVd/HH8n+plLH0FtK5+RuhfCLxV4nP/ABS/hrX9RA6/ZtOm
lx/3yprpLP8AZB+KGoqDB4B8VjPTzNNkjH/jwFfq8+vQzEGeGeUjOd107fzNR/2vaLnbp8XPHzOa
7v7FaXvJ/gjP6/F7Nfiflbc/sTfFa3TdP4D8Rf8AALfefyBrD1b9mT4iaIrNqXgfxZEi9WOlTlR+
IXFfradbgC4Swsx9Rk0qeI3h/wBRHbw+6JyPxrKeRXXu3v5tFRzCK3/BM/GbVPCOp6QWXVNPvLZk
+8JIWUr9QRxWRNDX7Tazq8mu2rQavIbmFh8ySLuXHpzXm2ufszfD/X5Xl1jwjo08knJYRGMn8UKk
GuV8O4hq6a/P9DR5nRvpc/JiSPHWoXSv0m8b/wDBO74YeKI3ax03UtFuGOfNsdQZwPrHPv4+mPrX
i/xC/wCCXN/EZJfhv4psbvutvqNqbRvpvjLL6dhXJWyPEUVqr+h00sbSqbM+PzEwPIppi9RXqfxC
/ZH+IPwzjll8R+GNQltIs/6XZAXUGAepaPO0fUCvNp7Z4ZWSZWV14KkYKn3FcLwbi7O9zrU77FVY
8VZtYcsKFg9avWFtlhx3qFh5J7ClPQ0NJs84rftYPLQcVT0i0xjitmRd4UlVGABwMZwP512UqTSv
Y8+rO7IOtMYYNSuuDxTWXjkUzMiIyKFX86dsNPRPWkFxoT1pdo9KkSPPWnFMelOwEWB6UdaeVBPN
Ajz0FCC40qfSkIz1qUIaRk55ptBci2Co5YsrU5X0FJsPpSaC5ianZ7ga5vUbXaTxXa30G5TXN6xb
YJOK5a0DroT6HNyxcnNR7BVy4jwagK46iuJqx2pkJjoMdS7BTWXHTNIfMyPYaMH0NSBSTQVI60D5
iLA9KTYKkZdxpDHSHcjKelJg+hqTYaCMdaB3I8H0NGD6Gn0UAMwfQ0YPoafR1oAjPHWgDPSpdhNL
5frQJsjCetKEHepNgo2j0oFcjK8UBQKk2AUqp6CgLoYFJo2ZPSpRH60bPWgVxgTFOVM9KdsFOCk9
qBXsNCDvS4xThH604L6CnYVxgUmnBB3p/l+tKFx0ppE3GBPQUpQkc0+iqEMCGnbBS4zS7Se1ADdg
oKCnbDS7DQK5GU9KTB9DUhQ0BSaAuRUVLsJ6ikKZPTpQO5HQRnrUhX1FNZPSgBhQUhjp5XApKAvc
jK+opCgNS0hXPWgCIoe1Mdc/WpihFNZc9KVilIrlAaaVxVgxZphQ1LVir3ICuaaUxUxXPWmlcUhp
2IqCM9aeUzTSuOtFik7jWXNNIx1p9B560rDIimelMIx1qVlx0ppG6pGmRsuenWmVIeDTShJoLG0o
TNKqetOpAIBjpTlGTzSqnrTqBXFVM/SlMfpSr05papK5NxAuKWijrRyiClUbjShPWnomaoBoUClA
z0p4UClC+goJ5hoT1pwX6mnquBz1p6pkZoE3ciCE0FDUpT0o8v1oER+X608DcacFHYU8JnrTtcL2
I/L9aPLqXaKCoNOwrkXl04R+1SKnPFLsNFguRiP6Uvl1J5frS7B70WFci2Uu0VJsFBXNFguRbOaV
UxUmwe9KBiiwXG+X60uwe9LgmnhB3p2FdkYQA0vWn7R6UtMQzaT2o2H0p9GM0AMKGkKY7VJiigBo
j9aNgp1OCZ60BcZsFKBjpTinpR5dAXG0qpnrTlXFPEfrQF7DNo9KCuTzUojz2pdhHanaxPMRBPQU
4Ie9SBPWl2j0p2DmIwnrTlXPSn+XntSiOnYm9xnl+tKF9BUmwUoGOlADAhNL5frTsZpdhpi5hnl0
oGKf5frS7BQLmGUdalEefSjYaBXZHtJ7U5Yz3zTwnrTqBDNhpdhp3Wl2GgBnl+9Hl+tSeX60eXmi
wroZsHvQE/GpRFS7D6UC5iLZntS+X7VIEJ604RfWgOYh2GlEeetTiHNPEPrVcouYreV9aPK+tWvJ
pPJ+tHKLmK3lfWgR89DVgxfWjYKOUOYjVKlAx0oAx0p6R81RLYqJUqx0saVKiVaRDYxYs04R/wCR
UoSnBD3pkuREIcU4R1KI8n1p3lfSqsS5EOwUoT2qcR/jShMdBTsiXIg8v2pDF7VZCH0pRETRYXOV
fK9qPJzVsW5PalFpntVKJLmUngzUbwZ6itE2R9Ka1oaHC41MyZYM1BJFiteS19RVeW0qXA0VQy2i
5pPLHvV2S1x2qJoCOtRy2NFMreXS7B71N5XPNBhB6UcocxDsHvSGOp/I9qXysf8A6qVg5iv5fvR5
fvU5hFAh5osHMQeX70eX71ZMOeoNJ5HsaLBzFfYaNhqcRAUvl+9FkLmIEjpxjz1FTCPJpfK9qdg5
iv5Ofal8rHpU/le1Hle1FhczIPL+lHlfSp/K9qXysDtQHMVzDmkMWBVjZ7fpR5eT0NKw7lbYPSl8
r2qcx+uaVYs0WDmIPJ+lBiyO1WDHnrijyvpTsHMVfKPvSeX71bMWetJ5A74qeUfMVhFnoaDEasGL
HajyvrRyhzFbYaTYasGIdqTyqXKFyDYaNhqyIsUeXT5R8xW2GkqyYs0wxkUmgTIaMD0qXy+egpfJ
9v0osx8xBsFGwe9SmL2o8v2pD5iHZQY81NRQO5B5X0pDH7VOVB7Unl0WHcgKCkMdWNhpPL9qVkO5
BsNJsNTlPUUmwUuUOZkOw0bTUwj46Uhj5osPmISmeopNgqfyzTfLx2pWDmINhpQmetSmLmjYKQ7k
Xl0eX71KIvY0uznpQO5DsNGw1Nt9qCvqKAINho2Gptme1J5frQBFg+hpUTcealEBapEhx1FawpSm
LmsRzwIkjCN96jo2CM/nTRHzxVhbfJ5qRbQt0H/169GjgpS2RLqWJ9B0a31EzNqV7DZJDEZAWVma
U8YVQByT74FEFrhvlH5j371oeHvCl5rWoW9tpdvPc3Vy2yGGFC8kjegUcmvqf4If8E4bnUIotQ+N
93JpUbEMul2ZU3JHbzZOVjz0wAT9K9jD5Y2r8pyVcTGn8TPl3w/4XvvE2pxWWgWlzfXcxxHDbxNJ
I5Poqgk9RX0b8KP+CaviDxDFHdfFe/h8OQNgm0jUXF6w9GAOyM/Uk+or66+Hvwv8P/CXSvsfw40i
00iJh+8eIZnmx/flPzN+Jx7Vt+d5eRGoXJ9K+gwuSqXvTR42Iza3u0zzT4e/sZ/Dr4cGOSx0CLU7
yLlbjUnNwc9MhCNo/I16jbulnbrBZrHDbJ92KFBFGv0VQBVV7nB65NQyXgUkrnFexTwFKnokeXPG
Vam8jT+18cYApr3+7qePQ1kHUNoOWJpkuphR1Ga6fYrsZe0a3ZqyXvPOM0xtQBbADHtjr/KsWXV1
XJPOfSoRr/kuSgjbqPmGVGQRnHrzRHDp30G6z7m62o4PBGfrmo/7R+bqPxNc6+uBV+8OBx/kVGNe
BzuJ56cZpfVl2Gq/ZnSnVBu+Y/8A16BquehNcudXOfvfpQdZyOtL2HYr219zqDqfB5Ymo21Lk56e
hNc2NWxnvQuq7+AcZ98VCotFqpobdzqAxxgVm3d8Wc44qlNqYXjkZqpLqIPc/jWcqN9y4VC810EY
MhKuP4l4YfQ1ynjv4UeFviRE6+OdB0rU2YYEssAWYe4lTDj8zWs97uPBFILnAJYg1yVMFTqLWJ1Q
xVSm/dkfPPxD/wCCdOg6qWm+Gmp3WjyMeLe7H2mD6Bh86j67vrXiHj/9lzxf8Jw03iLSpJ7BOl9a
Hz7cj1LDlPowFffEdwHXg4B9DWnpzq5PnANu4YY4fjHPH6HivNqZHCesDujm0lpPY/NbTbXag44x
mrxiPQjpX298T/2NvCvxNjludGhj8Oaq2T9otEzDIfWSHp16lcH618x/GD9nHxN8GZy/ii0E2nu2
2LULb95bSH03Y+Q9OGANePicuq4b4o6G1PFQr6xZ5vJFjpUbJ/ezVyaPBxjP9KgaLJrx6lPsdCZD
sHvTkSnGLB705Rk1hYbdxKRulSbB6U0pTBMjAyaf0pQme1OC4pJBfsMpCoPWpCoNGwU7BciKelJs
NSlPSm0mFyvcJlTkVz2tQ9a6W4HGawdaTGaxq6o3pPU5a6TDGqzR+tXrxcSGqzJzwK4JbnoxZDsF
N2Gpig7ikMdS0Vci2k9qCh7ipTHSFDSsF0QsuelN2GpinqKaUNIZHsNIV9RUpU+lGw4pAQlQe1Gw
VKUyeRR5ftQFyLaBS4zUmPaigBm0ntRsNSbSe1Gw0AM8v1pwX0FOCetPWPjijcCMR89KUR+tP2Gl
CetOzFdDNo9KXbngU8rmlAx0p8ouYjC46U4JnrTulKBnpRYVxKKcI/WnBM9BVCIwMnineX61II6c
F9BQS2RCPPrS+XjtUuw0uygVyIIaXy/Wpdgo2CnYRF5fvS7B71JtHpS9KLBci2Ck2c1NRTsFyHZQ
Y/SpSoNBQGnYLkWw01k9amMfpSFT3FHKK5AU9KQx+vNTFQaQp6UuUZAyfhSFPSpyhppSjlHcgIx1
pCuetTlPSmFPwpND5iErimsu6pihFNKZ6UikyBk9aaU9KmIx1ppT0pOJSkQMufrTGXHWrDLnrTGX
HWpaKICnpTamZPSmFc0ilIZTGXHSnkYPNI/IoKI2XPSmVJSFATUNFJjOtPVMdaUDHSlCZ60gvcTr
T1XHWlAx0oppXE32ClVdxoAyaeBjpVJWENCetOAx0p2zmnBcdKYuYYEJqRY+OaUJ61IqetBLdxgX
FOCk1II/QU4JjrTtcm5GFx1p6rnrTqVBk81SQnIbsHpRtFS0gUCmTcaq5p2wUtAGelACBQKXrS7D
S+X60A2NxijrThHTxHigVyPB9DQEJqXy/elEf1oC5FsNJsNTiL2pCgPSgOYhCE05Vx1p/l04IfSg
OYjpQpNSbDThHmgXMRhMdaXbz0qUIR2o2GgVyMR560vl1IE9aXYKdmK5CY/xpCmD0qfYKQpxxRZj
uRBPwpfL9afsNLsoswuMKA9KTYKkEdOEftRYLsYqU4JzxTwnrTgPSqsJsZsNKI/Wn7SaUR+tOwuY
ZsFLjFP2ClC+goFzDApNKE9ak2HvShPWgVyMIO9KF9BT9oFLQIZsNKI/WndaXafSgBuwUuMUuw05
U/GgVxoUmlCHvTwhNOEf407CuRhB3pQm7tUgGOlKEJosTcjEVKE55qTy6cBjpQFyPbntShCafRTF
dDdhoCetSBCaljgzQlcTkQrFnoKkSAk1ZiteelTJBjrVqJDmVY7XNSLagVbEX0pdlVYnmZV+zikN
rVsx0eX70xcxTa19aYbbmr5jppT2o5bhzmf9nPvT1ixVvyQe1J5PpRy2HzESR+lSAdhS7DT0jppE
NiKlSLHmnrHUiR1SIchixU4Q81KqetOC+gqkrmbkRCL1p3kjvUojJqWODJ6VSiS5ECwZ6VKlr61b
itKsJaYHIrWMCHMoLa+opwtx6VfNvjpSeTV8hHOUjB680x4Par5hqN4afKPnM+S2B6Cq0tp6VqSQ
+tQSRVLiWpmTLa4PFQSW3qK13iDVE9sD1rNwLUzHaDn0ppiwK0pbP2qu9vjtWbgWplTy/ekKGp2i
x2ppj9amw1IiwfQ0YPoalMfrQI80rD5yIKTS7DUoi+tL5P1p2DmIdhpCpFTGLFJ5dKyBTIaKsCL1
pfL+lFkPmK1LtJqcw5oMNFg5iDac0bDU/lZ7UohosHMQbDSFMe9WDDzSeTRYOYg2n0o2k9qnMOKT
yvrSsHMQ7DRsNTiH1o8miwcxDsNGw1N5NIY8dc0rDuReX60eX71LsHvR5WemaLD5iLy/ejYalMR7
ZpPLNFg5iLy/pQUJ6ipNhoKGkHMRbPb9KQx56VMVPpSUD5kQ+UaBHU1IVz1oC5CY89aaYTVjYKCg
oHcrGL1pPK+lWTHR5fFA+ZlUxU3y6tGPHammOpaGpFfYaNlTmP2FJ5ftSKvchKHtTSMdasGP2pGj
osNSIKQqD2qbyqQx+1IfMRbBmjaKeY/SjYaQcxGUyeKPLqTYaPL96Vh3uR+XR5dSeX70eX70WGR7
DSbD6VNsHvR5eemaSVwIfLP8NPW33feqwkOOeCamgsmmbngetephcvlVa0uzN1FEqJCSfkU5qZbM
/wAQyavpafMEiA56tWlpHhe61SYx6ZbXFy6KXcRxlyqjqxA6AccnivpsNkyVr6vyOapiVFXb0MSD
TmcdDn6V6j8Av2W/Enxz1Ef8I5bC20uF9txqdyu23hx1C4/1j8/dXPbkV69+yp+wrceN57bXvi1b
yW2hBTJBZlik1+e24dVj7k8E9B1zX2NZaHaaFptvY6LbQWdnaKI4beGMJHEo7Ko4r1o5b7CSi9zz
KmZKaahqcD8EP2ePDvwG0dYPB9t5moONtzqk6g3Vx2IDD/Vp/srgepNd2IxG2EznHOOv50sz+WW9
jUEs5wP5V7WGwsae254uIxEquo532r/jVWa5AzyOKSa7O0k54rPu77d2rvVK5xc9iaW6z1wT61Tu
b/J649qpXWp7CctWVdawSecgfSqVEn2prTav5eQD+tUptZJ+7msa61YFj8341TfVjnjH0HetlSSR
DqNm4dRkuHxH3Vm69AAST+QNUW1Yu2GOKy31YguVZl+RlHvn/wDXj8apS6r15q/Z9kT7RXepujU/
mPJ+uaT+0wVIJ4Nc22s7s80watv+VW5PQev+cGkqTZXtkdGur5bAPH1pf7bJzg9K5tNR7hufp1px
1Mdc4PpWTjY2jM6JdZJPJP51IurbuhPHWuY/tTceDT49VKH5WwT61k46GsZnSSamSpJb9elVZdTB
OGY5rEm1R1zhv/r1UbWZfMIOMA9fWs3TuaKpZo6b7fuHUnvU0F4CMNkH0rmYtYlZwdgGO5q1b37G
QtuwSa53Fo6FK+x0cMuX6gCtjSpfmBWuTt9Q4BxnPWtvSdRGR0GahLW5clodzprh0BPOeoqe/tYr
+1lhvYY5oZ12yxyqHSQejKQQfxzWXo98rKK2RKsicHNdUqMa0eWaODnlSlzRep8tftHfsUfY47nW
/g1CWiGZbjSQSzRjqTbnJLD/AGDkjHGelfMVxAUcgggjqD1Ffp1cShG3LnIOeDj+XSvBf2kP2UbP
4iST6z8PkistdALzQbQkN+cdQOiScdeh74r5HNcllS9+lse9gsxVX3Z7nx/DZPdOFgQu2CcDrgVE
E2j61o6lplxo2ozWuoQyQXNuxikjkUqyMOCCOxqmY/avlalKz0PV5hIVAYGQZA6j1pXQFiVGAeg9
KcowKWuYOYiEf1NOCnsKfRQHMMKkU1hmpTUZ5NA07kdFSbd3akMf1oGVbgYQ1ha2eTW/eDahzXOa
zJljWFXRG1HcwLwZc1Wq1dcsarMuK897norYTGaQqDS0Uh3GmOkKGn0UDuRmPPUU0p6VNSFQaNwu
RbPWjy/epdgo2D3pWHci8ugx+lS7BRsHvRZCuQ7DS7DUuwUhTniiyDmI/LpdgxT/AC6CnpRYLsYE
x1pQPSneX60oGKYr3GlSKNpp9HWgBm0mlCetPCHvS+XQK6GBQKcEJp4XHSnBPWgTkMCY96cEJ61I
iU7YKaVySMIB1paeEHelC+gp2FcYFJpSnPFSBM9aPLpk3Iiho2Gptgpdme1AiHy6PLqfYaPK+lMV
yHYKNgqbYfSjYaAuQ7BS7PaptnrR5dOwXISM9aaY6nMZNNMfrmiwuYgMeDSFBmpzH6U0pnqKVh3I
SnpTSuOtTFPSkwfQ0FXZAUz0ppU9xVgrnqKQpmgfMV2j9KY0frVlo+PWo2THvSsVcrsmOvNRsMGr
TLkcVE8eTUtWKUiGgjI5p5jx1ppXFIq5C8WKZJHVj61HIuelJotO5WdeORTKnkB/Ko2TPSoLTInX
uKbUlNKZPFBQKnrTqKKhK4BShc9aVUx1p4XNWS2IB6U9Rge9Kq46U9Vx1oECpkdKcE9qVBxUiDPW
qSJuNSLPWnBOeadQBnpTsiWwFP2ihF/OniPnmmK4wKBSgZ6VII/anBPWgnmI9hpRH+NShfQU7YaL
CuyHZ7U4J61JsNKFxTtcQwL6Cgx56ipKKfKK4wR/SlCc808KTTlXHWiwXGbM9qXYafRTsF0N2etJ
sNPopBcZ5X0pQnPNOpQCelFg5hu0elKB6U7y/WnLHjoKdhcwzaT2pQmetP2nNGw0xXGbKXYKfsNH
l0BcYVyOKTZ61IU9KbjmgdxAoFBUHrT/AC/Wjy/SgOYaF9BS7DUixkClCetArkapzzTwh9KfRQIb
5frS7BS0AZoAAMdKKUITSiP1oC43rShD3pwUCnhPWmlcTYwIO9GwVJtFKF9BTsK5GF54FOCHvTxH
9KVUx1xSsK4wKBTgpNPxilAzVaCuM8v1p3Sn7BRtHpQK4yjB9KkoxmkK4zYacFwOaeE9acI89qEi
b2IwPSnBCTzUixVJHFk07CbGxQVZig9afFBiphH61pGJm5DAmKUD0qQR47Uuw1dkTcjwfQ0bTUuw
0oj9qdhEOw0bDUxSk8vNMCPy/WjZUvl465pVTnignmIhHzxzSmHPUCphHnrTxHRa4nIq+RSrDzVs
R/Wjy/rVcpPOQrF609U9BTxFz3qRYuKViXIjWPPWpFi5qRY81LHF61aRm5DIrfParUFtT4LfdVyK
3wK3hEylMhjgwKk8mrCw47Upi+lbKJk5FYw+lNMZFW/JFIYfSq5Rc5UMdRtH61eaDNRtCaXKPnKE
kWagkhrQkh9qglixUuJamZ7xc00w8VceOmeV9KixfMU3t6rzW/tWmYeKilgyOlS43KUjHlhx2qMx
+ua0Z7f0qs8HPSspRsaKZX2CgJ61MIsHijy89cVNg5yHaPSjaPSpxF6UeXRYOYg2CjYKnMXr/Kgw
+1Fg5iAqD2pdvtUvk46gUoi9KVg5iHZ7fpRsz2qfyj70eX9aLD5iHy/pS+XUvl/Wjy+e9Fg5iFo+
PWk2e1T+V9aPK+tKwc5D5eeoFHlfSpTGRRsNKw+Yi8r6UGL6VL5frR5dFg5yHyqPKzUxjpNhosPm
IvJ+tJ5P1qfYaTYaVg5kQmP1zSGMHrU5UjrSUWHzFfy8Hil8r6VORnrSbBRYfMQGLPamtFzzVkoK
Qx0rD5iv5VIYs1Z2GkMX0osPmKxj9qQoPSrDR0nlnPNKw7orlKQoRVny+KaY/aiwXK5460hXPWpz
GRSFDSaKTICnpR5dTFPUUYpWHzEJjpDHkc1PimlKQ0yHysdqQoKn246/pSFAfQ0rFXIDHSGP2qYo
KTy/ekw5mQlPUU0p6VY8ugp6Uh8xX8v3pCpBqcp7UqwbzinGPM7IdyBIi56VajtSDhRzVm0svNkV
FYKWIGW4Udsk9hWzP4djsdWuLezuYr2C3kKfaYgdkuO655x6HuOa+kyvKHWmlbX8jGpWUVfoZNnp
ZkJMgIA7Vs6F4RvfE+pRWXh+0uLq5uCFjhhQvI5PoBya9k/Zm/Yw8Q/tKXYm0N4tM0G2fbeancRs
Y4v9iMY/eufRTgdWIr9APgl+zh4T/Z70NLT4eWA+0hcT6jcKDeXR6Es4+6D2VeB719hGhh8uXslr
Lr5f5eh5NXGN6o+RfgF/wS31fXI7fUPjfdHRLN8ObC3Ie8cdcM3Kx5/E/Svqa1+CPhb4Q/DW9034
faLZ2FrMqLcFV3S3IBGfNkbLP24Jx7V6Mc5Pv+tZvia1/tDQbuE4JeNuPccitKdeU6sW9FdbHl16
sqkZczvoc1omPsMQ4+7xjsPQVFfyBM9+aqeFtQEunhWIzHxx2+tN1W82k9hXryoN1tTz6VdezTRV
u7nOcnA9Kzri/Abr39aj1DUQHYEmsS81cKx3E8c9K9KlhjiqYnQ0bvUcdD+tZV7qpAO49fes+71Z
mHXGazbnUsKd7V0/V7HL9Zu9C1e6nnPP5msy61LOc4+uarXl+eq8g9azLzU9+RGcY9alwsaKrcuz
al83LDn9KrT6oApBwR7Gsqe+YZDDn+VU5L8EYA3kDrnFJxRSm7s2W1NQGchfuOoyM4LA8/hnP4VS
udSy5IA5Oay31MbPTHaoJtQ85x8+B7UXSFbm2NabUBKnJUZ/So1ukSGUyhjMzqFcNwECtkY9SSvN
Zcl4Eb5MsDwTmo3vi24xybNq/dAyZCSAR+AOaiM73QV0klKXTsbH2snJ7imi+Poc1lNqO1fmU4Pe
mjUFP32wO2etczkd6tobP2sE/PnJ6c077eAvzEAA9P8A69Ypuy2RGx/E01NTZZASxBGDkY4rFy1N
bWWi1NttUU9zj1qM6lk5Un8awp9T+bc5XPU8f4Ui6kCPvgjr7VjOS6G9FXXvI6KDUQTye/rV6HUB
2cY+tcpFqW1sgjPpVmLWcLyRn6Vi3c6YWsdbDqa5B3DI9K1dP1Ibh8wriIdVKdwSfar9jrGWU7sV
K3KeqPUtA1dQFBNdVY6grqMD+leUaNr211ANdfpevBgMGu2k7nBXVjqp5lc5XIqjdBWJLd+KhXUB
IMA44zwaZJOc54x7mtZU+ZWZzqbWqZ5V+0V+zla/FiOTVfD5S08QIuNzYEd9gcK57PgABvwPrXyR
rehXXh/VJ7PWoJba6tnMcsUgw6MOxFff11c7BwwGeOmc+1eafHj4M2Xxb0sz2my11y3QiCcjAmA5
8uQ9xkcMeRn04r43Ocp9nerSWnY9/AZh7S1Oo9T5BxnP1puK0Nc0O78O6lPYa3A9tdWz+XJG4+ZT
/X1z0OeKqAFB/jXyDpqR7FyKirFxYPBFE8vSZdy4IPGcc+lVyMGsJQcQTuB5puynhc0uz1qSr2Gh
c9KVlxTwMdKZM+0Z9KBGfqcgVTXL6rLlzmtvV7rrzXOX0m5jXJWlc7aEbFCYZaozH6VO455ppQVx
tHZexCY89cUhT1FTFKQpxSsPmISgpPLqXYKQx0DuhmwUhTnipDHSFDQBERjrRUvl560hjwORQFyO
in7BRtHpQFxlFSYHpRgelAXI+tGD6VKFz0o2GgLkew0oT1p+w04J+NArkezIpVX0qQL6Cl2HNBNx
ix5604JjtUgGOlFOwXGhPWlCY60tKFJosTzCU4JnrSrHmpFizTsS2RiPPvTvL+lTBPxpRH7VVri5
iJY/xp4jqQJ607HFMhyIRHS+Xn1qWgDPSiwroiEX1pfK9qlKn0o2GqsHMRFPUUmwVPsNIY/YUC5i
LA9KTaPSpTH7UvlZ7UxcxDsFIYwamMNIYvrQPmITFTTF9an2GkKkdaB8xXMeeuKa0VWCuetIU9KN
xplYoaYY6tMnPNMKelKw+YrEY60hUGp2jzTGj9aXKUpEDJ61G6etWSuOtMZM9KktSKxjphT0qw0e
OlMZMmlYpMryLTCM9amkqNlx0qC0yFlyeahde4qywyKidcc1LRoncgZc9OtMqZl7imFMmpLTGdae
FxQFxT1XuaBN3BVzyaeF3UqpnrTgM9KBABjpTkTJoCetSKuOTVJEtgE9acB6UAZ6U9E5qiWxAnrT
lX0p4T1p4Tmgi41Ez0qRY/SlRc9aeBiqSFcaI/WnAY6UoUmnLET1p2J5hlFS+Vj0oCHvTFdkYUml
CetSeXnpThF7UCbIggpQvoKl8vApQnrQFyIITShPWpgntSiOgVyEJ7Uoj46VMI/WnCL2oFzFcx8c
ik8v2qyYvak8r60D5iAR57U4RelTeV7UojxRYXMRLHnpTthqXy/rR5WOuaA5iMIO9BTPSpRHjtS7
D6U7CuQeX70vl+uamCHvThEaLD5iuY/rSCMmrQi9aXyRRYOYrCPHQUpU+lWfKH+RSGHNFhcxXCk0
vl+9TeTR5XtT5Q5iLYPelEftUojpwi+tOwXIhHRsqXy/Y0vl57UWC5FsFHl46g1MI/pRsOaLILkQ
XngU4J61II/WlCgUxEYX0FOCE0+igV0NEfrQY6d1pQh70hXGhcUtO8ulVOeKBXG4PoaAhPWpNp9K
csf40xEYj+tPEfrUgj9akjhLHgUEuRCsXrUixZ96tQ2Bbk1cg03PaqUTOVRIzktWboKswWBPata3
0gt2q/b6Lx0rSNMwliEjESxx2pxtNtdCNH46U19H46Z/CteQx+sJnP8A2Y0fZz71tPpPqKgk00qa
Tiy1WTMwRYp3l/Wrb2hWmGEilYrnuQeV9aQx/WpzGRSbDTsLmIDHmgR49KmMftSeUaFEOYYBjpTl
TPWnCL1qRI6qxLkNSPNP8jipY46kEYFUokORW8kU4R1OYwaFj5o5SXIYkfNTwwbjyKdHF61at4qu
KMpSH29vjrVlIeKWGLHWpghrpirGEpEXle1KU9amWKneVnrWiRHMVwho8v2q0IaPJ5p2J5ip5NNe
A/Wrwh9aRoKrluHOZskXHSq80GelaklvVaaDGahxKUzLkg9qiMX1q/LFnr1qFo+azcTVTKpixSNF
mrWzPagx+xpcpXMZ08PrVSWLk561rzQZFUp4OTxWcolxmUDHzzR5YqdoeaTyvas7F85FsHvRsHvU
vle1KIueRRYXOQ7B70mwVZMWeoNN8r6UWHzEBjo8v3qbyvajys9qVg5iIR59aQxkVP5eBxRsz2pW
DmIPLNHlmrGw0mw0rBzFcoe4o2GrGw0nl+1Fh8xD5frR5QqbyvajyvalYOYhMdLsFS+X7UbOelFg
5iEx0eUKm8v2NJ5f1osPmIvKH+RSGL6VLsoMdKwcxD5XtSGL61PsNIUNKw+cg8rFBjqfYaQj1FFh
85AY/YUnl+1TlQe1GwUrFcxXMX1pPL96sGOkMXtRYfMQbDSeWfapvKz0o8r1zSsVzEHle1IY8VOY
6QoaQ1IrlCKQpnqKnKDuKQp6UrDuQGL600xZ9KsFCKQjPWpsVdlcw0hiNWCgNIY/SkO5X8ukMZ+t
WChppQd6CkyuUBNJ5dWCnpTSnqKVkO7ICppMVMY89KUIccc0rD5iFVLMAKtQQYHTJNPtbc7gMctx
Wpo+hPeXGwDkZznoK+kyfKamInHlV5Mxq1lBXbItK037WCMBdpyW9v6YxX11+xt/wT2u/ivbWnib
4xx3OleEDiW1tBmO51Zc9QesUJ6bz8zZ+T1rb/YK/YCbx9JY+NPjBZpH4WgbzbCwmBDay6nh3HUQ
AjOf+WmAB8uTX3bfZB+YAAAbQABtAGAMDgAdgOBX19atDLF9Ww7vU+1Lt/dXn37eu3j1a7q+89uh
i6bo9n4c0e203w7a2+n6dYxiK3tYIwkMKjsq/wBep71HM+3rjFV/Evie30SNvMlXzPSvNfFPxRlL
utvNtz0x1H4VWBy2ritYr5nhY3NKWGV6jsejz30Y/iB/pVeedZUO057fpivJdH8fXd9d4MwkU+vX
FdjpertMoJJP1r062UzwvxMww2YQxaUo7HNaXP8AYNRvLeXAeKVl+vPX9RTNZvxk8/lVHxle/YfH
zNB926iDSYP3WBwfzyKo61qWyPr2r6Gnh3UcJ90eSsSoc9N9LlPVNTKk4/WsK+vi5YyMM9gKNS1A
qheR9oz+FYV7qHnIO/PBr0lQ5VojzJYy75G9SzeX4gbbk5OD9ap3Wobn2g9uc1m392ZEIlJLD+EH
k1QvdWYx5UtEQcYJ56UpwVhRryi3oalzfBhgMOPSs66uVKFjgkdecVSuL2QxKUOzjn1qnc3TNH94
O3XkmuSrHl1uelSr8ztYmuL0Ox3Mfzqlc3AA4Oc8daqXV5JtJ+UbeoFU7u+byipKop7g81y1HodV
Gpq0zQe4w2TwAOeKrHUBNKwX5QBk571ny6i0EqeYzcEHgA8e2ar3GqMZUWAKqxrswowWGSQWweTz
1rllP3dTeLbnGMVoa0uoqgB4ximHUA8bfMoBrFbUtzY25J4okvvL44HbpXJKVkdkfe1WxtJqXmEg
AYpz3YbpgmsM6iUXKFePzqM6qYP9Y7/N7Vi6up0RV42ZufbMPh/x55HvTZNRCg7DuArBn1pEUlye
nSq7a64AATdnrk9qzlVb6lwSi7M3Jr35gxJBzSJqBZiNzEYrEOvZbGOo5J7Ug1dWfDk5FY+3OjkS
2OhS9UHLFqlS9LD5TwawBqiOPlLsfSpF1VcgfOMUe07FJX3OliumViQc1btb3LAEniucg1IbBuY+
3tViO/AIO7il7RmyjFHZaZrT27jacfjXT6N4lJYBic15ja6ntOVatfTNd2uCcg+ta061nuY1aSkt
D1+y14SqCO/FXjqIIypyK810rxJuIBcE/lW/beIV8ogtgHpg9a9GlXUtDzalBx1OgutREg+UED1r
Onui0nBzznrjFUZNV38o+d3AAoF0MfNksTwfWubMq0cNTcn9xWEpSrzSRxHx6+FUXxE0j7VpyIut
Wi/u3Uc3Kj/lmx9euD/jXzZLA0MjRyqVdCVZSMFSOoNfQ3xW+O1r4TeSz0QLfaiBg7j+6t/TeR95
h1wOPWvBNa1O417Vp73VH824unMkjgAbifYdK/NcRUj7VuPXc+sjdJJlBk2jHpTTHnrk1b8rcvTm
k8vPXFTOjcfMVBHR5dTyRhTmoJZQtcMo8mjKTbEYhAcVn6leBEODTr6/EannmsLUL/eTzXPUqJaG
9Om2V9Tu95PNZM7ZNT3E29jmqzjJrhk7s74rlQ3GaTYKWiosXzDdlBjp1FFh8xGV55FJsFSnnrRR
YLoh2ClCDvUhQGkCYPNJDGbBSFPSpSoNIU9KdgIinrzSYHpU2w0mw0rARBfQUu0+lS7DR5fvSSAj
2GkKkGpSnFJtNFgGBPWlCgUuMmnhPWmkK4yipMYpAo9KdhXGAZ6U4J608DPSnBMdaRIxY808Jj3p
wUmnpHTsJuw1V9aeEJ609Y/SnhcVRDY1U9KcEHelpQhPWmlclyExil2kjpTwvpTgnrVWJbIhFThH
UgT0FOEf4U7E8xD5eexpRFU3l04RetOwcxB5X0pPK9qs+V9KTZjqKdhXK/le1Hle1T7BQFApiuQe
X7UGL2qfaKQp6UBzFYx/jSGLParBXHWkKCiw+YrGL1pGiqyU9KQx59KA5ioY6jaPHSrjw1G8eKXK
VzFUrzyKayZ6VYaOmNEetTYtSK7JUbR1ZZc9RTHjyOKRSkViMdaY8dWHjqNlxUtFqRVdM1C6Yq5I
mahdM1DVzRO5UIx1pjrj8ankSoyM9ag1TIGXFMKc8VMy461GRg1LRaY1V7mpEXuaRVyeaeBk1IxQ
MmnAYoAx0p6L3NWlYhu4Kvc09VyeaFXdUqR0yWxFTinrH6U9Ux1p4TiqsRcYq46U8J609Ep4i9qo
nmGAE09V9KcsdSLHTtclsYsf408J609Y6eqegp8pPMReXnpmlEXrUwj9aXaPSnYVyIR07y8dqkpd
pPaixN0RCL2pwjp+056UoT1osHMM2CgIM9KkCU4J+FFhcxGI/alCetSeX70CP1osHMM2CjYKk2Cj
YPSiwcxHtHpS4HpUmz2pRHRYXMR7SaNhqXy6cIs0WC5D5frSiP8AGp1gzUiQDtRYOaxWWL0FPWAm
rKwVItv607EOZUFt604W4q4tt7U/7PmglzKP2f2pDbA9qv8A2Yd6Ps4oFzme1tjtTTAR2rRNtnpT
Wtj3oKUzP2Y7UYNXGg9RUbQ4p2L5rleipjHSCP6UWHdke0ntSYPpU3l+9Hl+9FmFyIITSiP1qUR+
2adsIFFhXIPL5pQgqUR47Uuw0rBciC56U4R+tSbPWlVMdaBXGBPQUoQ0+igm43Z609Uz92lSPd1q
1bW248imlcTlYZb2pY1fttPz0FT2VjntWlb2eO1aqJyVK1irb6d7Vft7EDqKnjgx2qxDFzzWkUcU
6rYtraD0xV6G0GOlMhTkCrkQ4rogkcc5tkYtx6UhtQeoqxR9aozUmVHsge1V5tOB7VrbQaQwB6nl
LVRxOduNOx2qnLaEHpmuonsdw6VnXdjg8CpcTop17mC8OD0qNos1pzW3PSqzwVFjpU7lUxZ9KTyv
arPlUhixRYrmIPL+lOWM55qTaKUDPSqSsHMCJjgVMkeRSRpipwOMVaRnKRE0VII/Wp9ppPLyeRQ0
Q5CRpk1ctoulRRR1cgTtWkEZSkSxR8VIEApUXNTLHxzXQkYSlqRhM9acqegqQJ6CnLETVpXIciLa
c0bDU4i9aXyvpVWJ5ivsOaNh9KmKDuKNgpi5is0dRTRZFXTGDUUkWe1Ow1Iy57fmqzw4rUmix71W
kiFZuJqplLy/Wgx1bMI9aQw+lTyj5ylJHiqdxHzWpLF61TuI+tRKJpCRnPHg8Umw+lWJIue9N8o1
jymnMQ7D6UbD6VL5fvR5dLlDmIcGjbjtU/lGjyiOtFh8xBjNGz2/SrHl+xpDH7GlYOYr7R6UbBU5
ipPL9cUuUOYiCZ6Cl8r6VKIvSgxnvS5R8xDs56UeVntU3l0bDRyhzEJiz2pPKx2NT7DSbDSsw5iL
yvrR5XtUwT1oKelFmPmIDFj1pPLqfafSjB9DSsHMQeX70hjz6VOR60YoHzEBi+lIY/apygo2D3pW
HzEHl57U0x1Z2CkMYpco+YrmPNNMfqKsGPnpSGP0zRyj5iuY/XNJsNWDH60nl46YpWY+YgCc80pQ
VKY/UUnl80hqREY/SkMeeoqUx+lIVIoHzELQ0xo8VYoIz1pNFqRVKc8UhQ+lWWjz0phjx1FTaxaZ
AY/UU0p6VYMdNKcdKQ7kOz1pCpFSlPShgB9aVikyAqD1pCnpUxX1FIVBpNFXITFmp7GxEj7pDhR7
UsUBkYD9a2tE0w3F3Gu0MuRxnG7n1r6Dh7KpY+um17qf9fduY1q3s43ZLY+FJ5HhBicyzgFEH3ue
nFfZn7Av7AifEC7i8SfFC3DeGrF8rAwwdWnXrH7wrxvIIyfl9cM/Ym/Yin+LniganrqtaaHaKJry
4AJaJMcRoTn526A/wr82OQD+itr4etPCmhwaZo1rHaWenwgCCFflto1HCD/dByTzlie/NfoueY/C
8NweDwL/ANokvel/JHsv7z/Bdrpny9HFTzRup/y5j1/mfb0XcxtSVIIxsCRxRKEVVAVUAHAAHAAH
AA4AAryz4o/FWPw9bSR2DZYfxA9/atT4wfEw2QmtdDIYxt5TupxukOMIvrxlm9BivD9bum1V3e7c
yEsQcnGB3/KuDIMl9ratXWnY+a4j4ljQvRw7978DO8T+Ob3U5XJZ4g3O4n5q4vUblpnJlZmY92PN
a2oKFBKDA+nSsW9BOSK/VcFQhSSUFY/LFi62Nnz1pNsNN1uTS7qMhiVU4xmvXfCmu/arVS5IOMnP
pXiA/eTYIr1fwufI0mMt3XvXNnWHjKCdtT7LIMROlKUW9Nyh8ULt7LWbPU7b/VN+4lA/MH8s1ka1
rYe2WSM/eAxWl47kGpaRPHn5+HXvkr2rim1MTWMccm4sh654PFGDoKdKF1t+RhjsS4VanI/iV/mR
6xercoWDABeTzWJe3hRSpb7p4xVi9n/duoC4bqTWPdz9Qa6JwtoctJOo+Z7jJ9RESkqd0meCegqn
d6kZYlDkE+vrUN3OAODWdPdbQcnHtXl1mos9qgpWsi/PqOI+WBycbRVa4uyqARqBx1zzWfLd4bLt
ioJLsLgkghuhNebWqo9OjTk9UXWuPMLbwDkc881R1R1EecDGOD1qs9+N/U471RutRDqULDA715tW
rdnqUY3hZ7jpJfMU7mGB0HrUIuEDbg7Egc89KqTT9WByPWq0l0f4T14Arz6ta7smehQoxhq0X5Li
N8nt/OmPeITxnjpk9KzjebEPoegqI3hU5JPPpWMqrZ0Rin0NJrrMec/rUUt4GI3+nX0rNk1DJ+TJ
zTGvN3Kk56YNc8qjZ1RUdEi5PdF8fMcHr71A1627gniqzzFjjJ/PpTTkc5BOMVhOpodNOnZ6IuLe
EnBJ6VIt5ljgA4rPMxL808S7CQMn61jzs6FTRofbivzZ4HWrEd/x2GfesYzshBB4/nTo522Ak55x
9apVNCJKztY6CLUgQF3DPvVmK9G3hgK55bkqOcE/SpF1AomF6ml7ZoHTW7Z1EOocgZGB71fg1LjI
b8K5K21FgRuJ6Vbt9XIfqcVXt2JUzsLTWSpHT8617PxN5eOa4GPVF4KkH8amXXQASegFbU8Vy69j
OeH59D0yz8RjaXlIBrN+IPxFg8PeHpJJrnyZp1KxBOZGP+wOw/2q4HU/iDD4fsJLjUXIC8IgPzOf
QD+vavKfE3jS68R6q93qRGX4VQeEXsBXn4vGzxEXUWqOqhg1Q9017m4FzIzMzMWJYljkkn1PeoC4
DVhx62e5FSf2wHHWvn6sVWfNFanV7Nrc2/NVe9NluFAyKwm1rbwTUcmuH1opVkvdkP2TNS5vlAPI
rJv9U64NU7rUyckHrVC5uS/INcuLjzLTdG9OkSXmoFxyazp5y1JI5LcmomyfWvDm29zsjFIa/I70
wjHWpKKzNCOjA9KkIz1pCoPagCPYKQx1LsFJ5frQBH5dHl1LtHpTthoAgKelJsNWDHnqKaY8UBch
Kn0pKm8v3oMeaAIaKkMXPSgx46igd2R0U4p6UeX70BdjaKfsFG0elAXYynBPWnBM9BT1XHWkkJjA
voKMdqkpQhNMVxgT1pwGelP2CnBPwoJbGrHnrUgTHWlAx0pQpNMlsSlC5pwT15qRU5561SViGxix
+lSLH6CnBPWnhc0yXIjEfrxT1X0FSLFkU4R+tVYTdyMR+tKBjpUmwUojyeBVJENjApNKE9alEf40
4R/hVWJbIPKNHl5qyI8+tBj+tOwuYqeV7UeV7VZaLmjyvpTFzFby/akMdWTFSGL60BzFYx00xY7V
aMeaaYvagOYrmLNIYvTNWDFz3pDHigOYrFSOtMZM9KtMvqKjaL0pcpakVXi56VGyelWmX1pjpUtW
LUiqUBqNo8VZZPWo2XHWpsWpFdlz1qJ4+atSR56VGy461LRomUyuOtRSx9xVp4+DioWXsaho0TKk
q8VA45q1KnJqCVKyaNUyFhuFMI9akpGTJpGowDsKeFxQq460oGTxUpA3cVVyeakA3GkVewqRV5xV
Et2FSOpkXApEHepEj3HmqSM27CxoTUqp6UInpUoT0qjNsakfrUgjz609I/WpBH61aRLZGsdPWP1p
4X0pdhpkuQ0DHSnAZ6U5Y/xp6x07E3I/L9aUR+tTCPFKI/WixN0RBKUR5qYR+1O8uiwuYhEXtSiP
HpUwj/GnCPA6UWFzEAjpwi9qmEeetO8rjpVWDmIPK9hQI+e1TeVn1o8r60rBzMh2EdKNhqUx+lIE
PelYOYYE9aUR88Zp4T1pwXjgUWC4zy805Y/xqRYsmp44MnpTsJysQxwFutWI7X2qaOCrCQcU7GMp
lUW/oKcISO1WxF9KQw+lDRHOyv5NKI/UVNtHpS7c9qkXMQGEZpRAPSpxH9KXy6qwcxAYPakMHqKs
iL1zThF60WDmKL2+elQS2+O1ajQBqilt8dqZcZmW0PrTPKwelXZoCvIqIpzyKDZSuQeV9KPL+lTb
BS4HpQFyHYaClS7R6UFAaB3uQ7DQVIqYoMUnl+9ICIqR1oA3GpCpzQEqbAN2ClC56CnbPWnxx5PF
NITY+3g3GtOxs92DiobK33EVs2dtgdOa0ijlq1LDre32ircUdMVOcVZgjycmrRwTmLHHj61NGnPN
KkfHNSKuelaI5nIdCOatIDUMK1ZRK1Rk2NYmhX9aeycU3Zg80m7jVh6HPBqaIZFQJ1qeI7cVUZES
VyUQ7qrXdluBq7EcilkTeprR6mKm4s5u8s8HpVKWHB5rob60zk4rKuYMEisWrHoU6l0ZckOKjKkV
dePFQvHzSOhSK+zPOKVU9al8ulCgVSQ3IREx1qaJM9aREyalA7CrSuQ2NZPSgJ61Js9aUJg0WMnI
WJfWrNuuTUMa+tW7dKuKsZSkTwpU6p6c0kCcc1MF3V0xRhKQ0IB1pQM9KkEXrTxFWiVzNyIhGTS+
V9amWOneV9aqyJcisYwetJ5eOlWfLFBjp2sLmKpTjkUySOrbR4qKSLPWgFIoyx1Xkgq/JHULx5zi
pcTRSKJi9qQxYq00VNaP1pWK5inKlUp0rTmTg1RuEyaymjSMtSg6c8ik2Cp5I8npTfK9qx5TXmIS
nNLsHvUhj9jSrH6c0co+Yi2D3o2D3qUx+1IYvTNHKLmItlLsFSeV9aDH7GpsPmIinpR5dS7AOtG0
elKwcxGI8+tBi9alA9BQR60WHcg8oe1Bi+lT4xRgGlyhzFcxe1HlVPsFBQUrDuQ+V64pDHg9KnCg
UbBRYfMVzHz3pDH61YMdJsNIOYg2GkKH0qxsPpSGPPagfMVyntSGP61YMeOopNlKw+YrmOjYaseV
n3o8rPvS5QuitsNL5frVnyPal+z+tHKNSKpjpPK54xVo230pPs1HKPnKxi+lNMWKstAR0zTTGRUt
WHzFby89cUjRVYK+oppT0pWuUpFYx/jSGLFWGT1FNMfpUtF8xWZMUlTlBTWjzSLUiEoDTShFSlPS
jYfak0WmQlPUU0p6VMw7Gm7D7VBVyAr+FATJ4qUjHWnwQ+Y/AqqdN1ZKK6j5rE+m2hZwuMlq+jv2
I/2VdS+PHxAtFsLUSQwygDzVzFu6l3P91RyfXAHevJfg58NtQ+JXjTTdG8M232u+1K4SCKHuxJzk
+igAknsBX6//ALC37O3/AAzn8LYjqMUMGvawoMqNgraxDkKSCc9d7kHklV7Cv1HD4ijwzljxKs6z
0gnvf+Zreys3fvofOZj7TMKscHBtRfxSXSPVLzey+b6Hqfw+8A6Z8GfA9vonhWIGGywZJCuHvblh
ks/rzyfQbVHTFcv8bdak8MadZ6PokyvrmsSASA4wC7YQMew3Enj0J+vc6jr1potjLqeptstLEFYF
c4a4lPP4sT/P614lZa9Dcv4i8c+N2jn/ALGfbaxzf6qa8P8Aq0x3CfKcDkDHpXxOVUamLryxVa8n
e76uU29F97u/l2HnOKpYKhDC0rRVnbtGnFXlL7lZd9XuzzT4meH5/D3iw6XcRv50LJbxRBhJKzSf
Nyo581zglRyFZBXA60FtN6FVAI2oFPRR0HNfRqeANW+FHwq1bxxrSPL4r1pQFnfaH0aOYnfKMnJn
bfzt+7lFxtVifmi/nDucDjog7Be36V+r8P4pY5SUGnGDUW11kl71l2vs766vazf4rxNhqmXSg6ia
lUTkoveMW/du+ra1aSVtFe90uf1Xgc1h3rEHBwfWui1JNwIGTWBqMeGIQEseMV97hbNHkYGKZDoW
mtf6oFUHBYdOwr0fabW0wAQMYFc34I0fyn86TCnGMEVu6jP8gClgegzxXFj5+2qqK2R9FhcVHDU5
TfX9Dn9bn824Yc4Ga5LUk+xX7B/lSQblPQZ711N+hLsXPzVxPxBu3muLeCIkpHlwAehP/wCqvQwt
NzShE4sHfF13fqUdS1qBXeOJnYqcfKMism6vckjvUF+32OISBtrEZ9efpVKbUfNTeCMsMmsMbH2U
j6mnhKaguRa9R11cZyDWXeXGCdvSpbm83cZGfpWbdTcV81i6yb0PRoULboiu7vaOM5qnJeEjrxSX
EmM5NVZWOc9vWvBq1z1adHlRPqEwWU+Xyp5H5CqFzcjbzxRJNuHfiqk0mTmuCtWud1KiwkusK3JA
+tVzdkKDnkUk74BDEYzVKRysg9zjNcUql9D0adNLQtLdFj8w+XsailuS578Vu+O/C8HhTSPC8lne
wXkmuaQmqSiMc2zPLKnlP/tARZ7cMK5hf3zSZYrsQsMg8npiplV1SHSj7rlYllnKk4HQ4pomJwcV
DLPuPHPammYBfmz1xkVnKejNIQs7ll5QcYPQd6asxz15qsJd7EAn8aEcq56HI6VzSnsd1L3m0y0s
xDdeak87exyAPSqIm2HP58dKVJ/n5zilK6ZUZqWpcNxv+UnmnJLtUZwKpiQg+9PM/rg0+bQFGTd3
uXftIXG3FKtzk5IqiXz90gY71IlyQAWC/SlzDbs7M0FuVDc8/jTvtXTaQMmqPn7x82Ae1KsozkkH
vRzDab0Roi946/lVHxD4uh0CxEl0x3E/JGPvOR6en1rP1vxNFocPz/PKR8sYP8/avP8AWNUm1i/a
a8bcx/ID0FcWMxHsaTS3Z1UKTnJN7It6p4jutdvGuL9/9xR91B6AUsM5kXB5zVSOH9xToZCjYBq8
JF0IxjLZm9R81x1yGtzkdDTFuiDVnCyLhuc+1UriAxNxytY4vBum/aU/hHTmpKzHyzllzUDXBz8x
pyjPJqOWPa2e1ebicO2vaRNoNbDvOyMc1G5570hfnmpFO+PHaopP2ys90N6EEq56VGy5PGRirBTP
Wo5Y8V5eLouDbsaRZGBiilAJ6UbT6V5wDdo9KNgpwXJ5pwXHvQO4xVx0o2ZPSpRGacI8j1p2uFyI
J604RVKI/WnbBVJCuVzF7GkMdWdo9KCgosHMVthppTHUVaMQpDF6UuUdyoyZ6UhQ+lWWjphi+tKw
7lfaKQp6VOUx70zy+aQ7kfl+tOAxT9goI3daBcwylCk+1PC+gpwT1oByGBcU5VyeKcEx1paCRAuK
WlCE9acEApiEQcZp4XPShRuNSKufpVIlsRU54qRU9KVUz9KeB2FVYhsQLjpT1X1pVXHXrTgN3SqS
IbEpdppyJz708JzzVWIvcYqfjTxH609U/CnqnpTSJbGCOnhPQU8JjrTgpPSrUSHIZ5dIUNSiIml8
rPrVWIciAj1pNo9KsGGm+TzyKdhcxCUBpNhqfyaUW+eoosHMVjHn0oMfsKtC345FL9m9qfKLmKfl
e1IYuOlXfs+KRrfHajlHzlBoc9KieIjpWg9v61FJDScSlIoPHnrUTR4q7LDULpjg1DRqpFR0zUbx
57VaaOo2T1qGjRSKrJ6VG8eRxVtoqieOpaNFIpOmcg1BKlXpEyDVeWPNQ0axZSmXIzVeRc/jVyRf
1qrKuKyaN4squMGkqSQZzUdZmqdwp6Lj60iL3NSIvc0A2OVe1SIlIowOaljT9aaRm2KibjxU8cea
IYqtRRYFaJGTkMSKpVi56VNHAT2qeO29q0SM3IrpEe1SLAe9WktvWpFt/QVSiZuZVFvTlt8dKuC3
+lO+z/Wq5SHMqCD2pwhqz9n+tBgp8oucriLigRYqfyaPJo5Q5iLYKNo9Km8r6UGL6UrC5iID0pwT
1qVYqeI6LCciEL6Cl2GpvL9jS+V7UBzEGw0bDUxj5o8v2NFguQlSOcUmB6VOY+O9J5dIdyHbntTh
Hk81J5dPSP0oE2JFFk1ZihzRDFnircMPpTtcynMbHBgVII81KsR708R00jFyIPLx2oKCp/L96Qx+
opNWFe5B5dHl+tTeV7Uvle1LcdyIDHSjA9KkMXtR5XtVWDmZGBk8U8Jj3pwjxT1X0osFyPbx0pGj
B6ip/LoMeRRYOYz54MVTliwTWtNFxzVKeLBNJqxtCRT2j0o2CpSmDyKQpmma3uM25HSm+X6VKFx0
pccc0WAg2GjafSpSmaPL9akCIqRRsNSlPSlVMGgCMJjrU1vHkigITVi0j3N9KaJk7Iu2EHStaCPa
uaq6fBnFaUcORzWqR51ad2NjjLmrkMXApIIatxRccVpGJx1JkWzHWlAz0qVozQkPNVaxjzXFhXmr
cKZFMjh9asRjFUkZykNaL0pjRc1aUZXmmulEkCkVgmDwDUqDBFLs5p6pUopyHxVKqbhUaDBqzEuR
W0dTnmytcwblOetY99B8xroZUypyKytRhwTRNGlCZiSJUEkXpV2aP5jioXTFZWO9SKhjoWPmpmjz
QEJq0i7iKuOlPC4pVT0pwXHJq9iW7jaci5OaQDcamjjoM2xY0qxAOajRM8CrECYq4mUpFq3XIq1H
H61DbLirUY3Yroic0pAqegpwTnmpFjzT1irVIyciIL6ClwfQ1MY/XNGwVaRPOVzHk96DHVjYPekK
elMnmKrx8c0xlx1q0U9RTHjp2HzFORM1Xki9KvSRVBIvHNTymikU3TP1phGOtWXjyKilXFJovmKk
/BNUp15NXbgZNVnTPWsZmkWVTEDSeV9KnMWTSGE5rPlRpzEBi9qDH7VMYsdaNhpco+Yg8v2NHlfW
ptho2mlYOYh8o+9IY/WpiMdaOtJofOQbDRsPpU2wUFBSsPmIRH9KChqXy89KUx4pcocxDsPpSFM9
qlKkUgGelLlHzEJjo8v1qYjHWgLk0rBzEXl/Wgx/Wp/L96NhoHdFcx0mw1OyEjmm+XQMi2GjB9DU
pjoEeaAuRBSaUJ61MsNSLBxSsHNYriLPY05bcntVpYfQVIsJPXNFiXMqi19acLWrXkYo8uiwucrf
ZKRrOrJQ0FSOtFg5yk9p1xUT23rWiRnrTHiB6VNrFqZmPb1E0OO1aUkFQPDU2NFMosmKYVBq48PF
QSRYPNS1Y1UiBo/xpvl/WpiuOtNK5qWi1IhaOoynpVgjHWmFPSpsaKRCRnrTSnpUxTI5FN2CpaK5
iLYauaVa+dMBgkd8d/b8ahjjy3zDiuv+GPgS98ceKtO0vw7A9zf6ncx2ttEB/rJXYKqn8SPwr3eH
8C8XiY9lv6dWZYisqcGz76/4I7fs0Lpmk6l8R/FVpiS5T7BpBZeqf8tZVz64EefZ6+47q+WKNtxV
QFAJbkBM9MemeT64xWP4A8JR/Dz4faH4fs1gVdGsYbV/IXZGzJGFJA9yCffr3rH+KHiwaJorCJsS
PwOec/5NPGVJZxjXKK0vaK7RW3+fqzyK2IWEouUt938+hyfxj8cTa/rltp3hkmRIWFraK3/LSZ2w
Xb0yTuPooHqaufCrw9/wsjxxYaLExn8IeDGF6FMY23lz8yxu56sXbzpcdMbRj5q82udQEfzXBzIT
vY5Gc89/xqW5+Plv8N/g22leBrpv+Eo8Ru1xqdzCcHTY87UgUkA+YECjj7uWOeVr615TW+rxw2Dj
7z91O2ze832suaz3u9Ltn57DOKU8dLF46X7te81e3Mo/DBLreXLdbcqu9jf/AG1vjQdY8RHw3o0o
Nppv+u2tkSzEc59kB2/7xb0r50uZQjAenHSpr3UXmlMlyxZ3JJZuSc+561mXd15jc8V99keUU8pw
0MNT2S1fd9X8z4POs3r8RY+pjK/V6Lsui+SEuG+0NtjxnNUYNON9f7FGTnBx2NI87yTbIM5Ndf4L
8OCKLz7gKWJ79q92rUWFhzMVClJNQXUns9HGn2K55wOB3qnqdnujLyghux68eldPeR+ZDt6jpjvW
dqOi+VbA5J3HCjua8aliLyvJ6s1zCcYXjDVI4++suCVH415742iMepNI/AUgfhXsk/h8vGS64VR8
wrz74h+H1RQ6LkdK+hyvFRdTluTkmMj7ZLueR+I7h7kfJkKM8Vm27+Xa7ZOuOK6vWtGxETCD05rk
9StXgGc8p2rnzlezk59z9MwdSFWCiivNNt74qldTZ+73qS4mDLkkA1l3mprGxAyxA6dK+GxVe256
1Gg5bIWeQv64qs78c5zVO61eRQdgUZrMur6Zx8zEZ9K8apXsenTwsnuadxdLEDvcCqUuqwKCN5NZ
MxLOcnJ+tVZc7vevOq4hnowwiW7NK516NVPU49qzLjxIgY4Rs9uar3BG07s9KpxzJDMzSrvG0gD0
OODXFVrPTU7qdCKNK98YvdLH56tI0SLEmT91R0GPz/M1CviQspYRcH5T+P8A+qsm5n837/Ydu9Mj
lydvI54+tZPEe9ozeNCMY2SN0eJo4Y9rRH1znrSDxFBK+5lK85rCnciX5j0p8sqPbAKpEmTk+1X7
ZSvdh7CPY3Y9Wt5T8snJHephNHIhaJsnpwa5My4TjnNNWZ0GULL9K5njVsNYRKV0zro5xG/zk7Tw
RS7xGcdcd+xrlodcuIG+/uHo1WrfxL8v+kRjnutXHGRqR5ZbrYHhuWXMup0AlU9c04TrgYzWXba1
DKvDFfrVlLoOu5WXH1rRT8x8vkXDMu/PI9RTxIo5U9ao/aOOgFKtwAD0NPmFyp7l8S7jweMVT1bX
49IgYk7pj91f89qqXusrp0bFiCzDha5rUL6S9mMlyST79vaoqVlFblUqbm7taDdQvnu5nkuGy7nJ
NVANzZpWbzDxU8EPydOTXje9jqtk9Ed38NC2823g1I8Yxlu9QSxFG4FSW0m7h+frXq0Ju/s5mUl9
pE0DDoP1qwbdbhdpAquq+W/Bq1EcqMHFepQqJrlmc89NUZtxatbS4kzjrTGTcpBFbb2gvLcocbux
rIe3NvKVlBBBrnr4VU3p8LNadXnXmU3TZkU6JipGamuE3rleD3qDtXz1ak8NVaR0J8yJnj3LuGOO
tQyJyenNSwtv4JxRJFhsGnXhGtDn7hF2dioyEHilGe9PlGOlNr5ypDkk0bCgZNPROKFXpUgHYVCQ
m7CBQKX6U9I89acVI61ZNyPYacEHelooEJsFIU9KdRQBHjml2mnEc5paAIyPWkKCpTz1ppT0oHzE
LR1G0frVgjHWmsnHFKxSdyuU5pdgqQoO1IUqdhjelAGTxTghPWnAYoAbs496ULilop7CbsFFFPVc
U0ib3BFxUyLmmIvc1MBgUyW7BT1XH1pEXvUqrirRmxoQnrT1XsKOtPVcfWqSIFVcdKcI/WlVcdKl
RPSqXclsaseTzTxGaeielTxW5NWomUpEKQ57VMlsasxW3rUyw+laKJi5lRbb1FOFrVwQfWnC3rRR
I5yibbJ5FNNsK0ha57U77FnoKfILnMr7NS+TjtWk1lx0qJ7XHajkDnuU/K9qNnHSp2ixTSpFFrDv
ch2D0pDGDU23IpuwUWHcgeGopIeatEY6011zRYakUJYarSw1pSR1BJFms3E1jIzXiIPFRsuetXZY
utQPF1rNxNVIrPHUUiVZIxwajkj9Kho0TKUiYqCZe9W5l5OaryLkEVDRvBlGdcGqs61duFqpMMrW
EjoiypIOaiYYNTyjrUTLuNZNGydhVXPFSoMmmoMD61IBgUJXExyjLVZgjzUMKZNXrePjmtErmUmS
QxVbhhpkEeauQRVrFGEpCxQY61YSH1p0ceBzUirurVI55SGrGM8CpFizT1jx1qRI6tIzbGLD7U4Q
8VMEx1pcYp2J5iAw0hhqxSbBRZC5iuYsdc0hi9anKEUhGOtLlHzEXlZHegQ1LRijlDmIxFzS7D6V
IFJo2n0pWDmIwhJ5pdgp+w0vl+tFg5iPYaQoamCgUFATSaHe5DsNIUx1FTlQaQx5osO5DtHpT0Sn
iPFSRJlqVhNj7eLirsUWBUVtHk1cSP5fena5zzkN2UoGOlLsNKE9aCLjSM9aaY/SpCnpSFSKATGB
PWl2ilwacq45NKw73GhM9BSFBnkVLRTFci2D0pwQjoKfRQO40J60uwUtFAXI5I8iqVzH3rRIyKq3
CdaC4S1M50pAvtU7JzSCOkdFyIIaCnqKl8v1o2UcoXICnOSKNgqcx0nlfSjlC5CVyKNgqYw0nk80
uULjApPSrdnHyBio44sdauWUWXppGU5aGrp0OQK0Ei7CotNh+UVopDit4x0PKqz1GW8JzV2ODC0W
0PtVuODj5q3jHQ4qlQqGHNOSHHarnkinLAPSm4GftSqEJpwGKsm39qb9nwelJxsJTuRoeKdSiPFK
U9KzZdxhQGlAx0p6rxyKUL6CkO9xEXnmrUI4qGJcnmrKL2rWBnNiMMqc1m6hHWqyYFUL9ODVzQqL
1MOdOTmoHjq7cR/OahaPiszvjIqNHjrSBBUzrioiMGrSsacwdKYzbjSue1Ea5NAmySJOamVewpsa
1PHHTRlJjo4qsImPrSRpgVPFF61pFGEpDoVwauwLxUEUfIqzEOeK3joYTkWEUYpwHpSRDNTqnHNb
xMHIjEZNBi/zirAjxS7BV8pHOVfK+lIYvarXl0jR4FPlFzFUxfWmPFVvYKa8eRTsHMUJIqrSxVoS
x4qtcDFJo0jIoSDbVeY8VanFVJVzWcjZSK0g3ZqIxg1b8rmjyB61lYrnKZipPJ+tXfsw9/ypptam
w1MpeUaDGe9XDbelMaEiixSqFUx+wpDF7VZaP1FNKClylc5XMdNMeasmOmmP2qWilIrGL2NJ5frV
kx01lxU2He5Cq7aWpNme1G3tSsVciKg9qCgqUp6ik2CkHMRFPSk2GpSnpSbDRYfMRhCaCpFSBCaC
hFFg5iKg89akpCmaXKPmI9o9KULnoKeI+akSLNFg5hiR+lSpD61IkVSrH60WIciNYwKdt29qmEeB
SlBRYjmIKKlaP8absHpRYdyMqD1pCnpU2MUhXPWpaGiuyZ+tNKkdandPWmsnpSKTsQFd1RSRVYKe
lNIz1qWi1IpSR4qF481ekjqvJHg8VJrGRTeOmbfarTpmonT1qGjZSIGTI4qMxnNTlDnimsuetSzR
SISpHWmlBnkVMUNIybiQOtTa5opDrK3aVwEBNfef/BHf9nhde8Zan4+8R2/m2nhs/Y9Mzgh72RDv
cA9THEQOe8meor4i8N6TLcOptkaWRyFjRRuZ2yAAAO5JAx71+2n7L/wh/wCFB/ADw14auhGLzTLJ
TesigCS6kG+U8dcM+0E9lFfUq+WZc2vjqaL/AA/a/RfM4K9Tnnbojq9RuhbwntgZbnOD/wDW6V4Z
8Y/GQn1cxhs7DtA65Neq+ONYGmaRM/Tg/jXy74v8R/2trc8kspWNWyzYJH0+terwplvtpuq1oj4P
izNVhaUYJ6sb4v8AGH9mWbooJuJAQue30rhEmMqPLMSwXBY+p7VFrmrNqupFmLMiDHWs++vH6LlU
Ix9a/W8HgVQgkt3ufllec8VO7ZZutQNxIDkgYx+FU3uwTy34d6qSXpRMuRnOBip9D0+TV51GCRn8
zXqxpKlHmexvSw6itjd8K6I+oXKuFx3wew9a7/T9PEUQjXbhRzVXw7pK6faqoCl25atyz0/ceDye
Ca+Yx2L9rJ66HcsJOivaNe8ZbGVLtyCevGfSuh8A+BNQ+KXiW20vQIo/tMgZsuSERVGWZ2AOFGR2
OSQO9Kvhnz4NsWQ3U5717v8AsUeH4rNPEd1OgF3HLDbZ9E2eZx6ZL/oPSvmc7zf+z8FUxFNXklp8
2lf8TlyHh+tnecUcBiG40qjbk12Scml5u1l23KfiL9iS0sfAlw+m6xK2rwwtIzTqq2jkDJXGNyDj
7xJPc56V8f8AjDSRLbhJVOHGeR09Pp/nr1r9DPj74xi8O/DrVLW1nhGqahbNBbQFwJHD/IzBT1Ch
ifwxXwn4308wb1dQWQ7cDpge/wCFcvAOZ43GQqVMVO95adPX5dvRn0fiBl2V5DmNDDZXTUXy+/Zt
63tG927Ssm330fU8Y1fRfLnZG69RXIeJfDJhBduVPPpXf+I74DVpA/AQAE46VyXiC/SdWG/Jr9gx
EoTofvuxpllasnFnmWtWxgdguMCufugQSz55rrtZj3s24ZPIziuT1gmAEKSfevyHMa0YVJNn6Tgo
ynBMoSrg/wBapXJXnBAxTp5Wcnk/lVV13dec18/Wx9/hR68KdtyC6mAPBzVKWfvjmrM8Zyciqsse
M8V4eIxtRux2wgrFS6uCfxrOuZmPI6/StC6jwuazZh83Ga8yviai3Z2U4pEDSMTyadCTvBX86esW
TyKsQ2uSM/WuWnWqOafMatqxWuAxbnnvTRuIwK0rmxKHIBAwT+VOGh3A04XfkyfZjKYfMx8u8AEj
Prjmt61SqqrSZN1YymGRzTcAH0q9cWuMHHUVA1vntWM8VVpys2NNMfBpv9o2ztbndNGNzJ6r7VSM
e08CrULPbSB4jhlOQaiuF8xiwGM84HaulZgmk2tSkQEkDmnw38tqcwuV/WmEkden86a2D0/Wt4Yu
MleLK5bmlB4hyc3C/iKnm1qNYN6sS3Zawyu48UhOAc10xxTirtk+zT6El1dPcymSZsk/pVaWXLYX
kd6HkJ6dKaoya83EYx1n7OBtGPKh0Me5uelXYxnAFQwptTjvU6fLivay+h7KC7mVR8w6SDzBjiqk
iGFjir0f3xu9KZPAXX5etehXoe1jzR3RlCdtGRwy+auCcH+dWIwVPc1nNMYn61dtZ/NVdxrnoYmM
3yvdBUhZXNCA7Oc0t/YC+ty8fEic59RTIWDthSD+NXbdiD7E17mGaqR5JbM8+UnB8yOdZc5Ddagk
h2nFbmu6dsfzoQArfex2NZk8W9cnqK8vH4JtOLWq/I9GlVU0min9xqmB82LPcVGy5PzU6FgrAHoe
tfO0Z8k3GWzOh7XGSx5XIqJF65FWpovL/GotvzZrix9DllcqMkwRcVLHH601U5qZVxwK4EgbuAGO
lB560pGOtJ1qrIQYpCgNLRScQGFD2pCMdakopWYEeDR1qTrQeOtPlAYFJpTHTqKOUCNl7GmMuOlT
kZ60119KTVgIGXP1plSuuOlMccZqWUmNooopbD5goopVG40JdSBVXuaeoyaSnr92qAcgyakUbjTU
HH1qSIZqkiHuPRcc06inKverRDYqrjpUipg8daROtSRimkZsVE5561MiZoVM9KsQRbjzWiRlKQQQ
Z7VbjhCjmliiwKmCY61tGJhJ3EVPWpFT1oRe5p6rk81okZNgqZ61IkeaVB3qWNf1q0iGwSKniIem
aeiVIEJrRKxm5EDQj0xUM0GOuKuOnrUbLn71DQlIzZoKrvHg1pzRVWmhqGjVSuU6MD0qUpimlPSl
Yu5EY6jZOeKnIwaaRmpaKTuV2XdUMkfFW2jqKROOaW5aZSlj4qpMmDWhKuDVaePFZSRrFlCQelMI
yKnlXBqA8Gs2bJkEyYzVSVavTVTl71mzaDKdwvJqlMODV+5FUphjNYTOqLuVJBUNTyf1qE9TWMjd
EiDn6VIo3GmoMD61JCm40JEyZPbx5PNX4I+ar2sfrWhaxZFbRRhORLbxcVchj6VHDFVlF6AVvFHL
OQ5VyamRKSNKmVfStEjFsAuOlPC4pVXsKcE9aqxFxFTPWpNuRQq5qQIcU7EN3I9hzSeXkdKm8ujZ
xRYRA0f4U3y/pVlkz0ppj9RRyjuyAx80nl89KsGL2pPL+tKwcxEE9aXy8+tSBOeKcIzRYOYg8vHW
l2DFT+XSbPakHMyHYKTYamKc8ilEdFg5mV9hpdhqx5dNMXtSsNSIdnrUkS+lOCcdKfGnPNSkNss2
sdWQhxxUVsvy1aVOOaqxzSd2MEfNO8vHapAuego20WJuR7T6UhT1FTbKQrjrQ0FyHYPek2c1IU9K
UJzUjuyMqDSFPSpSoPakKelFguQkY60VJSFQaLFcwynBPWlCYNPCZ60hORGyY6VBcr3q2U44qvcr
gUFQZnyrg0gGelSyjDU2qSOgaE9aXYKcFzS+XTsK4zYKTYKk2Gl2Ck0O5F5dPWL1qRY6kWLPQUrE
uRGkWTVyzjww4piRYqeAbW5oSMpu6NvTR8ozV9VxWdpr8AVqxLkV0w2PLq6MltxgVdiqpGu3rVyD
tnpW0GcFUkVPWpFj9etCVKnStEc7Y3yeKa1rnpVgKMUtU4pk87RTeErULrir8qZFVJY9p5rnmrG8
J3Iacg70hQ9qcoxWSNb2JYlqzBHnrUMS5/GrcI2it4IxqSElTC1m3wyD9K07iQbTWVfPyacx0dzM
uF3GoH4BzVmQ7s1XmqEd0WV5RUTLnpUzn5qbsFM1UiHy805UweKk8vJ4zT44uaEJyFijq1FH60yG
PJq3DDnk1okYTkEUJPJqdI89KckWelTxQ+laxRzykJHHgcVPHHiljhqZI8VqkYykEa4qVDkCkWMn
rUyx1rEwcriqNxpwQHoKVU9KeBitU7mbYwxU0x1NTGbJ4phzWI2j9qjdcdKnqJxkHFAXK0vSqVyM
5xV6ZCarSQkniobLjIzpF5NReVk9K0WtieopPsx/yKho09oUVtc9qcLP1q55GOtHk1Nhc7KhtaQ2
wq4YaaY8UrD5yk1tTGtqvGP1FNMdKxSmZz2/tUTwe1ajQ56ioZLb0pWLjMzWj9RTChFXZIcHkVC8
XpUtGqlcrn3ppTPSpmT1ppj9KmxakR+XSFSKl8v1pCh7UWKuRYNIVB7VMVPpSEY60hpkJT0o8upW
UHrTKVh3YwqRSVJRS5R8xGVz1FJ5f1qYAnpS7KLBzEaR1NHHQq9hU0cdKwpSEVM9KeseDUiR08IB
TsZ8xHsFIY6mxSbBRyi5iIp6Umw1NsB6UGP1pWHzEBTPUU0p6VY8umtHSHzFcj1pCmelTPHnpTCn
pUtFqRCyeopjp61PTSmTxUlplZ09ahkhzV0w+lRvDjpSauaKRnyxEVGyZPNX3i9qhkgqGjVSKRiy
aY0fNW2hIphQ1DRopFXyjQkO5hirJi46VY0uz826Axnnp61vhaXtqsYlOpyps+n/APglz+zv/wAL
e+Pen6nq3knSvCMqanPC/LXEi8xKB6CTYST1GBX6na9L5USRkk9dx/vE9TXyx/wR1+Dp8F/AzW/F
WrQ7LvxNqBiiJHP2e2BQfnK8x/4CK+m9fm3zHpx79K9XN6zr4tUV8NNW+e7/ABdvkebUfJFyvq9T
y748eIhpehyAkjcO3bivljxLrBETnnLkkD1ya9o/aW8UbrlrWN854PsO9fO2s6gb/UQAflX9K/Wu
Dsv9nhYya31PxribEfX8wdOPwwF+0skPOB34qhqOrNIoVz8q8Cpr2cRxnBGTWW9pJqE4VDgngmvu
qcYxXO0efhqKbvIk0+N9WnxCxMY+8f8ACvSPB+hrpturXAAdsYAHSsbwl4aXT4keRPu8qMfrXTxT
bSCSM142Oxvtn7OGx72GwkVavU2WyNu1nWNuCeDW3p10AB09/auShvR0bFXYdaEQBLDDda8Sth3M
wxGIs3LoehaRc75htxk9+le3/s6eDXuJrvVI55raJHFu6RPgXBA3Yb2Xf9c+g6/NXhrxPH54IbK7
gvXGfxr6i/Zs8d6Qngd7K7vLW2vIrmWSQSOE8wO24MCeDwQOOmOa+C4tpV8PhZezi9Wk9On9fmev
wXPC4zN6SrySjFNq7tqlor/Nu3Wx1nxF8B6VrOjX13fQol0sBJn53EAHAb1HUfjXxX8YrdLG/f5d
obIwOegGD9ef5V9R/HT4+6Lpvhi+sNKuBdNIojklhIdBk8qDn5jgYOOBnrnivjT4i+I3v7me4kky
MkgH0+natfD/AAOLinOtdR6Ji8SsXl2Kx0KOCUXP7Tj3v1tu/M8V8faj5Wr3BhOSzYJ7GuNu58y5
cgZre8W3BfUXLkfOxauXvmEj+xr9JzbEOD8kdGWYflpxXkZuq7TuK5P0rktZhJD4HB5rsdTjRIiE
xnFc5qkKtGdh/OvzHM63tJtn6Hl9J04crZyEoxkZpjKD0FWri2+Y57GoooTNKFH8RwK+fc5XtY9G
MbblKe34JPeqU8ZAOa17mLdJhOg/l61n6ggXKpXHUs2dcYsx7zviqjQ7jyK0LmE81B5XPSvMxO5u
rogS39Kt6fa+ZOA2SCe3ekWL1rW8J6FJruvWdlasiyXk6QKz/dUu6qCx7DLCrwMV7eF1pdfmhSlo
2z1L9pj9n7TPhL8N/B+q6LNczXGtX+q2c5YgpstjamLaByG23J3Z9BivL/Ckcus39tpLSstrLK7q
nbey7c/XAFfUH/BRjwPq/hjSvCtt4jgjtDf6hqd4tlGCFtZAYLKRRkZIZtOEgPcSA96+cPhr4Quv
FXjvT7HRnVL2Z2MW84BZFLbfqduPxr6DHezeaKoknByWi2td3Xy2OPDOc8LzpOLs99/6e5zOqae1
vO6uG+RivI6VnvFius8SWsrSXLLI6pMwlaMk89xn14auZcdq+dzOChXkltdnXTvyRcuxXZPUVFJF
6VYK84akZBnAya841UijJDUEsXtzWg8eaglhoNIyItP0yS+djGPlQZJqndL5crKTnaccV0VtexrY
CFCI2bjJrP1bQ44YvMs5C/GSCQSfyrduXLypnWoXV0Y9SxJ3pgX5qmjGMVtgqTcuZmc5Eij5R+dS
qMnNRp79xU0a8V9Vh0csn1JVAJH0qVI9wPtUcY4GakUYyfSvQpu1mc8jM1WIK4P8hVWOQp0q5qj7
nUHtVEDaa+WzCXs8Q3DQ9ClrBXLdtqDwuOc1u6Xdi5jDKee9cyDmruj3ht7hQehNdeV5jKFRQm9D
DE0FOOm51ixrcxMsgyGGCMVgajZmxuGibnHQ+tb1m+ec9RUXiGx+02nmIMtFyR/eFfcVaSxFFNbo
8jD1fZ1OV7M5WePa/HOajHXmrVzH8gI7VWfGeK+Cx+H9lUZ7kJXRMw82HPXb+tM2dDTrJvnIJ605
02sQe1Z10q9JTEvddhMUU4rhaaBnpXhzjysu9xS+etIDg8Uuw0qpjrU3SC6QhBY80lSUirihO4uY
btJpwTHWloofYLtiMD2NN2Gn0jNgULQa0GkEdaQcmgnPWlHUUxgy4pKewyKaVI60CTuMcYqEj1qd
xxUL/eqGrDQxl44poGTUnWmoME5pFNXEKkGnKuOtLRQSxQMmn01Bg806gB69KmjGDUQ4FTIO9UjM
cBk1Kq55pidTUqjArVGYoHNSxjBpir3NTxCmiJMkjTJxV62i46VXto+avRJtFbRRzzY4LtHFLTlX
jmgLhua2sY3HAZNSItNQVJH3qkiGPVcmpo0qOIZ61YjGfxrSJm9ByrmngZ6UqpxTwMVaMWRkZFRs
vrUzr3FNIz1p2EnYrsvrUE0NXGTFRyJxSaLUrGdJHUTJ+dXZo8HpVZ055rNqxsmQlcUwp6VMRnrT
GXBpFERGDUciVYIzUTjipaLRUmXg5qtKuRzVyZaquOfrWcjWLKM6VWde9XbhaqSDJNYvQ6Isrz1T
lGauzDjmqk4rKRvBlS4qlOOtXpxkVRnPJrCZ0wKkneoW+9U8neoH+9WUjoRPViBKgQZNW7deaaRn
Jlu1TOK07WPAqlaJk1qW8eAK6IK5y1JEkSYHNTxJnk0yNcnjtViNa3SOaTFRMVKifnSIu5qmAx0q
0ZN9QAwKcE9aVRgc08J61Rm3cFXnmnquetAG408DFOwmxoT1pdopaKRN2JtHpSMnpTqKAuN2UBPW
nUdaAuM2c8U5Rgc0tAGelAN3GlPSm4NSkYPNJSYXI8UYqSjrSt2C7GbDSEY61NspDHmiwXIqVBzm
n+TThHxSsPmLNqOAKuIMCqdtxVxORRYxmLRS7TmnKuKDMZQeetSYpCgNId0RFPSjZTyhFJQUIVBp
lSUEZ60WGRFc0nl1IU9KAnrSsAxU59aeE9acqegpShpWC5E4wDVa55WrcvSqs/NOxUdyq65poGOl
TbDQIj2qrG1yLB9DRtNTCEn1pfIPoaLBch2GlVMdetSGEilWL0FFhXEjj596nWMAc0QxetTbcdqV
iHIjAx0p0Zw1KUBpyJg0ENl/Tnwa3LN9yiuetTtYVs2E3TNawdjirxvqaSpkc1Yg6VBH86jFWYBW
0WefNaE6Dj608EiiIZWnlDmtTl6io3rTqRYyTzUix/jTTIkMZCV5qKWHdVvy+OaaYDUSVxxlYoGD
BpUhq4YPUUnlCslE15yOOLHWpwMClSHvzRKNq1stDKTuVrp/lrLum3E1oXbc1QkXJOazlqdVLRFM
riopI81daKojDzxSSN+YpmHNJ5FXPIz1pPs9aco+cq+TjpT0hzVkW2TUkdtTUSXMjggq3DDmligq
3Db4xmtYxMJzGxW/HNTpD6CpYoM1YS39a2UTmlMgSEmpkhx1qZYfSpEhrRRMHMiWL0FPWHPWrCQV
IIeK0UTJzKohNL5Jq15X0pfKNVYlzKhhNMaGrrQU0wmnyi5ykYjTGi9KutCaaYie1Fg5yi0Bz0ph
sye1aIt93ag22KTQe0Mt7XFRPBg8VqSw4qvJDmpcSlMoGMikKeoq00XrTTF9KixSkVivqKQoDVgx
fWmmL2o5SlMrNF6UxovWrLR4ppX1FS0UplZoiKa0eatFAaY0VItSKcsGaqzQYPFabRZqCaHNKxpG
ZmMlRtH+FXJocGoCuOtQ0bqZARjrSVMU9KaU9RSsaKRHRT9gpCnpUtMpMYQWppGOtSbTSUh8xHRT
9o9KCmelA7oZ0oAz0p3l09E9KAbCKOrEceOtJGnrUyx560GbkIFJ6U/yfepEjx0p/kk07Mhsh8n1
o8r6VP5J9DR5NFmLmINho2GpzFSGL60h8xAeOtIVzUxQ01o/wosPmIWjqJ46slcdaaUzUuJaZVMf
400xfWrXlZNL9nz2qbFcxU8k01o/Wrhhx2pjR5qWhqRSaIHpUMkVXni5qJ489ahmsZlBkx9KaUBq
28NMMOOlQaqRV8qvQv2Z9C0PVPjP4dT4lSwRaBHercX4lbCywxAyNHjuX2hAo5JYDvXDLEWOK9p/
Ya+G4+Jv7U3gHR5I1lhfU0u7hT90xQZncH2IiI/TvXr5NTi6kqktopv5Wdyasm42XU/Wv4TeArb4
UfCPQ/D+j2/2SDTbNE8rOdjHLOM9/mZqpeK9QFjY3E8rHaoJNdjr82CwJ6V4z+0F4tXQ/Cs6qw3u
pPJ6isMqozx+JSa1k9fmeRm+Khg4Tk3pFfkfMnxy8ZnVNauChJKErknOT7V5TDdNJdE5zuOTWj8Q
Nd8yeV5GByxbr3zXLaFf+eDuPzbuua/pTAUYYKjCjHex+TYehOvCdee8ndnQhTe3G2Lk11Hh7w2o
ZZZQP55NZ3hDSWnYuwJBI5612UNuscSqOAPSubM8S4r2dNnXltCM6nPL4V+LFBKLjoAMVFLcbep5
7CluZdpIesu8utoyWUD36V49Fch6OJqOo7dCzPq4txgcN3zVRtcYHMknGeAKxr/UyJnw4OD+dUZN
TIIJr0YOMVqfPV6Uq7t0O50jWi7Ku7gciuutviTPZ2KwQFQoGNvXca8istb8rJBAz7dKsHxRsdcS
gFT1rGthaOJs5HmTy+op3gz0DVvE15qKnzSzBx69fTNee+P9Ye2ieORsM3XnpVqDxhHbkmSXKspB
KH5lPqBnmuB8beITeXR2MNqjLAjp9K2hTjg4tpI7cpyyc8ReaOe8Q3n2u7zFnKjnmsmc5Q5OG9KX
7YzI7g7snFV5bhjyAa+GzDM3XlKJ+w4DLVCnGfVDHuFkQhx04rE1WIFWxjGa1pn3gkDvWVfqdpB7
V8djKjiz6bDx0TOTvExIwHrVuLSjaaC19cKAt25t4TxyVAZyB7AqM+ppl7CWmO0fMeABXSaHoC63
cST30Tvonhi1WS7Zfu72bhM+skpC+uAfSuPDSc3KS32Xz3fyV/mOuvZ2b26/ovmzlLy0OnwBplIl
lUNt6bVI4/PrWJcR7slhz9OldFfTya5fyXF8d0szMx4wAc/549KnHg03uh/bIPMeTzAgRU3Agg5N
eY3z80oO0Yr8D36OHlNLTU42808rBG39/I+tVRanPSvRfGvgdtF8NaTO8ZV59ynHcgZ6VL8I/wBn
7xF8b9Xksvh7Yx3U8bIjGWdII1eQ7Y03uQC7ngKOSa8GOLjiU5Reivf5bnfUyycaihbV2/E85jsy
wGBnNdH8ObpNF8WafdXcYkiju4JGPZQsyMTn6KR+NdBfeAk8B2fiXSPGunXEPiW2kitIYJUdGs5E
l/f7+wOF24bruyM1T8K2crzTwuPMWeFhtIz34wD3/WtqeJVB061OSls7fPYzhlzqOVKcWuh9H/8A
BQf4xW3xr8K+Crmzlhv9ettZ8RRy/ZyGxajUGeHIA4xG6YJ+8MnvXzN8KfEMvhD4o6DqgXZ9j1CK
Rty/KF3YYn8Ca3/FWh3Gn31qdDZ4pfLyuzgplQcgjqOv5+1V18OzaPtM0k32hiC27rnrxXRUzK9Z
Sgkle6Xrqbf2XeLhIzPH8duNcuotPMLW8LtCjJ9wopKqRx0IUVwDQEsehr0m98P/AGm281hvlJYk
5yWORx/OuI1CwMFy424AOajHV/bSUn1OSeD5EklsZEkJAPSmCIt0GTVyeAvnHGDUtrpkkqMUUsEB
JxXC5pK5jHDOUrLYyWU5zUci5FWpYCF3cdagZcVW5hZx0ZTmTHXNQK5jkxnAbir00eR2qnPHtP40
07M1pzsP1WyW2KNGQd3p2qqh+Y46U9mLt85Jx60iKAea9nDa2Km76j14apoxwPrUW3I+lTxjp717
9BHNJkqdTUoAbPNRouc05OCa9GD0OeRl6kmJj15qtGgkbDH3rQ1JMHJ5xWeeGr5bM6Sp1XLuehRl
zRG7cE05DtYGhzubtSd686/LK6NXqdT4fvPtEAGeRW1EBImH6HjmuQ8OXfk3IVjwxrr7Y9Oa/Scj
xKxNFN+h85jqfsqhzOqWBtbh4j908rmsqSPC98g11viey81EmTs20/SuZv4vLm46HmvKz/CKPvL0
+89HCVvaQTK8LbJAfSrtwoJVh3FUB97ir6HzrXI/hr53C+/GdN+q+R1z0sxgXGf601eCQakByKil
GHNeXiqdhrUUsB3pC/pTaK47Fco5WzTqYpOeKfTsK2oUUUm8Ux3FpGXdRvHrRvHrQFxAnrS7PSje
PWjeKAuLRR1prnpQKyY1xjNQydamY9zUMh5qZFDaKKKkroFFFFBJJnNGcGkXPelHXmmgJAcipkPa
oRUsfJzVIzJY+9ToM9agjHrVhOtaIyeg9Rk81NCtRxp61Zgj+arijKTLNrHV1E4qK1i4q0sR710R
VjnkxgGelFSBdtIVBrRGbsCjA+tSJ0plPjX9aokmjGPwqxEOKhTpVhOlXExkSKMClpE6UtaIyYUx
xg8U+mvTEMIzTCM1Ifeoz14pFIhmXIqnKvNXpOc1TnHNZyNYMrnrxQeetKwweKSoNRjLio5fepXp
jjK0mVEqzDiqsvWrc1VZe9ZyNolS4HWqkn3qt3HU1Uk681jI3iQTjOaqTdauTVUnFYyN47lOc5qj
MMNV+deuKo3Aw1YTOqBTl4zUB6mp5hgmoD1NYyOhFqEZNXbZaqQ1etl4FaRRjJ2L9knStSJcLVCy
TpWlCua6oI4qjJY1qVF4pqL+lTRrk1qkYSfQdGuBUijJpAMCnIO9WjOTHoMnmpFXJ5pI16VJVbEN
gBiiilAyaLEAq55pwXAPvTlXPFOCfjTsK4xU9Kd5eetSLHTxHxxRYlyIBFzS+Uan2GnCLNFiXIqm
DPalEGKtCDNPW3yaXK2S6iKZgzTTb+grR+zcdKY1r7U3BiVVFHyMdRQIsVbaDBppiPaoKUysU9KT
aasFD3FJ5fsaCucgwaTFWPJx70nlfWixXMJDwauQNnrVZEweOKmhbBoIkWlXd1pfL5pI2zT6DO40
p6U0jHWpKKAvcjoIz1p5QGjYKmwxmOKTYM08p6UhBHWlYLjdgzQFApacE9aLDuNoPSnGOmkU7CIZ
OagaIsaupblzxVyz0cynpVwptl86Rkx2bP0FWYtJd+1dHZeHs4ytalt4eAxla6Y4dsyliUjjk0Ji
OQaeNCPoa7hNCXHSn/2Kv92tVhTJ4o4F9DYdjUZ0llPQ137aCpHSoX8OA9B+lS8KNYo4gWBXtTWt
iPWuwuPDeASBVGfQWU9KxnRcRqumc4Lc55pwgPtWydGbuDSro59PzrLkYOsjJjjxV6zJQirS6M2e
lTRaSykZFHKzOVVMns5MjmrsPNQW9kyHkVcggIPIq7M4ptE8HHWrAXPSooYjnpVmND3rWLOOouwi
wknmpBDU0cNTJb57Vqkc7lYrrF6U4RDvVtbMmniz9KGiOcoPCMVH5NahsSe1RvZEZPNZuJoplDZg
VXnbk1oTW+BwKpzW5I4HNLlNItGbMN2arvFWi9qc9KY9r7U+U3UjNMRzxSeST1FaBssnoaPsB9DT
5S+czxFTvK9qvfYCOoNH2QjsavlE6hTWEntUiW/PNWltsdalS3PpVqJLmQRQe1WobfPbNPit+eat
RQ+laxic86gyKHHTrU6QZ61LFB7VMsHrWqic0pkKQ09YsVMIvrT1h9KtRMnIhVPQVIsXrUqxc1II
qtIhyIVipwiqYJineXnqKpIzciuYRSNBmrPk5pDD6VXKLmKjQ5pv2fntVsw560C3o5Q5yqLf0psk
PFX/ACQKjlh9KOUnmuZskeetVZYsGtKeGqssfrWbRrGRRKc800xVaeLFMMXtUtF8xWMRphj9RVox
4ppj9RU2KUiqY6Y0eKttHkVG0ZFKxSkVGjweaay4qy0dMMVK1y1Irld1RyR5qy0ftTCmKnlLUihN
FkciqssXrWpNFkZFVJos1LRvCRQMdIUNWWhNH2fPap5TZSK3lZ60nlVcWyLdBUqaYW7Zo5WHOkZx
hpDF9a1ho7HtQdGb0o5WHtV3MhovWm+V7VqvpLr2/SonsGXqKTiWqiZniL2qSOHNWvshzwKmgsST
yKXKDqIgitz2FWYbX2q5b2Oe1W4bEA9KvkMJVShHaE9BUq2Jx0rUjs/QVKLTinyGXtjH+xH0prWh
FbX2OmvZZ7Zo5BKqYjQeophi9K2JLL2qvLZegqXE0VRMzWiPeo2jq89uVqJo/WoaNFIptHim+Vn0
q20PpSeVz3qbF8xXWGl8nHWrIj9qXYalq4c5UeGoZIavsnrUMkVQxqRRZfWo3iz0q60GelMa1PYV
FjRTsUGiznimGL61fNsT2pDaEjkVPKaqoiHR9Jl1fU4LSyGZrqRYkHqzHA/Uivvj/gmX8NtAh/a7
8RzeAMajovgrRZbOHUmGGvriSRIzOB0AbbcKoH8IB5JNfIPwOMXh7XNR11762s73Q7F59PjlILXN
y7LCgVT12+a0p9BGa+9v+CNvg5dJ+EnjPXNuP7T1OGxjY/xRwR7gfzmJ+ua9nCwdHLsRW7q33tL8
mxKqnXgvn9yb/Q+q/EE+yNmJPHWvkj9rDx4d8kO/gvgA9lFfUnxB1D7Bot1Lgkqhx9a/P79pLxf/
AGjrtyqOGWI+WD646n86+k4BwSqV3XmtI6nw/E9d1UsOnrJ6+h5L4x1lrud8HjPFV/D83nFAD8xN
ZOrXhkkbcc1e8CP5uvQIScE84r9IWZOWJbMVhFDD8qXQ9w8JaaLPTIh325JrXkIVRVfSY/LtFAHG
wVLO+Q2eKVWftLyZ5kYOloinfzFeh5rC1a+KRZjKnHHPpWpqcu0nHGDzmua1wr5fHB6nmskyajko
szr27yOPz9aoSXxUnJp143BY45rPlcsSTkg1nOs29GTSoWWpdGpFV+Uk1Vm1EkklqqTy7RiqVxcb
eX6VjLEyWh2U8MmaJ1I4JZgcc1xHiTxAz3M3zYBbAxWtf6kYYHKnsetcDrV6TP1zu5rysyzR06e5
9FlGAUpttGrHqDAYXOD1qwt+QvIH+FYEF6CMt6dKtR3fmMMZ6V8LUxblK9z7mjSSjY0JbobssetZ
+oXBlyB34pJrjCkioQ5nkVQRluASa8/FVXPqejQo3RWa3IkDOMFenv6Vuaq76X4Wt9FsHkUXMgut
R2uQs8w/1aEdD5aE8/3pM0/w5ppublXODsb5T1GR/h1qx/Y8zXpmVS67jgk9Oc8/XJrx8RjPq9Nx
T1Z7mFy6NdxcltqYh8OJbmPcD8wG7BwOv+RX1P8AD/Q/CMvw/it7l1jvjtWJBDlgSN3zexx+teMe
DPCia9qsRu4mZc5ZQM5A6496+j/gx8G7vW9a/tDWkMESRrAsajbhVwBweuQOT9a+G4ozyhlWXTr1
Z+9qku91v5f8A++yTLG6qUY6fkeN/tNfD1W8OacbOLy381W2lem4MWAx7EVU8FaPqPgr9mWPUfCn
mxX6eMIp5pEUbUMUJaDnv8wJxxya+sNZ/ZcuPil4kJto5rjYu1Io1ztz1JJ4APAySMeleqeDf2OL
TwF8Fdc0PxUkeoWGrXttqFxbRMFaDysbiZTjPCqSB0wwBOa+N4T4oqf2dXSpylFQk3JRbV9G4363
V9rnp5zhMNQxVOu6iUrxsuvTW3462R8Rft36Efi18TdC8ceHbJYv+E10C1v7hYV+UXUY8uX/ANBU
HvxXGfBz4Z/8I54tgvvFukNfWscUi+Q0nlB9yFVO45xhip6Hoa/UL4cfAjwE/gfRIHsbK9Nnb5hk
kdlYLKzHgZHykg7eO2RWrffsweC9UgKx6cY1bAykpfOOo+fcDnv9K9PL8ZnNWhSxGElTndcyvLXX
XVctrq9nruebWxOUqpKnWU1bTRK1vL3rrRdrn55/EjwNZNEvinTfDmjRat4ld5rKwS73WOgRKqJn
acNLKxQsA4CgN0JrzjX/AA5e6osn9qWtkAxBK+UisG9mB46V+oSfsj+HLQudMaSPfjPmQRSf+yDt
WDq/7FtjODJptzppnA+Qz6erAHPsfQ+lcksbxFQm5TwSld6tTi/uV0dlPFZJUXIqritleL/HQ/Kb
W/DX2fU5hBGsEcLbjEzbsA8ZLdxnFeeeJNAkS+lQKDg/MR9O/Pt+tfpv8RP+Cal/M7TaTHZXqjcx
WBgpIHP3WC8noAMgYrwn4p/sUeILKWO21GxCfZ96xboBC4BKsQWwN4zjHJwD1rvlxXPDpLHUpU/N
p2+/b8TGeR08b/udWM/Rq/3PU+G5tKkSXZs5J4A712WheFzpvgnVNSuU2JHC0akjlmYY/qK9G1n9
mzVtF1tlvbSbdCd2NvH1NanxB+H8mifDhdOuIwhndGI24yCC5/p+VdNbiGhXdKFOad2tuxw0eHq1
D2k6kWrI+Xp4mCYIPBqCa2PUCuj1bRJNNumiulIMb7Tx/n1qheWICfJx9a+sjXTSsfIVMC9UzCeL
j3qpcxYGa2JbQqTnFUbu2YjgDFdEZJnnzoSh0Mor89Js3Oc+tSzRGN8EU6OLeQR1617OAfNoZtaC
Iv0qdV5XBzSxR7H7HPFTeUTjjmvpaCOSbsxqn5TUgXjjnNBhw4AGBTyu1h2zXoQRzuRVvYd0Z9RW
RMuGroZot0Z45rEvYtrN9a8jOaKcVJHXhZ30K1FGM9qUD1FfM2O0msXMNyhHrXcabP5sSEHiuEQk
OO1df4WuPPtVHpX1vDWI5ZOB5OaU7xUjTvrc3NjKvqMiuR1ixeCOJ5lIVgQCe9dxCu7O7PpXKeI4
WG9GJxGTjPavps6oe0ot+Rw5dVanymB0fHWrunHerqfyqpIpGCKm0t8XI9z+dfnuHvTxEU/6ue9P
WBL904PWo5xhqmmXbO2ccGo5zkc1lj6fKmuwovqRUUUV5BoFOUgcnrTetKF9SKAY7ePWkYg+tLx7
UhAPQ0E3G0UuP85pKCgooooAM4oJz1opC2KAEc9qiY5NK7U2obuNK4UUUUirBR1oooIJAMCnIaYo
wKelWthPUeoyalQUyNc1YiiJIxT3Ieg6JCT9KtQwE1LY6c0rDAJzW9pnhh5cZU/lW0YNnLUqqJjQ
2Zc/KKv2mmMx5Brq9N8EPLjCVv6f8OnfBKH8q6oUWzz6uOhHqcRbaY2BgGrA0p8d69ItPhq5AzGf
yq2Phm+OU/SulUGcMsxp33PKm0xxTGsSD0r1Kf4cOo+5WXfeAnjz8hpui0EcfCXU8+NuQelCxkGu
nvvCskLH5T+VZtxo7xk5U1Dg0dMa8Z7Gei9BU6/dpfspQ8g04RGmkEncI+tP28ZpUjxTyMda0M2R
Uxzk1KyelRsvcUAhpqM9ae3TvTKCkrDJO/0qncHmrcxxmqUx5rKTNIIiYU2lZs0lQaiMuenWo3+6
alqOTvQykitMKqS96uTCqsi4NZSNo6FOcdaqyrV6aOoWgzWL3Nkyk67hVaaI1qNa5qOSyJFZtGkZ
mJPGcc1Quo/SugubLHUVm3lntzxWMkdUJmHcrVU9TWleW+0nis+RMNXNI64u6LkC5IxWlapnGKoW
i5IrVsY8npWsDCo7F+zj4FaMCcVTtF6VoxLgCuqBwVJaj0jzUqrihOnFPVOea2Ri2IBk1IiZFAT8
KeBjpVJEN3HJxTqRVx1paohhTkHFNqWMZ600S2PjWpUTNNjXP41Oi4FBm2CJjrTgnpTlXPWnqvPN
O1jNyGiLNPWMU5R2qVI8dapRMpSI1h5qRY6UjAOKegy1WkYykIIqX7P61MifnT9nrV2uZ81im9sD
1FQvbEVp7R6VHLAD0rOVMuNVmW0WOopvkZq9LD1qIoawcbHRGdyq0GOmab5Z71bKGmlBRYtSKpQ0
Kdpqw8WaiZPWixV7kkUmKnV91VB8vSpEkpWuJq5YopqvnrTqViAoozQaACiiigaYY5opCwFJv54o
LHdalhtTK3Aot4TK3FbelaaWxxW1OnzGcp8qIdP0bcRkVu2GjhAMirNhp4jUcVoRw7R8tejTopHF
UrNkENmIx0xVhIgKVVIPNPAya3SsYOVxFQE08R5pVXjipY46qxDY1YAe1Tx2St1HWnxR4q3bQZ5x
k1aiZynYqf2OJeoqOXwvvH3a6G0ss9q0rfTQ45FEqSZzSxLj1OCl8J8n5aYPC23+GvRG0QMM4qGT
Qf8AZrllhyPrr7nBr4ZBHK09fDGR92u5XQfValTw/ntUewJeNOD/AOEa29FFIdBIP3a9BXw5nqtI
3hjP8NHsCPrpwA0cr/CafHpZU9K7pvC2P4aYfDOP4an2BLxaZycGmE9RVyHSie1dEnh/aeFq1BoW
MZWqVExniEznoNFJHQmrCaEf7tdRb6MPSrUeijstaKiczxJyH9hcfdFQT6Ec/dNd2NEz2FNfw8GP
QU/YErFHnc2gk/w1Wl0An+GvR5PDWf4RUT+Fweqij2BrHGpHmz+HiRwKZ/wj5/u16O/hnH8IqtP4
dxn5aaoGqxyZwH9hEHkfpSHR8dv0rs59E25+Wqc2m7T0o9kaLFXOXOjj0pjaPz0rpTZEHBWj7D7U
/Zof1hnLvpGO1J/ZxX+EV1P9mAjgCo5dJ/2afsw+snNCzI7VNFb4rXk0wg9DUZs9vUGmoWB1blSO
H0qVIMdaspb46CpFt/arUTKUyqIvTNO8nPtVv7P7UeR7VSRDmVhEBTliqwIacsPpVKJDkQCGnrDV
hYgKd5ftVpEORX8mkMPrVgxexpNhquUXMVvJ+lKsQFTFM9RQsftRyiciMx8cioZYvSrpSoZI6OUS
kZ80WaqSw1pyx5571WlirNo1jIznjx0qMoPSrkkXNRPFms2jVSK5jzTWixUxjIppGOtKxXMV3j9a
jdPWrTJnpUbx1Nikyq6UwqfSrDJimFPSpaLTINgpjx+tWTFSeV7VNi1IpyRelVpYDu6Vpm2LdBT4
dKaVhgU7XNFOxkJZGQ8Kau2mgPMR8tdNo3g97lhlSa7Xw/8ADsttLJWsKDkc1fHxpLc890/wU82P
lrbsvh07jlD+Ves6R8PUQDKD8q6Gx8FRoBlK6o4XueLXzq2zPF4PhkzDmM/lUh+GB/uGvdYvCMaj
7gpX8LRj+ACtPqqOL+25N7nz9d/DRlHEdZF/4AeMnCGvo268Jxtn5RmsrUPA0b5wlZywyOmjnT6n
znP4QeInKHFVzoZiPKmvc9U+H64JVP0rl9X8DmMnCVhLD2PUpZnGp1PN47AjtU8VpjtXR3Phpom+
6aYmhkHkVn7NnV7dS6mOlr7VKLM9lrch0QnqKsx6D/s1SpszddHNmwPoKQ2RxytdSPD2R0pj6B6L
Q6TJ+sI5drEnsaglsM9RXUSaIRng1Wm0ogdKl0y41zlZ7AjqKpT2mK6u403rxWbd6aRyBWUqZ1U6
xzzQYNCwE9q0pbPaeRTVtfQVk4nRzoprbetBg9q0BZcUv2T2qHEl1DLaDPao2tq1jae1Na1HpU8g
e1Mn7ID60G0GK0JIMVGyUcqKVRspfZKFtsHkZq35dKIs4pWSK52SWtlYnRvl886j53t5XlbePfdu
z7Yr9Wf+CdPhT/hEP2R9GRo9jXlxNcN6sTtGT+RH4V+VmnW26VcjvX7D/st2S2H7Onh2KEfIFl2/
TzWx+gr2MRaGTPu6kV8rSf52+4wjVf1uMU/syf8A6Sv1KPx81H+zfBN1ISQMZ/Lmvze+KWoNfaxJ
yxVmJPfk1+g/7Wl2bP4dzgcEq341+eXiu2M95KXPO7FfX8Kr2GVzmt5St9x8li5e3zBf3V+bOGvo
8sSf1rS+HUZbxVbiM/xA1HqNjhiMZ4q98NbIyeNLRSMAtzXVGs41Uz17c9No96szi2BPpUV02M5z
9TV2CAiAAL2qrdWpbOM57V7indHiTMTUyRXO6lEZ2LKTk8V1d3p7S9jk81Sl0ZGUsQS4GapSSWpx
TvKVkcrc2RmBBGMce9ZtzprKxHb19a7CTSt5ZsDJ7VRuNMAJGMVyTb3NVVvY4+4smwSRWbfWT+ld
vNpQwQRznrVG+0XeThc9q5KktGehQqannXiCJo7FvvHsD6VwupIxuicV694q0Ty7QYTjPNef6vou
blyo4zxXymcTkopH1uV1Ek2zmUZlI71fsR5rVLLpe1jgYoitTE42g8V8u5n1WGdyRrckbV59adaa
Q09yinbknIz0H1rU0yxMsW5lOO9dF4e0RrvVrb9w0iCRSwVMkjNeXjcYqN3J7H1WAwirNWJ9C8Gz
f2YsNpt86YeXuPbPLt+HA/Guo0D4W3ifuLpCJAAR3znpXp9x8CNcg1m0u9K02c2VtbxrI+zgSSDc
wOOeoGfTFe3/AAR/ZuvdYv0ku7cSzuqluNqoPU+g+v4Zr8jz/jHln7PC+/JuyS1bfZI/S8uyelh6
ftMQ7KO9+x5x+z3+zssepwXGpwMxBDCPZne3PGB69PX0r69+H3wRmvEF541VofMC/wCjrgOwAwAx
H3eABgc/Q11/w9+E9h8P7NZZNk12iHdOwwsY7hR2Hqep/Ss34g/Ff+yrCT/hHyqoMqblxxn0QH+Z
49jXj42jSw+Fp4niad3e8aK15n05v5mvlFX1bucdfNKmOqfVsrjZbc3+Xa/3m5qevaL8OtPEdy9v
ZJjckEa/O/uFHJ+v5mvONd+Ndn8Tru+8M2VsyQ39jcgAzbbiZkTcEXacLkBucmvNfE3jd2murjU3
lHmjO9judz/OvALf4xT+HP2i/DesI7LZ2ms27SLnAWJnEb7iP9lifwqcqzvMeIsbTwtKmqOGuk4q
12trN7LTokvmbVMpwuUYeeIrycq1m076KXR+eve5qfE39r9PEmvreaLbiCFEijt44+tvCo+WNSOn
fkc5J7VjWf7Wep6Rbusl49uVI8t3lZRtDb1UBfRsN7kE14j8cbWf4bfFzxVoOHWPSdXu7WPI/wCW
YlOwg/7hT865UePJjblVnkRRlimSyg9iAf8ACuipwRSpyacb679fvNqXFkHGMFblWytp/X49z6yk
/bs1jSgBZ67PPjJZkmlQDJ3HG7rlu/1HtXY+B/29PEl9EfLvJrgk4CsIn5Y7iRuUHtgZJAHHpXwl
N8QxLcBtR2ycAA4Axg4A44rZ0fxvDe6fe/ZQsTw2+7IwysN+0kj1ORj0qlw7WwkV7CpOPpJ/kXHO
cLim41KUH/26j9H/AAl/wUEivLs23iPTYPtHI2I5gJY8qDu3AALnJzyccCvUvD37Rvgrx9ayRTX0
MKsp3RXqAK65CjnJU7s8LnJGeK/JOx8a65p0cclrcrNbRsCUjIwD06d+OOKXRvj7d6NqiNp9w8DJ
yVViASOBnt3PqOa66E83oXjGqqse0lf72rP8znrYfJsRa8HSl3i/0d/wsfq949/Zh8M+PVefShHY
zNlCYlDw8ZBGzIxyOcEdDXh/xQ/Yvu7fR7i2vbQX9oFby7iBd/lfLkMR94Y98jjrzXiHwU/br1fQ
FjUXssUIBUgMSu3IZyFORlmAyRg8HnmvsT4Rfth6Z4806KTWYlTewUzwfcBZuAUJJUKpBJyeh4rx
MXRyjFTtiacsJVvpKPwX+6y+6PqehTlmuBp3w9RYmiuj+JL03+5v0PzU+Mv7K2p6fqlxNFbyPGxw
HUZXjvntnFeFa98PLyydg0LoUOOR0r90vE/ws8K/GDS2uo4rWRrtdwu7YLmTIwC46P0/i547V8nf
tJf8E+7m0trm80KCOaBdxSSEZUDPyh1PKk59xz1r26eLzLI4KVe1Wh0qQ1Vu7WrXrqvM8/2eXZ0+
Wm/Z1v5ZdX5P9HZn5b3fh+cNny2PbIFUbnTnRf3iEHoR6EV9V6V+yxrU3jQWMGmS3MyMzAbPlwBl
ju6YA/Pt0rgvjf8ACFfhp40Gn6x5VxGSzO1q+7cVIV0BI4YHjmvp8v4hw+MrRo05JyavoeBmGQVs
LB1JKyvbU+eruxYzHIPHFWLbTDtGBmug8Q6UttdnYOOvPUcnr70ljZCVUxxX32V2c2fGVYuDaMiP
TmJ+cCpDpvAOOlb1zYCABvTtUP2YcZHvX19CCaTR4tao4SszHOmkMMimy2JzkDNbbQA88Uz7JuBJ
Fd0adjH2piNbEA5HWsLWYfLlOe9dnJYfKcVzWv2h848dK4M1pv2DdjqwlS8zDA44pdvqDU7WpzQL
YnpXySgerzLuQlPmyK6DwbOQ5RjjnjFZkdizjCg1teF9KkF6uwd69XKb08RG3U5MW1KlJM6mCLfk
gHnvXP8Ai+02zscZ3pmu607w/KY1+Vuaz/FvhaRwjbD90g1+kYqg6mHfofMYSvGNZK55ZOnyAGkt
AUmXr1rcuPDjqGyp61U/sd4nyQa/LqsHGvF26n1kakXFkWoJ/pGRjkVXk+5WpqdiUMZI6is+aErm
tcyptOYUpKSRXNFKRgUlfNG4UUZHrRuHrQAUUm4eopetABRTS31pVbI5pXAWkLY60FuM01m3UNgK
X54prNnmgnHWmM2TUt3HYCcmms2KRn9KbSKWg4ncflNO+tR0qtz1oGPooooEx6cjipUXNRRc1ZgT
c1WjNuxLBDuPStrR9Fa6cYFM0TSmupVAFekeC/BpmZfkrpo0nNnnYrEqkij4Z8FNOVwleieGfhuZ
Au5P0rpvB3gNUCFkr0TRPCyQIvy4r1qdBR3PjcwzizaTOP0X4bIqjKV0dh4DjjAygrrLbTkhHSrS
W4HQVtotj5itmM5vc5yDwdGi/cH5VP8A8IlFjG0flXQeTS+WKpSON4qb6nMT+D42B+QVmah4EjkB
+Su78rPY01rQP1FNSKhjZx6nkWs/DkMDtT9K5HW/h6Y87Ur6ButIWQdBzWJq3hZJVPy0+WMj08Nm
0ouzZ83ap4Ta3Y/IayJ9LMTfMK9z8S+CwQxVK8+8ReGjAxwuKylStqfS4XMFW6nDm2xSNDWld2Zh
Y8VVZMVnY9KMrlJ4fSo3jq80eaieHNLlLTKLx4qFlwavPARUEsJ7VLRaZQuG61SmbnitC4hzmqct
scmsZG0CvRUhgIppjIqTS6G0xxz9afSEbqTLuV5F/Sq8sWauSrg1C6VnJlJ2KjRZNILfJqyU9KBH
61lIfMQfZh3pr2vHSrfl+1MdcVLVxqRnXEHB4rNvLbg1tTp1qlcQ7s1jJXOiEjmr+14PFY00J8w1
1OoWvBrBuocTHFc80ehRncdZLk1rWUeBVCwg3YxWxaQZxWkEZ1ZFu1j5FXAOKjt4doFWEiPeulHB
OQ5DUqjgU1I/WpkTFaIybHKu6n96RRgVIiZ61SVzNsZRU4izSGHB6VYuYjRfWp4k59aRI8nirEUO
KdiGwRe1SAdhT1hJ7VIluc00jJyERcCnYp3lGlWEk07XM2xYk5yanCetJHGV7VIsZNaJGEpEYTB5
qaOPPJpyxYFO24FWkZOQAYFKg55pMH0p6J+dUQ2LjJoMePxqRVx0FOERNBN7FKaHuKrvFzWq9v7Z
qCS1OeBWE4m0JlAxcdKaYs9au/ZjjpQbQnoprOxtzIz2i9KY8frWkbQntTHsjjpRYtTMt48dKbgg
9K0JLIjtUL2ZFFjRTTIFbFSLJ6UrWrDtSCEg9DRYejHhs0uaYUI7UhGOtS4hYeXAprSe9NY4HFMo
5R2sO8ynxKXIqJEJPNaGm2hkcelVGN2Ddi/o9hvIJFdRp1j5ajjmquh6bwOK6C3siEHFenRpWR51
arqRRxbe1ShKnS0J7VKln7GulROVyKwi9aesJNXFsz6U4WhHaq5SOdFVIOanjhxViO09anitvarU
SHMhgtyxGa07Cyz1FLZ2W49K2bGx6cVSRy1athLKw4HFalrY8DipbOzwBxWhb2uO1UkeZVrEEVgC
OlOOmA9q0Y7fAqVYM9qHE5JVTJGlgdcVJHp4PatBoOeBSrHis3EzdRlaPTQOtTppakcirUMVWI05
xQomUqrRmnSFPbNNOjqT0rZ8mjyQetPlRHtmYZ0QdgacmkAdRW19nX0pRbAHpRyoXt2ZkenY7CrE
dgPSrohx0Ap4QCqUTN1WyqtkBThZD0qzSgbulVymbqMrfYFPWmtpynoKueXS+XjrT5SfaMzpNKVv
4RVW40cMOlbfl56U14c9arlRSqtHKXui9eKyL7SsE8V3VxZB1ORWVf6XnPFTKB1UsQcTLYbT0qP7
H7Vv3um7T0qjJbFT0rPkO1VblAWvrSm0q6Lf2p4t/amog5mY9hkdKqz6fg9K3/sp9DUctiSOlPku
Cq2OdNrtPSlEHtWtNYYPSoDaYPSlyl+0uUfJNIYOavG29aT7OKfKLnKXke1OW3Jq6ttz0qWO0J7V
SiS52KSW3rT/ALLntV9bPHanfZK0UTN1DONr7Uw22K1GtKje1p8ovaGY1vzyKBDir7W5HSo2h9qT
iPnKbJjrUUkeavPD7VBJFipcRqVzPljqvKmORWhNHVWWOs5GqkUnTnmoniq3JHiomTJ4FZSaLUio
0eajaKrptyx6U02THrWblcftUt2UWi54pjJ61eazdaje2I+8Knm7lxqJ9Sk0WTUZh5q8bUnpTTak
dQaZqplLyacltk9KteQfQ1Zs7BpXHHFNK5TnYgs9LM7DAJrqPD3hBp2XK/pVzwx4aMzKdtek+GPC
qxKpK110qF9WeXjMd7NWTMzwx4HCBSyV2ml+HEt0HyitDT9MWFRgVeWILXYoqJ8viMZKo9ytFZLG
OAKsxxhRTgm7oKkW2Zu1UkzhlO+40OMUyQ7hzU/2N/Q/lSGzbuP0q3czUl3KTrlqRrcMORmrTWjA
9MUxomXqKyZqpp7MzrnTElHIrF1TwysoPy11JXPUU1rPzB061O5vTxEqfU8y1bwgAThaxp/DXlse
K9bvNA85T8tY954Z5Py0nTR6tDMbq1zzyLQsHpVqLRMfw11//CPAH7op6aJtPIoUEbvG36nKLomR
0/Sh9BB/hz+FdcdIC84qN9NA7VXs0yVirnHTeHQQflqheeHODxXePYD0qtPpiuORUulc2himebXm
gkZ+Wsm90YjPFem3uhhgcDNYmpaDwcCuadGx3UsWebXembSeKr/YSDwK7HUdE2k8VlS6aUPNck6d
j0YV7oxRZ+tBtAO1ajWeO1RtbVi4mntLmZJb4FVpIc9q2DYFj8ooGitIelTYamkc+8BPaozaE9q6
ceG2f+E/lUieFieq/pU8jNFXijlFsmPUGpksDkZFdUvhQgfd/Skbw6U/h/Sp9mw+sRZjaRpxknRd
uSzAD161+vv7ONobP4A+G45BtYQSEgf9dX5r8qPC+jH+3rMEcGdBz/vCv1q+C65+Dfh/heLdl49p
HFerjVy5RTXep+UX/mYUq3NjuX/p3L/0qmeSftnagIfCbRKefL/ma+EtchLPI3qx/nX2p+2lckWj
oDgkgEe22vjjUbPfK+QepPJ75r7TKIKllVJd22fJ05+0xtZvyORurMbGLCtP4V2QXxnbMRwM9q1p
I4k0h4FiJmdwTJjt6VJ4MsG0vXopVXC5wT3rH/l7FX6nuQq2pybPZLHTfNhUqSRjPNLNomCSpwa2
vDNoLywRiOcAcVa1HT9vb619Ko8uh8xLFc60OJutNKEb13deazpLVo05WusvrAEZI5FZdzp3OSuc
1M2VSnc5W6si0h2cbqqPYlycDiuok0wI+OrE5qpNYovbnPNY3voU9NUc2+mF2JcVXvLHc+FAAzXS
TWwj++BiqF3bZk+baB/OuGq0ro7KOtmcZ4v0rFmueQx7Vw17ogck4Nen+L7cfZVIU9f6VyU1r5lf
K5s7tH0uBqOMTiL3QTjgc/SqR0ko/wB0n1r0BtFEvamnwn5j/d6mvmakH0PpMFjeXdnPaDool2h1
z7Yr1v4N+BLjU/ENpLZRi58qRWSNs7SQcjP41W+Hvw2GtalHb7dxLZ9z/nFff37J/wCyJb+EtJt9
S16FVEyBo0IO9h6+wIPXvX53xPWruX1bDK9SX3erfRI/T+H8TShD29V+6vx8kWPgh8F7y6s/tWpy
NGlyA9wpXCbyMNtHc4AHpXs1joNl4W07ZYwrDEOcKMs5+vUmte7ktdAtVD+XGFXCICBgf0rEsNat
vFMx+zzjzk5MfQhQeoB7e49fWvz+cMJwdCf1aKq4yW8mtI3/ACXle76vY7sbmNfNpupO6p9v6/M4
bx/4tn1AS2+TbwDjZjBznv8A3j7dPr1rg/H99DovgGBQwu76/kxFHuDFAOWY+wx+tew+MrXSZ7Z4
PiBbNBbldq3uGEa5wD+9XmLkjG/AJ9cV5n40/Zau9RtoL74Xa7BeRRKxiiu2BEg/2Zk4Y8Y5HJ7i
vAwuEpZlXWKzOo+Zu93s/K60S8tLG086eEoqnhqe3bc+W/ipearJKIp3UJPkgxZPA7c9K8w8QeG/
LsGYIPN+8rHBww5B/MV7v8XPh14i8LXBPjrRryzVQVEnlboSQFJIkQlTyyjIPtXmOsxpdMFiUYBH
B4wfav2XJ8poKnB0UvVHwGZcSV1Vk6jfzMH9tXwcmu/FGDxEkY2eMNF07WgR/fe3WOX/AMfhOfc1
846/4Klikf7ODtGeBX2f8T9HXxP8B/At+qlptHkvtFncg/dEizwg+mFkb8BXi+t+BVlLbVxmvqK+
CSm2up5GD4h54pPpofOOo6JLbI3mA5NQeGYZl1GeIO6Ga2lAwepC5A/MV694s8A4jYhOR7VyOi+F
zY+LbPemVeYRnjqG4P8AOvPrYXli3Y+nwOaxqzirnD6f40u9Ni8udy6qeM/59afb+JobhwNRiVw2
MkjoM5NP1zwsbO8mikB3xuUx7gkH+VUk0GXkKr4+nFefLA05apWZ7UcxnHRu6Oq0rXbeRYhpUrQk
lTtA3dT93HWvXPgr8Yr/AMGyxTWu6e3K5kCEkSAnBwO3Qc14z4E+Fmt+NtXjsvBWl6jq95Iw2w2d
u0z9fRenbk8etfUvwT/4Jp/EKWaG98e3mkeF7WMBnhmc3VyqjHBjiO1fvAnc4618hxNQyzC0JQxt
WKv0b1fold/gfQ5Pm1dVIunF/oe5fCv9oOfTrW11Lwmb6eK/kVHFvG0rCTkBXQfex82M96+kvhN8
YrrxVpaN4306bTHb7ksibBIPlA3IeVY5J9K4H4ZfD7TfAujxabozHUZbXKSNaWgTc6ud27bnB74Y
8gda67UdEh0jQ5rzxfex6bYWyl52aYJjH96TsDxx74r8RwXFeNyHEcuWp+z5vhldpryjpZ+asfUZ
zUwmYr97BKX83X5L/PQ1/HPwVtdZsJ7nwGlpaXk/LKAPJm688dG5OD09RX5wftl/BJPA3xJudQ8Q
W17rEtyskl0ZnEEvmnIA+UbRtAVv9qvs7wD+3T4ZPi6PR/D2+TRIcxJJ5OwOedvkAkYBJHDehr0T
9oH4GaF+0r4C8uyks2vZ4Wayus5VxlQd2OSOgz/CT7kH9Yy3CUcXP+0sFSdGu1+8pPS67rt5Wtd6
OzPHjiKuGprD4581KXwz3s+nN+q3S77H4YeKLfJ2rv8AkGCWGC3vj8KqaXAv2cZ4r1H9pn4V3Xwv
8ZXena1Z3FpPbsd0c0Zjdfqp6dR7civOLGyBtRnA5ziv2HhvELG2qRWjPjc3wksJUlB7oinJEWHw
fSoCPQ9qtzxkKcdO3vUAXPXk1+iUKbjFI+JxU7z1IlQIcnpUipxThHntU8NsWPHNd0IXOSUxiWW9
M4yaxtc8Pl2YhTXaaZpRmOMZrUbwObuPJU4+lb4jA+2pNGFPGqjPVnkH/COvJJgIetXbPwZLK33D
Xq+lfDfzZP8AV559K6vRvhbyu+P9K+ReAV2dlbOI01ueN6Z8NpZcFkP5V3Xgb4SmS6TMZOT6V6xp
HwySPHmxkD6V6D4D+HESyKzp9K9vJstU8RE+azTiLkpSszzbTvhWIkAMXQelU/FfwzCacjeUDhsd
K+il8GRpwUArK8W+DEbSydg4YV+mVMLFUWvI+Lw+eN1ou58g6h8OwC37vv6Vh33w/AY7Ur6I1bwY
Cz4ToTXMah4O2yfc4r8mxeDUai9T7/DZu5Lc8N8S+Bmijj2pjiuQ1Xw68G7Kmvo/xN4SAijBXnFc
Jr/g1ZUb5OfpRm2D3t2PVwOZ8yR4fcWbRH5hVdl2nmu58QeEmhZsLXK6lpzQNyK+BnTcGfSUq8ai
0Mxjmkp8q4NMrGx0JXA0oYjpSUE460th8oE560U1m9DSFiaYWHk4600vkU0t6mml/Skx2HE460xn
zSFueaaWz1pDFL88UgcfSkJyaQHFAEmfTmimgeox9Keo9cUAKh96dSL+NOAyaBPYkiFael2nmuBi
qNtHuYCus8IaR9puF4renHmZzV5qEbnT+BvDPnMny5Jr2zwF4QCIhK1zXw48MbthK17N4W0UQRLw
K9qhSUUfB5xj90mX9C0VYI14rdggCCm2sGxeKsKueBW0mfE1qrmxVUZxUip6UqptHNSBM9azcjll
IYE/GnKlOAx0panmZm5CBaXrRninK3rT5iRhjB+9UM1qHHIzVouBSFM9KpTaGpNHPavoizRtgZrg
vFnhQMrELXrM8O7qKw9c0ZZkJAFdEZcy1PTweMdN2PnjxH4fNu7fLXLXVsYXORXtPjLw1kMQteZ6
/o5hlbionGx9rgsUqqOc2ClEW7oKsNbYbmnpDjoKyPRcyobTI7VDNaYHStTyjioZ4sipkJTMS5tR
zxVSS1BNbNzDkVSlgOa55G8Zmc1pzxUb2vqKvtH6imsnpUmimZclr6VBJEUrWkhDA8c1UuIDUtmk
Z3M2aoyM1ZuIcdKrlTmspM3TI9hPWngYpQh70uz1rIY09KifkVK3fNR0FRK8gyTUEsORzVt48nim
NHx61DNFIyb+DdGc9a528gxOa668hyhIrnL6Ei5NYVEdlCRZ0XR2lUHHWt620JlA+Wum8IeDvOt1
OzrXQP4PMQ+7+ldVOjdXPMr5hFStc4aDRWGOKm/swgdK65tB8o4IqN9KHcVsqdjm+tXOSayZe1N8
or2rp5tHBzxVK50or0FPlNI11IxlTnmpo09anktSnUUwR4NCVi+a4qJmpBBup9vAXPArTsdJMpGB
VxjcynNRM+GxLn5RWha6Oz44re0zwwZCMrXSaX4QBxla6I0rnDWxkY9Tjbfw874+U1ZTww+Pu16L
aeEkAGVq4nhdB/DWqoHnSzFHmP8AwjL4+6aY3h50PKmvUj4YT+7UU3hRSOFo9iQswueXPpDJ1FNN
iR2Neh3fhHPRf0rMufCTKThf0o9m0WsZGRx/2UjtSG1Y9Aa6lvCz55WnL4WY/wAJq1RctkRLGQXU
5UWp7inran0rrE8KN/dNP/4RNsfdP5VTw8kiPrsGcotqe9WIbEt0FdLD4RdiMLWvpngZ5SPkP5Vn
yO45YuCV7nHRaM8nQVOnhR5f4P0r0/Svh4WA3J+lbtn8PUUDKCq9i2cc80jDZnjEfgtz/CalXwNI
f4DXt8XgCPj5BVhPAUf9wflT+rmLzlI8GPgiQZ+Q00+CHP8AAa97bwDG38A/Kmt4AjP8ApfVwWdo
8Ck8DP8A3DUMngWTnKGvfpfAEY6IKrzeA0A+5S+rmkc7PAJfBMg/gNV5vCLoPuGverjwIh/gH5Vm
33gNOcIKHhzqp5wmeFXHh54+xqlPpbx9q9k1PwMFzhK53U/Bm3OFrKVBo9ClmEZnmcloVqPyDnpX
Yah4XKE/L+lZx0Bg33TWMqbR3xxCl1Ma3sy7DIro9B0UyOvFS6V4dJcZWu08N+HAu3IrpoUW2c2I
xSihui6Cdg+U5rah0IkcitrTNHCqOK17XSM44r14UkkeHVxepzMPh4ntVmPw2ccCutttFHGRV2PR
lxyKfKkccsacQfDpUfdph0EjtXff2Ip6gflTG0NSORRYhY44M6KVHQ0RaYwbkV20ugg9hUJ8P4b7
tOxaxtzAsdOI7Vs2VhjHFXbfSAnarsNht7UHLUxHMQW9p7Vcit8fdFTRW2BzUyR+lBxTqXIkgx1q
QIBUgX2p4T1oMXMqyR8/LQkXPNWfLz2oEdS0LnGImKmjT1oSP1qQD0pbGcpBT0jyeaVI6kVewpGU
pCBB9aXGKlVOOKcI8+tBk5kBGetJ5eematCHNPW19qOZIl1EimsOfWpFg9quLZ57VKtpij2iM3XR
QEJ9KDEc1o/ZaPsmetNVCPbIzvLPpTTH6itE2lMNrirVRMpVUZ5i471DPaBwcitNremND6itE0y1
VOZ1HS85OKx7nTiG6V289l5gPFZ9xo24nim43OunibbnJrYEngGpo9MJ7V0SaJz0qxFo4HUUKBpL
FI51NIPpTjopI6Guqj0oDtUo0xT2rTkMXizibjQiQflqhcaKVP3a9Dk0lWHQVUuNBDZ4o9ncccZ3
PPn0zb2pn2DFdpdeHuuFrPn0Qp2pezsbxxSkc6ln7VMlofStU6ds/ho+zbe1UoDdW5nC0PfNBtcd
a0DD7U1osdqrlJ5zOe39RUUkNaLxVBLBSsUpGfJHjrUTR4q5JH61XePrUtGiZA0Waglh4q55ZNBt
S/41EkNTsZU0HpVSeHHQVvHTmboDUUuhyP0BNc802Htkt2c8YSx5FKtuB1FbLeHJs5Cn8qY2hzL1
U1hyS6oJVlLqZflDtSiHPatEaPMTypqeHQJGPzA0uV9iG1vcyRaBuooOlGT7qk10lt4eA+8Kuw6M
q9hVezbJ9so7HIx+HSw+7RJ4bOMlT+VdvHpajoBT20xT/CK0jRH9caOAPh9lb7prS0Xw6WlGV711
Y0VZG6Vr6L4cXeCVraFK7KnjrRHeEvDvlquVrudN08RIMCoNG0oRIMCty2szgcV2xjbRHzmLxPO9
yOOHI4qeKzLHpV2208k9K0rTS+5FbwouR41XFKJm22lluorQttFyORWnb6eExxVyKADoK640Yw3O
GVedTYyRoYx0/SmvogxyK3hACKjeMZquWPYlua6nPTaNgdKpT6PzwK6prfcelSwaN5x+7Wc6MZDh
WqRempxi6GzHgGrFvoB7rXcweGlIztp76AE6D9KyVGCNnUryRxw8O5XlazdU0ARg/LXfS6aI1PFY
muWfynirlTi46Gca1SlJXZ5/c2IjY8VXMAz0H5VsapDtc1mSDDV5snZnvUajnG9yBrcGo5LQEdKs
0daOY3U2jMns8ZwKqy2+M8VtPCGqrcW2apSOiFW5jTW4NULyxEgORzWzcQ4J4qncJwaclc64TOV1
PSQ2eKwL/StpPGa7m7tw4rJvdN354rkqQuejSrNHFS6fz0oj0gyHoa6Z9G+fpUsOkhTzXP7I6vrH
YwLfQc43Cr0GgqMZFbC2qpT/ACsdKfs0jN1pPqZseioOw/Kpo9HQY4q6Ex1qWNMUuVGbqPuUv7IU
jpUM+hqwPArYVcineWG7UuRAqrRi6VpAttShkK/ckVvyYGv0++A8Bk+DunITnyZrhMen75mx/wCP
V+cVlZB5OR71+jf7K92NV+EaqOWWQSH2MkSNx+Oa68enPKl2jNP700GDr3zOnH+aE1/6TL/208M/
bNsmbU9hGVYFv0A/pXy3d6CQ7qqnrX2h+2Z4d2x21ztyJBsz6V8xX+ihCQoAyfzr7DLJqpldG3Zo
+ecpUsXXXmcIuhHIAXtVqz0n7PMrAdO9dImmhPugE1HLZADGOfSuOrLldz041m48vc7f4ZyifT2V
slgRg9q6O9si8eVG7Peue+EFqwilL52u3H4V2s9qcZwcYr36Nb2sVI8GonTk0jk7zTiUJxn8KoXG
l5T7vPvXU3FmASSGqnd22MgjIHP0rWeqNKM9bs4y7tRCR71mPEMMWHXkZrqb+zD/AMOeTweKxdRt
NvygZArCc7I3U3KWmxg3aAHPQ57VQvArn5csa1722OGzxg1QaxJbnpXm152PUw7tuc54ntjJZ4PO
01zUOn75CcYrvdW07zLJ8gnArn47LaxJFfL5m7uLPYpVbRsijb6cAQSK1dP0TzyCqZpYoM4AFaNk
Wtl27cZ6V48jenieTVvQ+gf2Dvg3Z+J/GB8Q+I/JuLLR50jSyKozXUrIzBm3HARQNxz1IAFfWvxb
/aF034ZXENjbRNcXtzAJ4yMCNUJKhge/K/QZH0r5L/Yf1aK38QatZ6giSxskF2qSDK5WTyyceu2b
9BXa/tm30llc+E9YhUNDLbXFiQBjmKUEA/gw/WviuIadR42lTpO0ais31uk3o76Xs/ws0fd5RmyW
XyrNXcXfXa10v1LfjD4+XOrzPPqM8gZ/uIrfLz6D+L09MdKyb3W7y80iLUNKv5kvYmW4hCkYDA5A
B9QR2OK8g8VePP7ZtFWNsyAjnaBt+lZukeNLrTZ1AkZox0QscLn0rysNw1GCUopJ31vrcmvxS3O0
5aeXQ+vvhR+11p93FDpvxbkGnakqhPtrACG5OMbnAA8tiT0xt4PIr1HSvCmkwj7f4OS3tlugz77N
9sM+VYbiqHYxyeuCa/P6PVpvEWo7m3M4GFHt36f1rb8D/G7xL8ItRdfCWoXFrGD81rL+8gY4IBKH
jjcSMY59a8fNuBI1OaeCqcje8fsv/L0NMNxdGDTrxuu63+4+7rvXrG3uVtddlit5JGwq3GFSYjyz
8hbhsNIg478dq4n4k/steDvHlpK0mhWtte7G2zWn7hidjhc7cKfmYNyOSBmuA8D/ALeeieKIhY/F
jRPsscxCvJCoubf7y43xtyAMMx69OAa9R0Lwd4c8X6YuofCrWb3TI5lDLJpN6UiwyNgNbPujB+fd
goGG0cjmviJZfjsgqJzlOi+61i/mn+jZ9FTxeDzeF4KM11T3+5nifij9lK6tPhr4j0Lw7HqL29nf
wa3ahyj8h7i3YAjGcwojnI/pnwrUv2dfFNrc+TL4f1kknaM2bdRtz+rge2RX394b8O+JrWSd5vEd
rq+n3MUixxXWkhXyd2xjJE6qyj5c4UbgT0yMXbKy1uzCLqiaXM2cSNbiSEAnBJAbd1OT1/iHXBNf
o0c6ziOFozhRVRta6tej1SeqsfOSyPA+0m+Zw1v069rX9T83Nd/Zr8VapYx/Z/DurOAOALRs/Ngj
t/trivN/Ff7O3iDwtqFnN4g0LVLKJrqMK81u6Kx39ASMZ4P5Gv1s1EazBpySaVptpPIQAYZL3ytv
bAbYRn8h7149+0V/wlXifwHNbXPh/SrOykLFr1NQ+0taumWzt8tcYVZAevLAfXCnxRmjqKGJwsYR
ejbla39eh6OHyWhBqVOo2/JXPAtJ/wCCSPhPXIm1LxlrWsyXWoO1y8dkY4oow7FgoLKxOAetbWi/
8E9vg38J5DceIbN9T2cj+2NRLqD/ANck2hvxBr6Otv2e/B8tlE9zaSXTbcrJLdzNuB5yBvwoPXAA
HPSqo+HPhnwLcNc6Np2mWci5P2jyx5g+jt8361+QZ7m+aey9s8fNxl9mLjF+lk7o/QMIsJz6Qbf+
FL8bv8jhfDaSWenppvwX8K22l6avS4ubYadZKPVYFHmS/iFB/vDNO8d2ug/DjQpNZ+MOtJPbWYWZ
vtUhjtgFcBljtU4Y+XJgBt5PAPFcB+0H/wAFE/CHwfeex8L7/EWtR5XyoDiGNgejydu/TJr4J+OH
7QviX4+eIzf+PL12VX3wWsbEQ22VCnapPUhVyfateFeBcwzqoq+JpulSf2pX55ffr89F5M1x2cU8
Emtn/Kt/+3n09NL9up9QfEf/AIKlwaBIbD4P6RHex2w8mK7ux9ntiY5TtlSFPmKvHwUYrg4wBg5+
cfiT+1F4w+L2prP431Wa5ij/ANTbIoSC3GMZjjHG7AA3HJ9681Mm7r/OnCXYv+eK/cMq4PynKNcP
QXN/M9X972+Vj5Cvn2JxEm+ay7LQ7/RfH8b3HmvI0NyBuDhsNwOAT39c19ifsLfGPWLbxCmmXOp2
uo6Ulq89+ZSYv7PhiB2skjHlTJIMqAM59jn89nnZpf3f4fWvsL/gmpo17L4K+IOsyzSRyuLLSLOT
P3GLPcSEZyMhY17Hk08yyVQSr4d2nF6ed+np3PcyXPXVbwtZXhLR36efqt0VP+CwMGm6lpHgvUdb
t9FHinWXvLg3elq+2fT0Ki2Mhf77YcfNxjDYAGAPhYWgtbfawyQfzr6x/wCCq3id/EHxh8NWUtzJ
cCw8ORTbn+Uo1zNLMFPY4Roxn2FfMt5pISFcDPFfa8NZZLD/ABSu9G35niZnnMcR8KsldL5Pr+nk
c1cw7gMHjr9KgeLY3HetO405op/mBGexHSmG2G471r7ylT2R8dVrXm2UoImduAK2dJ0c3DAAdetN
sNK86UbR1Neg+C/CBlKb1zn2r08Lh+do8/F4pUo3GeE/BZmKFlOTXoWn+Af9CO+P8a6LwT4FACFk
HFegweEA1sBGuT16V9E8Go0n6Hw+NznlqLU8q0rwNHAfnQVv2ugJCB8vT1robzRzZSkSDp+lQOgB
xXwVak4TY5Y2VbW5XhsQXUBfau38G2qxw5ZR0xXJ2i+dOoP6V2/hu28iyye44r6Dh+hebmeLmtR+
z5WzQaIb8HoKoeKIFWwwO5/GtGP5W5rI8YzFIEIOAFNfVVp8sG/I8PCrmqpHAXunpK8mBn5qxbrw
+s0nA610juTvAI5qCGESTqPevzjEx5qsfNn2tKrKC3OO8XeGNqR4XpXA694f2bwVr3HxLp6ysigZ
wvNcR4j0AMjkLWuaRV5Hp5djXypM8O8QeGxIGG2vO/FnhnymYqte669o2wtxXEeJ9CEyNxmvz2vS
ufa4LGNNanhGp2RgcjFUC2Otdp4s0IwuxArjryExSHIryKkeVn1VCqpxIi+e9IX9TTHPNNL4PNZH
QSeYPemlsmoy5zwaM7hzQOw9mweaYXJoxSUCAn1ooooAKKKKAFXr3p9RjrzUgoAenSnxruNMT7tT
QCqQmXtMg8yQYr074c6L5joSM5rgPDtr5k6jHevbPhjo2THxXdhYXZ4mZ1uSDPUfh9ogihQkdq9J
0u28uMVznhDT/KgXjtXXWkWF4r2H7qPzDMK7nJliMccd6njTA96ZEmamVc1hKR4kpDlXHJpaKCcC
o5jLcKKaH55px9qadwasFFAOaTd82KYhaUNikoppgKzbutQXMIdelTU2TkVaYJ2OU8S6MJkbjOa8
t8YeHtjsdte3albCWM1w3i7Rw6tgVvfmR9BluKcWkzxS+0/ypDkVW8rBrqfEOl+VI2BXPzw7G5Fc
0tD62nV5kVWXB4zUbx7jVlwB0pprNyuacxRmt89RVK4tu4rXZc1UuYsc1nIuMzIki5qJ4sVoTw7u
lVniNZtnQpFKVMVXkTPWr8kRHaoJIc9Khs1jIzLiCqkkWDWtLD61UuLWs2dEJFAqRSEetTtCQaTy
SeoqDZMrMMGmbMmrZt80Lbe1BXMisICaPs+TxV4W59KUW2T0qeUXOZVzZ5Q8Vzeo2+Lpv8K7e4tc
RGuV1OAC8bNROJth6mrPoP4b+GBcWiHb29K6jUfBgEGQnAFWvhJpoeyj44wK7+60MSw/d7V6VDVH
51i8fKFZ6nhWs+HzAzfLWHcWvlseK9d8W+FwFYha861zTDBKeDVzjY9XCYr2qMBogeoqvcWQfpV6
SPaeaQLurM71JowbvTM9BVI6aQ/FdW9j5o6ZzSQ6DvfpmmoXNo4iyMjStGMjD5a6/Q/DWcErU+ie
HwpBYV1Wn6esIGBzXRTp2ODE4tvREGmaCsajjmti2tFj7URKFGBUgODXUlY8ic3MnjUDrUg46VXW
Xjk09HOaowaJlXPWp4rTzSMio7ZPMNbOl2BcjIq4QcjnrVfZoqweHxcYytTN4LWQZKium07Two5H
StGO1UrwBXpUsInqzxa2YSTsmee3PgkID8lU5fC4jP3f0r0m6sVYHgVkXemAngV0qjGBlHGznuzj
ovDoJ+7V228JiXGV610VtpW5+lbOnaSBjK1lV5bWL+sSXU5ay8DKTnZW5p/hCOEDKCukg05UUZAq
ZYQO2K4JU1e4ni5y0uZVvoaRY4FW47BV7Vb2c8dKfs9ulCsYyqt7lZLIDsKeLUelTU5VzyaGjNzZ
B9lHoKDaj0qyBjpQeetQLmZSezXHSqtxYDsK0yOSKjkTPWnYuFRowbiyA7VRuLFWHSt+7t89qzbm
LB6Umjtp1Gc/faMrg8Vg6p4fDZ+Wu1dM8MKp3WniTPGalxud9HEOJ5rqPhYSE/KKzJPBvzZ216ZP
owJORVeTR19BU+yTPSp45rqcFaeG/JYZWui0fS9uOK020UbuBWhpmlbSMitqcFEdTFcyFsNO6ZFa
9rYBcZFS2loI1HFXI4sV0Jnl1KzYyG1CjpUwQDoKWiluYNthgelAXJ6Cinxr+tFrIhsTyNw6Cm/Z
Ax6VY+6KVBk1EjPmZB9kA7UeRjtVqk2j0pJ2FzsrrFmnBPWpSnpTSMdau4cwAY6UUUoGTQIFTPWn
BQKWnKueTSb6ENiBSelOUYFOVc0oT1pLQlscBjpUkaetMRdzVZijz0pSZjOVgSPJqeOD1p8UWKsR
xcc1hKZyTqkSQegqRYalAx0oqL9zBzbGiOnBc9BRT0ORTIbAIO9G0elLRRclyEKA9RTWhB6VMqjF
BUGrVwUmVXt6ia3PerpjNIYs9q0jOxaqWKX2fJ5xSG19gavGHHXmo5I/St1K5aq3Kf2YCgQ4qdxk
cU0DJrZF87I9hpfLqUqDTWXbW0Q5rjdgp3kgjmkqT61QN2IJLQMOlU7nSlbPFaijJ5pWiDVdhKbi
czd6RtzxVCey2HkV11xaBh0rLvrHGeKOU6ade5zzW3tTGtvatGa1weKiaA96XKdPOZslt7VXltsd
K1ZIB3qtLD6VDKUzKlt/UVCbQueBWobYv2rQ0nw5JeyABSc0oxcnZBPEKmrtmDbaK87AKCc1uaT4
FmuyNqHn2r0Xwd8KmuipkjPPtXqvhL4QKqrmLH4V3QwKir1XY8WrmlStLkoRueG6V8HprgDdGfyr
esvgS0gG+Pr7V9IaP8K4olGYx+Vb9p8O4YwPkFVz4antG4o4LHYjWU7Hy+vwByvMZ/Korn4AcHEZ
/KvrJPA0K/ejU0ybwHC4/wBWtH1mg/sI0/sbFJXVVnx5e/At4clY/wBKxdT+F8tiDmM/lX2XqHw3
ikU4jHPtXKeIvhUjo22MH8KXLhqulrGM6GOw2t7o+Qb7w61oTlelZ00JjPIr6F8Y/CTAcpHg/SvK
/FfgWWwdsoa5q2CcVzQ1RrhsxUnyVFZnEiXB4pRMc81JfWTWzkMDiqyKd1efK6Z68bSV0aVgu9hX
U6HZg7eK5rRoSWX3Ndv4ds9wXit6aOHFz5UbOl2OQOK27TTcYyKNI00lRxW1DaBB0r0qVLS7PlcT
iXKVkVLeyC9RV2GIAc04xbe1JXSmlscd23dkqkA807zQD1qPdhcmoZW55osU5WLYuOODTDNuPBqn
9o+tT2pMzjFJkuo2aNhb+cRkVu2OmgAZFVNFs8AZFbiLsUCsJyPTw1JNXYkcAUYAoktgw5FOBx0p
6tu61lc7uVWMy9seDgVzutWWQ3FdnNF5i+9Y2rWOQeK0hI4MVQutDzLXbLY5rnrpNpNd34k0/AY4
rjtQg2ua48RDld0a4CrdcrM+inmPB5pyR5rmuendEe0ntSNCX7Vbjti3AFW4NIaTtTSb2M5Vow3O
fubEtWZc2ZBPFd5/wjTOv3ap3XhJ2PCH8q3VKfYulmNNaNnCS2JJ6GoW0st1BrvY/A7yH7hqQ+A5
FH3DTeHk1ex0/wBq0l1PO30fA+7+lQS6aV7V6FP4OZMgoaqS+Ej3WsnRkuhtDM4PqcBLZFeoNQNb
kHoa7m58JnB+Wsu88NNHnCmsZUmjqp42E+pzIiwaegx1rSn0lo+o/Sqr2pU8isJROqNRS2Ik61PD
FuNJHASau2ttU2ByJtNgw+K+5/2FdbOpfDuW3YqfLgjPvuVmQ/8Ajuz86+I7OHEgxX1J/wAE/fEA
j1uewlcjPmKoz2dAw/WGu7l9tl1eHZJ/c7/qckavssbhavaaX/gacPzkj1T9qHw2NZ+Hlw6Ab7ch
846Ada+PdTiPmZII9Mj8K+9/iHpK654ZvreRciaJhjHtXwn4k09tO1O5hcNuhkZefZjXdw3iefCS
pPo/zIzimqOLlJdTn5Y9gOcDdVS4UMOMmtCbKIeOvNUZseYN2c4zXVVd5EQqK1zu/hJtazDH+E7S
uOldjcR/KQfTIrgfhNqSwzyQsc5ORx0r0GU+YMgHOMH2r2MHK9NM8zF1LTZmXEeQcjn09Kp3kO4E
AdRWpOgK4HUcZqpPGQM4zxiu2U7I5oVG5anPX0WwYXGaxNQtOvBPvXT3sOXwRnj8qxr+E7Txwa55
6nbSmkctcwbg31qu9mVwcHmtqe2AJBOOvaoJ7fgE151dnpUaqtYx7qzD2zrjqtcrPEEfFdpdIN2M
1ymoQ+XcuCMc185mOsLnpUp6WILddsgIFaMZNwRu7VSgQ54q/boRXhTn2HUquKt0PSf2ZdU/srx5
OhODPp8yr9V2yD/0XXtH7QKx+M/2fLy4QBptB1SO4LdxHJuhYD0G5ENfNngvxI3hTxLbX8QYiHIY
KBkqwKsBnjOCa95+HviWL4gfD3xLZ2/m+VqkV1AqyldyuFSZCccfeVuleDndHnoxxEd6bjL5Kdn/
AOSyZ7uQ4xcs8I38d0vnH/NI+e5G2vhvpUkZVsfnUToeSw5zjHpThGyLnrXW1qfPfWJN+Rp6HrX9
jXZdFDcfiKi1jWjql88rA5aqO44560gfDZaicE/eKWLk17O+hdimKjpj68179+xb4e8TatqV3ceH
L+5ttJt5FE8cZys0jKVJI7bULHd2O0DkivnoS5XAz/hX2J+xL8ZNBbwk/hnTtMmjvY4Wub2QOmZl
AwSgzufHXAGQDXm46gq1LknFON1dNXutz6Lh+UPrN/acrs7dNT6B8IhrbSAsYGxQWiiVi+IxwnzE
dSFBxz1rJ+IPgef4i6fbQ3N1fwwwyvNi2lWDfnhc7lbJUE9wCc8dMdBZeILSW0ha1cSQyKDE6ESC
ReMMNpPBz7VVvpLPUESO4hvCkfIxayg8+4Ga5Y4mm67nfllF/NfLT5H20qU6WGjThJS0tva79bSt
12XyRyd78N20nS/sdn4j8QWlwSHWTzo+QTySdh9+tVfF3h3V9f8AhprWh+GriHVp1slNtJO4WWeS
MgsH7FpQNu4YUE8jFdzFaWlpujBnAJJPmoQqcdN2Onuc96glvprK6M2m2sCW+8q8isJDcLg4VNvI
bcMnPH1rWLoYuU18Te93p/XkefKFfBOFVvliv5U5SSfnt6tpabanwRq37V/j3Q9VdNF1y4itLYCC
KC4tI2KKvQMpX7w79686+Mf7XXxD8WaPPYXOsJBbyrtkNvbRxO49NwycV61+3F4a0jRvi/Jc+E5r
RRqcZuLi0ijKSWshOSZAeNz7t3GOByO5+evEulC4jbinHIMtlJVHhoKS/urT8DyafEuPw1SVNYht
X3v06W7L0PB9fsZWui8pZmyST1JNYzElstzn3r0PxdoXluxUe9cPf2JhkOBjFevyHqUsa6sb3uVV
fn6U53BHqaYyetGDtyOlVGk2zro1H1HMyEKEUbie9foT+yf4dk+F37Hmn7Y2TUNatG1gxkBszXsp
S2Kr2ItrLcD282vgXwL4TuvH/jPS9C0ZC95rN5FYwL6vK4Qfq1fbH7YH7RF78AW8J2vwtGnsf7Tu
L2K1u4POhWzsFisLQYBXKSG3mlGCMbzWvsFVqRi9t/6/E9KjiJYenKrDe6S++7+4+Zv279Zj8R/t
beKxaA/Z9Nmg0uNC24Ri3gjhK59mR/1rzw2gyh2gZ56VN4r8QXvjjx5qWteI2Et/rF5Lf3Tou1Wm
lcu5A7DcxwPSnxfPnPPpX2GSYd8snJHz+OrunFJHPazA0xAaMADsetZUmnlpBtH5V19zp3ndFqvF
oRllGARX0UKGp5f1vW8hPB3hw3Myblr2jwF4JPyGRAK5jwB4dUOmV5GK9q8HaKEhQ47V9JgMKoK7
Pls5zBq6TNTw7oS2yKMcjrW7HIlsB5o+XPzfSn2VqIl5qLVlCxHHU16E2pJxR8LKp7eepz3jFoXu
M6d90jLZ6Z74rnpWEhwmQa29YgbYQ+Mmsy2ti82NvSvh8Xh26/Kj6LCtRppX2JdC08zXAJXPOK7u
1gFraqncDrWJ4bsSjgsOnNdFsLfU19Ll+GWFpLuzxsyxPtJ2RCvDECud8d3GI8ZwQmCPxrp2gKHA
61xXjK8E924z1OK2xk1GhN+Qssjz1k0YBbavPU0umJvvFApbj5FXac5Hp0qbQYt1yWr4qNL2lemv
M+ok7QbH6xg3Z9lFYOrWnmxvkVtag5a7mJ9cVnXQzFg9zXPnD5ed+v8AkXh242PPvEujZ3YFcFr2
l4LZFew63YCaNsDrXA+J9L2luK+Kmrn1OAxF7I8Z8aaFuVyBXl3iDTTDI3Heve/E2meZGwIrynxl
pGx24rysTS6n2eXYi+h59LHg+9RlCfWtG6sSHPFNj01mPSvP5We8pqxRERzThF65rVh0N36KatR+
GpGHCGmoNkutFdTA8o+/5UhjPeuj/wCEWl/umopfC8ifwn8qfs2JV4vqc+Y/am7K15tCdOqmq0un
MmdwNTys0VRMobDRsNWmtSO1N+z47UrFXIAnrTgM1J5PtSiLniiwXEAqxbplhUaRVbs4SXGapIiT
Om8HWvmXScZ5r3z4YWAwnFeJeBrfNyn1r6A+GcICpmvWwcT5TOp2iz1Xw7AFhXFdBbrgCsfQ1xEt
bcC8c121HY/NMVK8idBwAKlAwKZGM8mn1zN3POkxGbFNLZ60P96kpDSClL5NJRQMXdzkUK2DSUU0
xMcX54oD+tNoqyBS2TSE+tFIxwKL2AimG5TXP+IbISRtxXQt901m6nDuU1vTZ2YeXLI8p8V6Xgtx
XEaja7ZDxXrHibTN4bArg9Z0hhIcCpqxufW4OvdHKPEaaYvSteTS2zyKYdLY/wANc7TPRVRGQ0Xt
UUseRzWy2lN3FRSaU3oTUtMpVEc/LB6VC8Georcl0lz/AAmozoz+lZtM2VVdzBltqryW3NdI+iOR
0qtPojg/dNS4s0jWXc557bJ5FQyWeRwK3m0ls8ij+xmYfdqOU2VZHMyWPPIpv2Gujk0Rv7pqJtIY
fw0choq/mYa2I7inLYgHpWw2msOq0xrUqelHKV7W5mGy46U02foK1DCR2ppi9qiw+cybu32xGuN1
hdt83au/vov3JzXDa1HjUHzUVNEdWFd2z66+EkWLGL6V6TFb7ouR1rzv4SjNlF9K9MgXKCuylsfl
OYy/es5/xBowmibivMPGOgeWzECvbL23EsZyM1w3jPRw6MQK6N0b5dinGSR4jqFp5UhBFVVTDV0X
iWw8qVuO9Yfl/P0rFqzPsKdTmjcsWNv5rc10Gl6MJACRWdottuYZGa7DSLUBBkVvTjc5MRV5SK20
0QgfLVmMbCBV2S3wvFV2jwa6LWODn5hEODTycCmhPWnUwCpbddx+lRhS1XrG2JYcVcVcyqSSRe0y
0LkZFdJplsEAzWfplrtUVqQNsr0aELas8HFVXJ2NSDGzipfMqhDMR0NSic13qaPKlTbZZdsioHg8
w8UI5P41bt4t3Jrmq1uxrCHKR21jg5IrSt4tgpsUW361LggcVyOTYN3HhzTi2KhDE1Ioy2TSlInY
kjHNPpoO1eacKzIEKg9qD8g4paRxkU0ABsigMDTKMZp8oD2XPNRv0p6tnrTWXqKQIhkTcKzry35N
aeOcVBdxZBp7o6KcrMw3XDEEUqRBh0zU11Fh+aLdfmqTs5tLleexBXgVSktOelbzxBl96qSWuWrQ
qFRmZHpwJ5FW4LERjgVdhtcdqkMGBwKpFOq2QJHgVJQeOtGM1olcXMFFFKnXmqBsFGTUqDvSKuaf
USMpMKcnWm05OpqXsSPA3Gl8uhDz9aeBk1BmR7DSFc9am2GmyR+lAJkBQinIuOtLSqNxrS9x3uOU
ZXml6UdKVBk0tibj+lHWipIkz1pbGbdh8MdW4I/WooI8nmrsMeaxnI5Ksx0UfrUlHSisLnI3cKMU
oB7U/tzRcluw0J604DHSgDJp3l1S11JbuIFzQRzgU4JilpiAe9AGTRT1GBVrYTdhAnPNOwPSiinc
m41l7iopF/Wp6jkWtISKiyoR81IF56VK4wfrSV1xZvzaDGXFIRnrUlIy5rWLBSI9opaUrjrRtyox
Wq1KvcVO9OoAwKKsmQHnrVe5td4PGRVuNNxqdLEy9utUlcj2nIc1c2PXiqr2BPY12R8PNL/Cakh8
JFzytdEMNKpsTLMIQWrOGbS3foppo0B5OinmvSIPBq55XmtPTfAySOPkzXSsu6yZzvNm9Io830bw
LLeSj92Tn2r03wJ8K8shePJ47V2fhL4cK7KTHXp3hjwRHaIvyAVEp0sL8OrNqWFxGYv95pHsYPg7
4cpbou5OntXeaV4bjtkGFFaFlpq26AAYq2E2r6V5dXESqu7PqsJl9PDRSSIYrNYx0FSCNR0FOorn
PRUUgwPSkKg9QKWigdhjQq3aqt3pSTqcqKu0U02iZQUtzkNf8Fx3aN8o59q8u8e/DBZY3xHnNe/S
RCQc1i674fS8ibK5rroYqVN6niZhlMK8W0tT4p8dfDl7KViiHGfSuIm0FoZsEEV9deP/AIdrMj/J
69q8V8XeBTYTsQnf0rorUIVlzwPApYirgpeyrfJnBaNpu1hxXe+FtN3beKw7PTfJm6V2/hGxyV4r
KhT94zzGu3DQ39L0vEYwK0Bp2B0/Sr2nWOIhxVprPC9DXU5WPLhh9LsxJLHI6VWezINb72ntmoZL
Hd1FCkTKgYMkRHWq9wMKa3ptO9KoXWnlc8Vakc1Sk0jGbJetbQ7bzGGRVUWJ83pXQaBY7cZFS/dQ
Uo+0kkbOm23lxg45qzT4IsLTmj/GuZs92MElYip6L096PLyakjj5pFJMcE3Cq19ZeYh45rQijzUj
225KXNYt0udHnviXTThuK4HWbIpIeK9f8TWA8s8V514gsd0pAFVVj7WFzyHfDVvU5H7NubpVyy0l
pTwDWrYaA00gyK6XSvDYQAstYUsNfWRtVxjfuw1MHTfDRbGRXQab4XHHy1sWmkhDwK3dK0kMRxXX
7tNaGUKE6799mJaeERIo+WrX/CCB+qV2Wn6SABlav/2eqr0FZOs0erTyqDV2jhLfwMifeUVNL4Lj
K8KK66a3CHoKhYYOKXtZPqa/UacdLHB6l4IXBwgrA1DwqIifkr1ea2WVeQKxdX0VXUkCtI1Xszgx
GXpK8Dy240BfQVmX3hdZAflFd9qejFGOBWVPabD8wra0Z7nmqdWi9zznVPCWMkLXOal4dMLH5cV6
9daekqnisHWPDwcHC1y18ImrxPSwuaSg0pnl66cY26VMkOyuh1PRPJY8VlS25jJ4ryprkZ9DTxKq
q6I7cbDXrf7JPihvDfxWtDkbZtvU4AwwJ/8AHS3515MoyeegroPAeqHRvEVndgkeTKufQgkAg/gT
XoZTapUdKW0k196aOfH806MuT4lqvVar8Uj9G9YhDNIo5Vsge4r4s/aA8NjQfiXqKxghZz5yjHY+
lfYnhrVh4h8JaddKwZpLddx9WHB/UGvnr9sfw0YNSsdRjGFbMbmvO4fm6FedGW+3zX9M9XOZRxMa
eJh8MkmvRq6Pny7jJzwRjg1QuIsD36VtXduRw3f9aoy2ylzvAxXvVdHoeRTehJ4IuTZ67HuOPM96
9etR9ot1K/NuGcmvGLRjZ3sckXy7WBr2LwncG50uPzCS20ZIrtwFf3XDscmNai1LuK9vh8HjIz0q
neQlY8g8e1bb2u5sEZBOKjfTQ6EEe1ejztnmOfKzlrmHLsSOvtWNqNtuXHU9a7C+0o5xjisPUbDG
cDmok7HRTrX0OYltA0g+XNU7uAZwMCtu7hZJOeAKyrxOmc8151epdnr0JXimYt5HkMRXOa3bYuyR
3rprxcFt2cVj61EGAI7V4eMfNFo9WjIybeL1q5GuAKjhTBwatJGAOetfNSZNSYqEDrXp37OniMWG
pXlu5JUNHcqueu1tr/8Ajrn8q8z2c9K6H4YX407xlZ+YdqTsYG5xw4K/1rLkVbmpS2kmvvQYeu6N
WFRdGmR/EDQ/+Ec8a6nYjhbe5cL7rnKn8iKxzMdvGa7H4225fxNBeYP+m2qFjjnenyNn3+WuJziu
Og5OlHn3tr6mmMSp16ijtd29Og/fnpSMpOKC2RxQW44rdu6OZbkkZGf517p/wT8aOf47S286puud
Juo43IOYj8h3KQQQcbhkHOCfWvBgRXtn7BEgH7RumqeDJZ3Sr9fKJ/pXPUjzQfoz18qqWxdJr+Zf
mj7csPBb6bpNrY6Xc7LW2jjgAljWXfGi7R17+pOa82+JGn+HvAV2JPH3h67ubC7BC3VhNcQwxvuy
V2LMdnAByAM84r2eCT5QGIBxWX4u8M2fjHRprLWbcz28uDtDFTkdCD+P0ryNalT320tNV5H6jKjG
nSXskm9dGr/8E890b40+Gdf8T6RoCwXDXCuBFFLO0h2qvmK5Lnc2zAPOTnGM18lePv2iLjU/Gk9x
4Ugji02Kcvb+e0jSz4YlZXIYbXI25246evNfRes+Eh4d/aW8FW8aW8Wly294IWiTawcRYdXYHkjK
4PHX8/iO6dUJCMMZ6+te9UpUIVFOhG146636vqfB5lj8TKFqk1bme2j2S+7/AIc0PGvjTUfHevza
l4qu5r27mADSSMTgAYAGew/zzXPX8YmRhwasNLu7VHJ93mlFW0R897a8rtnEeKtH8xTxXnPiTShG
zlRXsutWgmiPevPfFmlbd3FdUVzKx9HluK2TZ5xPAF60i2+MADJPStC8tAJ8N60JZqHTYuSf1rpo
07ux9XQlzRueufsG+FGb43Pr8cRnPhOxlvrVdoYS3smLazTB6kzzoQP9io/20PEcWs/tG6lpunM7
6X4Phh8NWfGSBaoEkP8AwKczHPvXs/7DHhyD4efDyLxL4hTdbTy3Xii9Xu9jpcZWBRk9XvZlZex8
muA+Bf7Pms/GTVLnWL6CS+vdQeW7kV+rlmLyyEnjAYnk4ycYr6TKsrp16sqlWSjGKTbe3p6qz+9P
Y8zOs7hl1GN9ddElq5Pt1elvmmeF2GmxXFzK03XHB96kh0ryc4GRXW/FLwtaaH8QdQh8P82qsu0j
gElQTj8TWXDYyN15FfWYXAfVVyJdTxKmafXYRrLRNJ29TOi0suuWXipbXRyZgFXrXQ6boDXkfyCt
TSfBkhnU7Sea9WjhuZrQ8ypjoxbuzW+HfhzBQkZr1vQ9NEFso21z3gXwyYygxXolvorWyKG5xXqV
JxoRUL6nxOa49TnuU/s58r5RyKzru2aeTocA4roZowqbcjeeg71HaWavKqXJKAnJrCNblTZ5NPEc
l5HGa/beXtUjkiqGnac32rlc5rpvEFkBqRSNtyDgcVYsNKRWTywM45rijhlOs6ktketHG+zpLzDT
rARxghQBirLRZbgE9q0FgCrhRgYprRYbjkV1OrdnjSxHNK7M64XyIWdiPkGa811g+dqDA84Fek+J
ZRbWLA9XOK84ugHvJGHIJOK83NKl6cY92fQ5LtKZRvV5H5VoaDCFh3nHBNUZyZJCB61pxD7Jpbnv
t4ryMFH/AGiVToke3WfuKPcyrpi29j/ESapXLZC+1XLrCoB371nzyEvXz+dz0a/ruddFFe6i8xDX
J+J9P3KxxXYOd1YfiCDfGa+aep6WFm4yPKtfsMlhivN/GGieazcV7DrtlvdsCuY1Hwx9sb7v6Vy1
aXNofW4PE+zszxc+E3mmOEPX0rX0j4cSXBHyH8q9V0n4ch5ASldhovw/SIDKCueGEXU6sRnKgtGe
RaV8JC4BZP0resvhCMcx/pXsdh4RjiUfKK0YvD0aj7orpWGijxaudzb0Z4uvwhTHMWfwqC7+D67e
I/0r3UaNGo4UVHJoUbdVFV7CPY545zUT3PnHVfg/jO1P0rltZ+F0luThD+VfVV34VjlByo5rB1jw
FHMDhB+VZTwkWejh89knqz5M1PwbJbk5Q1j3GitGeQRX0r4m+GCuGwn6V594i+HLW7MVT9K4qmFa
1R9Dhc2jVW55I2mkdaT+zz6V2V74WaFyCv6VUOgkdq5nSaPSWJTObTTz3FXLPTzuHFbUehnPSrtl
oRyPl71SpkzxGhd8E2Wy4Qkd691+HKYCA15V4W0jy5VJFet+BV8vZXp4aNj5jNqnPF2PUtDGYV+l
bcI45rE0I/u1+grcg6CtazPzzFblhRhaWgcCgnArnPP3IycmjvRTGPzcUGg+iml8dOaXdxmgBaKb
vppOTQJq45nweKUPmmUo5NO7CwuSxyOBTgm+pIbcytgCtfSvDj3TD5Sa3p0pVXaKOerXjSV5Mxls
2f7oNMm0V5l4UmvQ9L8APKAWQ1t2nw3DD5kr16GU1JavQ8yWdwi/cVzwvU/Bkk4PyGuc1H4ayysT
5Zr6jHwyRhynH0o/4VRFJ/yyH5V3LKU95HRS4jrQ2gz5Ll+F8oOfLP5VXf4bSr/Afyr64k+D0TD/
AFX6VSufgxGekQ/KolkyfwyR1R4qqr4oM+UR8N5Cf9WfyqRfhVLL0jP5V9RxfBdA/Mf6Vq6f8GYh
jdEPypQyW795ocuKqsvggz5KHwcmccRn8qQ/BmZesbflX2VD8HoNo/dLx7U24+EUHaJfyroWSUX9
oxlxJjd/Znxt/wAKam/55t+VQXXwamx/qj+VfZDfCWAf8sh+VMl+EsDKcxD8qpZDRf2iVxRjF9hn
xLe/COaJj+6P5VRl+HEkR+aM8e1faWp/BqCQHEQ/KuY1n4KIoJSMflWNbh22tN3OyhxjOOlWLR8m
T+BWXIMf6VVl8FY/gr6I8RfCs2e7Ef6Vxmq+FvszsCuMfpXiYjL50HaSPpMHn8MUrxZ49deDSF+5
WXeeFGTO1f0r1650RecrWdd+GkkzwK4nRR7FLMX1PHrrQ3izlaoy2RQ8g16rqfhEMDha5rVvC5jy
Qtc8qVj0qONjPc4PUYMQt9K4HXEH9ovXqOuaaYY24rzXXY8ai+c1x1lY9vBT5rn1t8JF/wBBix0w
K9Jg+4Meleb/AAlBGnxfSvSbeMlRXXS+E/K8y/isc65yK57xPZiSFuO1dIYsDnNZet2++Js1vE5s
PPlkjxXxlYbJW4rkfJ2ynivSPHGnnc3FcJNbbbg5FKS1PtsHU5oF/QoPmGRXW6YgCiuc0WPaAa6O
yOFFbwVjHEu5fIyMVUnTDGran5ee1Vrg8mtUzijuQ0Dmo5HwadG24U0bNaFq3jyRWxpltyKyrI5N
b2mYGK1pq7OHEyaVjVtYdsdTEVHBICuDUmc16UdjxJXbHxvg1OjZ61UZttSQS/NxRKdieS5oW8e4
/WtK2j6e1UbI5PNaUH3TXLKVzOfuomVcCloorO5imFPjXNNVdxqZVx+NDYN2BVxSgZ6U+OIv1qxH
aEjpRvsZSmolXYaSr32M981HLalRyKVmiFVTKhXNIfl6ZqV4iOlMo5jRO4mD60hTNOopjIyuOTUc
6ZFWCM9ajkTAqkyouzMu6gyajih2mrtxHnpUATnmmdcZaAse6la3z1GaliSpMUyeaxXEW3oKRlz0
61YKg1HIlNOw1K5WdM9KjMfNWHGOab1q0zVSItgpyJzTtgpabY3IKKULuo2HNIm4lOQd6UIKWk9i
eYcnWpVGBUaDIFSgelQZyCg89acI/WlKZ6UEcyIHjpFGBUxTFNKA00y1IaF3U8DHSilA3Gne4mwV
c9anjX1psa4qaJcke9TJmM5E8C4FW41wtQQr0qyBXNN3OGo7sAM08IKFGBS9agyCnBM9aVVx1paD
MAMCiiirugCjrRSjqKZPMKE9acBgUUU0xXuFKBk0lOXrwapEt2Bk9KY4yKlpjDk1SdmEWVnXmoyM
Hmp3HFRkZrrgdCY1Uz1pxQUqjPBp+3itU7CbISvr1pAMU+RKRl7itYyKUhtORN5oSMsa0tL0triQ
YFdEIubsiKtRQV2Jp2mtOwwK6PS/DZYDK1peG/CxYAsv6V1+m+G9ijC13JRpLzOBQqYp6bHLQ+HA
q5K/pUn9jbDwtdp/wj/y9P0qCTw+S33a2p1zV4DlWxzFtpO5h8tdP4b8N+ZIuVq3pvhos4ytdj4d
8PiLaSKzxGKsrI7cFl7lLVFnw34eWFFytdPbWojUYApljaiJBxVtRgV4tSbmz6+hRVKNkgC4paKK
zN7MaU9KTaafRQF2iMjHWipOtIUoHzDKKUoRSUDCmugcc06igGrmF4h0RbqFsqORXknxB8Ghg5CV
7pcRCRDXH+MtDE0THFdWHrODPBzXAqtBtI+ZtR0P7LeHK966XwfZ/dyK0/F3h3y7okL3pfDFmYpB
wa9FJK8l1PiZ8zmqcuh1WnWe6McVbax46VJpUOUFaa2W8dK5ZS1PapUOaJhNp+e1J/ZvtXQf2b7U
h07HalzlvCHOS6bnqKqXOk5HSuom0/Haq0ljjtTUzCeE7o5T+xP3vStbTtO8lRxWitgM9Ksx2e0d
P0pyncxp4RQdyqseBzSVaeDHaoWi5qLm7jYYq7jU0cWTRFFzVmGHnApNlwhcWCDNWTFhOafBDxTr
gbY+Km51xhZHMeKFAiIrirnS/tVweO9dr4gBkyKzrHTN75IreErI+fxdL21SxnaV4fCYO2taLTgg
4FaMNmIx0qaG13t0oc7nRSwqgrIq2eml2HFb2madsA4pdP07GCRWvbWu0VhOZ62GwttRIYdg4p7j
HSpfLx0qOQetY8x6NuVWKN33qi8uGq5e1nP945rVbHDVdmTK+6ormLeDkUsTc06Q7uBTM91YxNRs
A4PFc3q2nlCcCu0uYtwrH1ex3oeK2hI8vF4dSV0cRP8AI2DUM0YlQ9DV3WbYxOSBVCF8tg11KR4E
rp2MXWNIEgJArldV03ymPFejz2wlj5rmvEGm4BIFedjKF1zI9PAYtxkos4h49hOansJiuVJ4NPv7
fY5qC3yr89q83C1nQrRkj6ZS54n3T+yb4tHiv4TwxzPuntMB8nJ54P6qaT9pPwn/AMJJ8OrpolzL
bgyL+FeU/sKeNfsPiC50e6fC3SkoM9Seg/Mfqa+kvENguoadLBKAVljIIPuKWNf1TMVXh8MrS+/f
8bmuGl7fL3R60218r80f/JWl8mfCF1bjYd3UdKzLuEZwpBNdf4/8O/8ACL+Kb6ycbRDK2B7Z4rk7
1eSF7V7mIkm7o8uDvYz7nGAO45zXo/ws1YXNiImIyvArziRefm4rf+GuqCy1MJJuw5GKnB1bVVHu
GMjenfsevxQlhzjip/svyZ61HYSCRBtHbiryoG4YgV7ydj5qrJoy7iz3klhx2rB1DTGZ3+XtXXzw
EqcnHFZl5bAx/NW9lONjOnVfMcNf6YdmSMmub1K22HAA4r0HVLHEZ2Vymt2HUkcnjpXnYmhZXPcw
mMs1FnFXykA8flWXqCb1IFbuqW3lyHA9qxbs7ZDnvxXzuJ/lPqMPJTV0ZcYw3SrUTc1FKmHOOafG
cHivmsR7k2TUJqdZztBOrxnDIwYfUGmOcLRF15rBStJMxO/+K2NQ0K1u4x92bP4SoHH6h68+NehJ
jxF8ONn8YtiP+BQtn9Ub9K8+YZz7U60OWT+/7zrrvncZeQ3NL2pKKyMAr2D9hm4MP7S3h7H8aXK/
nbv/AIV5BjjNeq/sXTeR+0p4YY9C86/nbyChLmi15M68DLkr05dpL80foP5xMa9Qcdar+IPEVr4Z
0W5vtYk2WtogkkfBbjPQAc5OcCqV/rYtbORypYRxM4AON20Z/pXzZ8Tv2lb3xh4xXRbErZWCQwzN
EuC7SEFirN0wMjA7EZrhw+F9rUjGWiP0LE5sqVOUqertb52/pmx4l+KkfjH9oXwyliVa0sHnjV2X
95I0qgF89QDgDH0J5IA+NrnEczKnZiK+g/Cd6q/GDw47jO64jCnpgnA59eM14Fr8Zh1y7ST5Skzr
j0+Y19LmmHhh3GENkfm9StKt70ndtlVvmPzdqRzgUjtupucda8rqQtypex5Q9K43xVZ5Vu9drcHK
nNc14kiDIxrqpanp4KfLJHmWp2iLKxm45pdG0htY1GO20iNpLi4kWGBBwXdiAoHvuYYq1rtoXmbP
Fd3+yR4cW4+MNpq1/ALjT/C0T61OnXzGjGIYx6s8zRAD1r2sDS5qkfdv5H2dOuo0W5O1kfSnjzw8
PDnwal8J+GSJbrX7+y8G6eiLzLb6fiW8ljPcPdyPG3uBmve7250L9jD4DGa7jtBrc1qI1jHzC4nC
YCjp+6Qnnpxnu3Plng/Rbm0/aV8J6KsEuoP4C0wRXgQCSN9RnDXV3ID6l5I1yf4tteI/ts/GPVvG
fxBmTxOwhnt8xm0SQOlqoJHlAjg4OcnuSfQV7cMseZzp4acrUbe1nZ6yu+WCt2aim/XvY+cnm0aW
JnUhG+I1pwbV1DTmqSv1kuZRj216XPKfGznXNZu70Ror3UrTMEXaoZmJOF7DJ6dqxYLaVV+dDx7V
0Wl/v7KIH5srWtYaTFcAKwwe/NfosaMalmj5/wCt/Vo8jWxl+GrWQMp29fau98N6esuN6c5qLQvC
6bV2jOema7DR/DX2fa2DjvXX+7oRt1Pnsdjo1G7G14YiS1gCNEM9c1vzMJLbCgZPSpvCOhC42Bxx
nqRXoM3wplTT/tEADkKDsC818xjMwpUai53qz47EYlTqPki21qee6D4UN9ITNkueRzW5e+BooLI/
acq+Dg+9dP4W8LM8yzRjMfTPUUz4l3LabbrG8DqzA7W4GfpivOnmM61dU4M8uWLr16icbqNzx6/0
yP7UQwwVPWrOm6cI2yCGHTmrl5p+9AzEs7c4qfSLMpERKOa+hlW9zRnvzxD9nuQzQADBFV3hAHI5
/nWrMAMl+TWfdsACRWUJNmNKo56HI+N7rbkA/dGK4l1+QnHJ5zXTeMrrzJhGOSa5m6f58L24rz80
n+8UeyPucsp8lFIhtbXzZs+hq5qZK2ip3Y/yqTSbX5Sx71FrJxPj+4ueveow8fY0HJ7s7+fnqJdj
GvWO4D1FZ75Ykmr142ZWJPSqLDH418Pmtb2lX7z1KStEbWdq8W9TWjVa+j3qa8k6aTszjNQ03zZj
xTrHw2HILLW//Z2+TJFXrSxCDgYptWPQliXFWRnad4eSLHy1rwWKxDpUyoEHFLSOCdWU2IEC9BS0
UhfFBItFNMlIXOaAHkA9ailtlk7VKDkUUBsZV/oaTqcqM1yfiLwUkoOEFegkZ61VvLJZVORmk43O
mjiZUnozwnxH4FVGJCYrlbzwr5Tkba958ReH1kUlRXD61oGxz8tYTopn0uEzByW55unh7Dfdq9Ze
H8MMiulbSdp5Wp4NOx2rNUkjtlim0UNK0oQkcV3HhMeUy57Vh29ptI4rb0ZvLcVvBWPNxM+dHpGg
TZRea6C1b5RXIeH7r5RzXU2Mu5amrE+QxtNps0Qcikf7tNibIpz/AHa5jytmMpjHJNPPSo+tF7lh
SlsjmkooHYKQsKRzzTe9Ah65xzVi1tzIwwKjt4/NYYrqPC3h5ruVciujD0JVpcqOXFYiNCLk2S+G
fCzXjrlc16V4X8ChFUlKt+C/CCxohZa7zT9KW3jGBX1uGw0MLG3U+cjCpmMuaXwmRp/hdIEGVFaE
ejonRRWjsA6AU5I9x4rocm9T0qeEhDRIpJpij+Gp49LX0q4kQxwKdt55qeY6o0I9isNMQ9qeNDR/
4RVuJPSrkMXFLmZvChF9DLTw5HnJUVKuipGOFFaoGOlIy7hzRzM3WGguhltYqg6CoJbNG6itKePi
qki/pVKRnOCXQpSaeo7CoJLBfQVo1HKuelaRkzBwiZM+nKe1Z19okcqnKit+WOqc6YauinUbOWrR
i1scB4n8Gx3ETYQGvJvHXgMwl2jSvoi7gEoII61yfirw0l1Cx25rarRhio8szyvfwU/aUvuPlbWd
Ja0lOQRisxoxnDCvVfiD4PNu7lU45rzTUrM28xBHSvjMdg5YWdmfcZZj44ymmjPnsw4xisjVtCEy
HArd69aSSISg8V5zVz2YVHB6Hk/jPw8VhcqteKeJbFk1eQYr6f8AF2kiW1fjtXgfjDSduuy8H8q8
7FQPq8nxPMnc+nvg54fefT4sKegr1O08JyNGPlNVPgF4bSXSoSV7CvaLLwxGIxhRX2OFyOLpqUmf
iebZ1OWJlGCPJpfCsiKcqRWJrehvGhyDXut14WjaM/KK5LxT4TXa21aK+TKEbwZyYbOJRmlUVj5w
8aaGXD/LXnuoaKY7g5FfRHinwf5hbCV554g8EmN2OyvDqYeUXqfoeW5pCUUrnA6fbGPHFbFrwtTz
aG1s5yDTUgKdalKx606inqidG+XrUE7ZzUg4FQXB4OKozitSszZanxNg0zvUkUZNCNnsW7N8NW1Y
z4AxWNbJ81aNsCoFWnY4a8UzahuM96mF1xzWYj461IJTjg10RrWPPlRTLxn3HrU9o+49azY3JPPe
tGxGWFS58xLgoo2rDtWpbHK1lWQyBitW1Hy0Hn1kWlXPWl2D3pY4yRUqwn0pcxxykkMRCKljTPUU
5Y8U+pbMpTJIE5rQgQVnwnBq5FJgCtKcjmq3kWvKFQXMIANSJN61HcSAg1vKSsYQTTM6dOeKhZPU
VYlOSc1EVz1rib1O+MrERT0puKlKUh96pSNFIjpsgp7DBpr/AHatO5ZWkGRUDJzxViT+tQscninc
3iwjHNSp3qNOlSp92qTHIaww1NYZFPk7U2qBMryDrULP1qeUcnFV5EyeaLm8dhVbPWndaYi5IqZV
x1quYb0E+71FOBzRRjFHMJ6hRR1pwU55obuQPQc/SpE+9TE61InWoZnMdRRRSbuZh1qOpDUdNMqI
U9BxTKkQdKYSJFHQVPCvOahQc1YhHFRJmE2WYRyKnXlqhh+9U6da55HFJ3Y6iilHX60jOTH5zRSA
44zS0EhRRShc9KAAKTS7CKdRT5mZhRRRVp3AB1qQdPWmLntT6qJMgprn5qdTGOWq0ESJxknNR1K/
3qjYYNdMHY2TsKnWnUxOtPrTmARlzSLGXPFSJGXNaWlaSbiQcda6KUHN2RnUqqmrsi0vR2uXXg13
XhbwjnaWWpfCvhUHaWWvQNE0NYVHy16StRVluZUKMsXLmlsQaJ4cEarha37TRwoHFW7KxCKOKvxQ
e1cs6jbPpKGFUFsZ/wDZYK9BSJooY9BWukANWYLT2rP2jR1rDxl0KGn6IFPStyyshGOBRBCB2q3G
uMCsZzbOyjRjDYfGuBTqKKzOlBRRRQMKKKKACiiigNwprr3p1FBNrEdFKy4pKCgxkGs3WrMTQsMV
qryvNV7uPenNOLszKrHnTR5R4v0IPK3y1i6bpPkS9K9E8SaYHJOK55NOCSdK9CFS8T5HE4JKrexJ
pVvtxmtu3gyBjrVGzi2GtS1PH1rGbO2hTSVhfso70htc1bjUbPrTigPbrWdzs9mmZstp6iq0ll6C
teSLrjpULwA9KakYzopmULLB6GpRZ5HQ1c8gg9KkS3yOabkZKiZU1l6Cq0lrzyK3pbXI4qpLa89K
akZ1KBmJBj2qeKLBqV7fB4FCLtPNVe5iocpIo2iob2TCVK0gUVnX9115qUrlVJqMTPvYfPkp9vZ7
B0p8I8xs1ZAx0rS9jhjBN8xXMXpVyxg3MKgAy1aOnRdKUmb043kaFlb7Vq4I+OaZbphRUtc7Z69O
NkMZcVHMOM1PUM/Cn60bjkrGddr1xVGSHJq/cnOarEYNao8+orsreXtpQMmnyjA+tQl+aowegssd
Z99DkHitBn3LzVe5XcKaZnVSaOO8QaduzxXOPD5UvSu71e2Doa5PU7bZKcCuqEr7nzeNpcsrorqN
wrN1qy8xDxWnDxSX0IaM5qprmXKcsXy2kjzjWrHy5DWWItr8iuq8R22GNc3Km1+K+bxK9nM+pwdZ
zgjqvhD4rfwb460+9hbAEiqecY57+2cV94wahHrGnW13bndHcxLJ+Y5/Xivzstpfu54K9DX2L+yj
8Rx40+H4s72XfdWP3snkgnn+h/GtMXH61hFUW8Pyf+T/ADOrB1PYYnlfw1Fb/t5ar71detkee/td
eDzpmv2+qwriK5Xy5COgbtXh1zGPN5xxycdCa+z/AI2+CB468EXdttHmopeM45BFfG15aNZ3Ekd4
u2SP5SPfPNdmCre3orXVaEVqfsptGbcuHkOwHGMVFps5sL6ORdwAIzj61LcoQ57Z54qrKdp6cDpU
ynKE+bsXZTjynu3hC/W+0qF0bdxgmt6IYBPqO9cV8I5WufDUZJyVbFdwqYj9vavp6U1OKZ8pjIOm
+USTlMt6Vl3oLYC5FaU2dnGcCs+4AIYntzXdTdtTzafNzWZlaipCYHc965/VoA4OBwBW/dnYxzwD
0zxWVeoHDZ78VnW989Gi+Vo4fW7HGSFrktTj2PnoAc13+twfKcdK4rXIdpOMivl8bCzufW5diOhk
3sqyAGMfWmRHmmTyAscdqIWzivlcY/ePRnrqTyHikXg5oJLUdOD3riepznb/AA0vRJpc8E2NscyO
c/3XBjb+YrjtQszY3ksMn3onZD9QSK2vh3cY1p7cnAvIHiBP97G5f1UVD47iH/CQSTIMLcqswH+8
Bn9c101Y88IzXobJ3gvIxKKU0lcciQzXo37KN49r8fvDckfmHZO5OxckDynz+GM59s15zXQfCzxA
vhf4h6Pfyx+altdIzpvKb1zgjI6cE1thkpVEnsHM4arc+3vih8SX8JeAJb2VY5pLub7JEm8jaHO0
/iOT+FfIP9oG7+LM00Q+9LkDOcADpXsXxO8Q3vir4QSXt6VIttevbdFXGEjX7o46kZHNeEeGLtrn
xoJFyGYsQO/3TXpVsEsLKL63t+J3YXGzxC5Jb3X5HdeHdZf/AIWZ4bdyAou4mGOwzjj8q8p8Yrs8
Vamp5K3coz6/O1emR2/2HxV4dlkJVwYnxnv5mP615x45i2+MdWHcXsw/8iNV5vLmmn/XQ4uRwSuY
9Mc81IeKiPNePa+g4kUp3DmsLxBHmJq3H5rH1w5jOa7cOluzuw2kkec+IifMYKcH+dfS/wCwh4Tt
vC/hePXvEaubJ7q48RXxXk/YNLjJUf8AAruaPjv5Xsa+cNU0+W9v0gsY2knmcJGijJdicAD3ya+o
viw0HwZ/Zd1DTrN4zPrc1t4PsSOC9tZEz386H0e6keMj/ZWvfwNJzi7/AGrR+/e3ory+R9Mqloxj
836Lo/V2XzPTv2VvjRp/gXwDr3iTxxL5mta8HvnCjDGWSRn2g/7TyNj0ERNfEXxV1ca141vpYbhr
hWmIV2OS2OpJ+pNet+IfildeH/2drXRoJIVC3P2oFVy8sjIEG4/7CDGP9rJzXgJWVr7zWO7LZNfb
VsHDLJV5RXvVZJekY6RtpofOZPUq4mN6krxpuajpbWUuaTb662SfZHY6BctEqr6DGK7Tw5Ym7KlQ
frXD6JclJwSM57dq9R8ExrPEpkQhT1xX1GEa5LrZHjZv+7TkkdV4b8Pkoh4ya63TrQw7UZC34Zqb
wN4PbW1RLE5JBPPTArooPC1xpOomGZAzKQMDr0zXi4vHRc3FvVdD86xuJbvJ7Xt8x+huLSSMhMYI
Yj1r23wRcHXdLRzFtjIxn1rk/Afw9t9UET6huLnDbcYFev8AgzweIIhFCpWPH4Cvz3iDMqLVl8SP
e4RyHFZhiVUUfdehgWng2Iki3Tauc8DFYnxA8MRS2e26jEix84xmvZ7HwxBaR4ILE1zfjHwuI52K
/MjjPNfMYXN26yd9j7/POAHh8vbhFKT3t07Hy/4q8KJBPvtgVz2rObSituMA7sV7B8RPBsKQ74w6
v147+2K891OwawDHaR2xX6Rl+ZfWacbM/DcTCvltX6rXfvI5O6jMakMPzFYuun7NZSOTjj0rpdSL
PnIFef8AjjV22SRxH5fujnrX0OGd/efTU9nLISxM0jjdXvzcXMrnoOBWUMu4HcnNWr35SM/jSWFt
5twODjOfpXiVHLEVfVn6JT5acNDSs4xFbAkdKydTfezse5/MVq6hP9ntlVercYrC1OUEYU9q6cyr
qhS5V0ROFTlLm7mZdPkH1qq5qe4bd0qFhkV+cVantJXPbjsMpsi7qeUIFJ1rMtOzIkgA5xUoGOlO
CetIwwaHqNybEooooKA+1MbOeafSNntzTQDOtKFJp+MUUXFcAMCijBNGD6Ug5goIzRRQF0U7+zEq
niuU17RNxJArtmXcMGs7VLESIeKDqw9ZwZ5vc6b5bnIxUYtADXR6rp+1zxWa1vzScT2YVeZFFYcV
asvlalMPpSxptNFrDbujpNCvNuOa6/SrzeBzXn+mz+Ww56V0+jX+Mc0SjzI8jGUeY7K3lyBU2dw4
rNsLsOo5q+j55rhmuVnztSHKwqMjBqSmvWaZI2iiirLiNfrSIu5qV+tS2cJkemldkzdtTU0DTTcz
KAM5NeteAvCwCoWWuP8AAWiefKhK17T4T0oQQLx0FfVZZh1Sp+0e7PlcXN4yv7NbLc1dH01baIcD
ir0jhRikLCNABUEswZsV6GrPUilSikidTvqzDFVa0GcVfQYWk2dFKPNqMI2ihPnPFPcZFLHHk4qT
a2tiW3jzVoDAqOBMD6VLQdEFZBRRQelBZFMOeaqzxdattlhUUi5U5ppmU1cokYNQu/51ZmjqBk9a
1icslYhfkGql0npV1hg1DNHkGtIuzMpxuZE/DVTvYBKhzWjdx9aqOuRxXZCVzz6kOjPPPHvhtbmF
yF7V4X420E2lw/HevqLXtOFxA3HUV418TvDYUuwX1rmzLDLE0uZboyy/EPA4hR6M8VkTY5BpFbB5
q7q9n5E7D3qkFycV8RJcrsfoVOXPFMzfEMYe1fPpXhfjS2B1+XivdteH+iv9K8P8af8AIwS1wYrU
+gyh2bPtv9nyQf2VD/uiva7GQFBXh37PhzpUP+6K9qsW/djPpX6XRd6ED8Jxb5cZU9S5cOAhrmtd
2yAiti9udqHmuc1S48yQgHrTeiZx1pc0kkYV/oi3ZPFc1r/gkSoxCV6BZ23mH5h1qzLoi3EZytck
8DGqrs7MPmFSg/dPnjxJ4MMLNha5K/0Ywsflr6M8U+ChKjFVrzPxP4RMMjfLXz2MwUqD2PtsrztV
1yt6nmT2hXsarTWhPaututBKv0qAeHy5+71rzkmz6NYuK1OVFgSen61NHp7emK6uHwuT/DVqHwoe
6mtFTl2JlmEF1OVtdOYngVp22lsR0zXS2nhT5hla29O8H71Hy1vTw05vY8/EZpCPU4hdJc9qcukv
6GvRo/A+4cr+lSDwRgfcroWXVOx57zqn3POotJcEYB/KtCysGTqK7N/B+z+Gmp4ZKHhamWDnDoH9
qQmtzEtLUjFa9jZlsAA1ftfD5yOK3dI8NFiMrThhZzdrHFicwhFXuY9vpbEcCpv7OYdjXYQ+G8Jy
tNm0EA9K6/7NkkeK80Umcj/ZzelNaxK9q6ptIC9v0qGbSQRwKylgGkUsemcwISpqWLI4Na1xpHJ4
qEaeUPArleGlFnQsTGSKmCtRTvgVbuYti8Cs+5bDGsqnu6GtP3tSF2yaSiiubmOoKRkBpaeq8dKp
BexA654qJ+hqzLHxkVXl4zWiNabuVLhto5quHOeakum5+lV1PzVodkVoWY+lSK2BzUUR4xT6aE9R
WbcaSiiqAilGTUezJqw4yKYBjpSv2NFKyGLHzwKesPrTlHepFXPWjmJlMj8sUnkipto9KNo9KTmR
zkQjApdo9KlwKCM9aXMHORgelORcdadjFFF+hLdwJxR1oooEIxwKZTnOabVotBUlRjrUnehikTR9
KsQ9BUCdKnibAFZyZzT2LMJ55qZTg1XQ4P1qVG7GsGcskTUU1W7GnVN7GbVxytzyadUeaerZ780y
B69eD+lOpinnk0+i5DCiignPWmIKKKKadgHr0paYGxSl+KslocTjrUfWlJJ60hOKtO40rDGOWpDz
1oJyaK3izUQLipET160wdatWkJkkFbQVyJysizptiZ3HHWuy8NaDll3Cs7w5pW4gkV3fh/ThGqnF
ezRh7KN+p50U8VU8ka+gaUI0UYrp7C12gDFUNKtsKK27WPArGpK59XhKKikTwRZqyiU2FPlqzFFk
1zt2PVjEWGHPWrMaYFNjSpUGTWbZtFWJIl5xVhPvVBF96p0+9UGy2H0UUUGiCiiigAooooAKKKKA
CiiigApCmTS0UEvQAMCopxwalqOc8H6UCMLW4NwNc9PBtc10+rfd5rnr3hzXRTdzyMVFc1yGPgcV
btpMVTV8Hipomwa0krnPFmnDNxz0qZTWfHJjpViOfHesrHRGZYbrxTXjDCkWYHrTg4PekXdMiMfN
SRpk0pIPWnRsBSvcmwPFx8tV5YQatbx61DK4zmhMJJFGeLFU55AlXLuXg1ialdEE4NaxVzz68lAW
7v8Aap5rJuL7e/WmXV2fWs57nMvWtoxPGr12ze0991WnbatZ2lS5UVekbcKlrU6KUrxFgO5+a2NO
XOKyLVPnFbemr0qJnXhldmlCvFSbR6UkQ+WnVgexGOgxxg1VunwP1qzM1ULp8mmjGrKyK0zZqBvv
GpJDyaibkGtUcEn1IJ5M1FT5EOaaEJqjnd7iVFcdRVry8Cq9wvH0oJmtDMvlyhrl9aiw5rrLxeDX
L63981vDc8bHLQyUXB4qS5XMdJGRvqWZf3dbXPIS0Zx/iWPrxXJ3Yw5rsvEqctXI3qZc189mC989
3LZe4ivHJs78/WvS/wBmP4lN4E+ItusjYtrwiFwT6/5/lXl8ibTmpbW4a2nSSI7XQhlPcEcissFX
VOVp/C9H6Pf/ADPTq0vaRtF2fR9mtU/vP0VuGWWEGMhkcAgjkEHkGvlr9pz4YSeGfE7ajpsebS+O
Tj+B885r2r9nH4iJ8RvhratI+67sVEU2SM+x+nUVtfELwja+OPDdxY6nGHV14OOVPYilQk8BXlSn
qv6s/wCuh0VJ/WqUay37dmt18nc+Hrm2YH5we4zVPyy8oUH7xxXc+N/hje+FtantzllVvlJ4yK5K
+t3026Tz1yQ2c9K9OrDqzCnLoj1/4VaX9i8PRhurHNdhtEeNvAxWN8P7iK/8P27RdowMY71uSxBR
x6fjXu02opRPnsW/aSdyrcDCnbjBNZV422NuwrUm549qx9RciNwOc16EJWR58VaRk6hPhiG7VQmk
BTvTtTnKSHPpVB7zKnOMVi6quegqXup2M/Votwz1wa4nxPiNmCDk12mq3ghhdmIwv61weuzm6lZn
6mvn80qKCdtz2MBeJz07Yc/WnQvz9abdjD0yNtrCvkai5tz6D4kXkPIqTr1qCJ81ODkVyyRzSVmW
NJvW03U4J4zkwSK4GfQ5rc+IduBcI0fKxsyKfVTh1/R8fhXN9663WU/tTwraTHljbgN/vRnb/wCg
kflXbh4utSlHsOLtoceRSVLJDtGaixXFUpyg/eGncKmsTtvIiezqT+dRAE9KvWGi3E9yi+WwyN+S
CBgd6KcvZyTbLjTlV0irn0TrxP8AwojVI5MkReKZwfUB7eJ8n6k1458N7MXfxK0+AL8skjDHXjBz
/KvYvC2rtq9nq/hu8DNFr0EV1ay7NxtbxII1VyR0V1LRscHt0ya851P4f694A8SRajqsGmia0k8q
dYLpJWhdlOBIiHKkjv0r6bMqcsVDlpr3pNtfO35O6+RGDqLCYm83pFRv5W0/FK/z8jpPiLaR2/j3
SY7XCLFcRRj2+da8s+Ltp9g+KPiKJei6jPgY9XJ/rXofi3Vk1S7s9RBLFbiNpCVGFYAA4/KuR/aR
s/7N+OHiaIAqBes35qrf1ryMfGVGUKU/iS/Kx6eL5K8ZV6fwuWnpb/gHBvn86Yx+Xinyvk96iPv9
a5YK7OGKI3bbnOKxNcbKNjmte6fANYOsS7lYe1ejQjdaHdhleSNT4AaAdQ+Jh1d7c3UXhe2fVREE
3edOpCW0YA5JaeSIY781337VHh2/8UfFjQPAmgSGSy8A6ZFYXN0zboTfzDzrqVm/vMzKOmSVPrXV
/sd+EbLwz4Zi13xIpNukk/im9Hc2enAiFR7vcybsdD5NemeGPBtn4P8AgBc+OPH4jl1zXryXU33q
M3M0wdUVh/d3SPJxjCovYV9ThKscK6UpK+qsl1lK6j9yUr/4l6nTjMTXjRrPDpc1nvsowtzPz1aS
S3at5Hwr8RTfaT5FpqdxHKgLFVU88fxEds1y9tcGOYAkcn/Guv8AjH4jt/EHix1tcbLXMYOPvHPJ
rlzp0c7IYSB0+X1r6HO6sqmKbi9rflqvvOrLZt4WMqqs2rs7fwLH9sCFxuAOK9l8GaOjRqoUkYry
T4Z6S8EaMGyCfWvdPBcO23TdjnjgV9DQlKng4t7s+D4krKM2oPQ7TwTPNoUqtbOyFeh/pXeeC4Ln
V9aWaYeaC252xmuH02IO6hO9eufC6MSWarbkbV9cda+Pzmr7OEp21eh8HhqP17Fwpyejd7HoXhnS
l3x7l2ngZxXo2l6eun2wVeWPJNefW12bSJdxAPsa7vRtahv7KM71V9oBUmvyjM+eevQ/pfg2OFoc
1PRTSVv1NPrWV4ouVjtdpGTV+S6WKEtuBwPWuU8Tamblm54rgwlF1Jpn0PEGYQwuFlG+rPPfH1zJ
Ij4H3fu5HFeY66zOWDZyT3NeneOJ0+yOpI3Hj3rzTxEqrz3Jr9Myb3YpWP5A4lnzZm9bs5DxLerZ
WEkkhAyMD615J4nvhJMy5ztJyfWu3+JmsB38tDwoPTua811KV5Zjk8sa+yqS9hh0usj6rh7CckFU
l1KEp83n1q/pcAWIyHI+tVUtiZiMHOau3x+x2YjU8kYrjwcWm6kj6iq7pRiULy5M8rM33QePasi8
k3P24q/dsUjIzms2T5m57183n2MdvZp6s7qEUitIu4VEyY6VZZMdKilIXk18qnc7oyuRHjrSRrn8
ajlnAbk5p8D5NadDWztclYfLUTjPSpqjPU0osRGBnpSlSKcBjpS1QEdLsJqQLnpTguKTdh3GLF60
7y/enUVN2Te43y/WgoB1p1I/3aLsLjdgbpRsI7UKcNT6OYZEY8HmormHehzU7/epGTKcimmNOzOY
1i05NYdxbYbius1eHrWBeQ/NV3uj1cPUujLeKmeXg96uvH61E0fNI61IS3yprV0262EZNZka81Yg
faaaM6i5kdfpWpcAGt21uw6jJrhrC9KEYNb2n6pkDJrKpDmPHxOGvqjpFkzSs2aoW17uAwasLcAj
qK5HCx5cqTiyWimeb9KY0/uKVmJRY9vvVo6ND5ky59ayvOz3rb8NL5lwv1rajBuaOfFXhBs9W+HO
nDahxXqukp5VuMeleffD2DbChx2r0O1+WEYr7WMeWEYnzGX+9KU/MfPLUKfM/NE74PNNhky4pnoO
V2adknFXap2R+Wrmc1DPRpaIKlgTPPc1FViAZApG0Fdk6rgUtGaKDp6BRketFMf71BLdgc81ETu6
09uhplBLIZ0qtIuT9atzHGaqStitEc9Qgcd6jkGRUjmo5DxWhiyleLVCQYc1oXRyaoXFdVNnHVRV
uU3xENXnfxI00SW8hI7V6LIfkNcb49iDWr49K6YrmTTPLxeiUl0Z84+LrbyrpuO9YGQG+tdV48j2
Xb/WuTbljXwWMjy1Wj7/AC+fPRiyhrjYtX+leGeNH/4n8v8An1r3LXv+PV/pXhfjM516XP8AnrXk
Yp6I+rydXbPt39nyH/iUw/7or2SJtkQ+leSfs+rjRoc/3RXqlxceXD17V+nUo2owXkfguNn/ALTU
l5lXV7zapGaxN/nT89zUmqXpkfANR2Cbnyazk+aSijlitOZmtp0PQnvWvbwgjFZtkMYrUtjWsjah
FDL3SVuYiMc1wnjPwiNrFUr02Eb1GeazvEGlLPA3HasKtONaPJI6rSoNVIHz7qnh/wAucgjv6Uy2
0IN1Wu38UaJ5M7ELWTb2wVuleFHCKnNxZ7sMe6lNNMoW3h5cfdFWo/D4AHy1sWkAIrQhsgw5FelD
BxZwVcdJPVmDbaCA33a3tJ0RRjIq1Dp/IOK0bOEIRxXbQwsYO9jzq+MlUVriQ6KmB8opX0ZMcKK0
ISCOKmEO6uvTsc6i31MCXQ1boKgfQQDwK6c2mR0qKW0A7VhUhCXQ0TqQ2ZhWuiDdyK2tP0xYgMCp
ILYBqvRxhB71ioRhsK8qnxDRAAOgqCe1DcgVaDZNPaMMKY3BMxpbPPaq722M5FbM0PXjmqVxFzSc
UzCScNjMltA3QVVuNP46VrmHPaop4wFrnnRTKhXa0Ob1C12g5rBvlwa6bWWCg4rmr9ssa+exqUWf
Q4GTkrsrUUUV5nMetYKljOTxUVKrbauLM5Ikl71RuDgVbd+OKp3PU1ondmlJalC5OWNQp96p51y5
xURG3mtTvRKj7RQ02TxVZ5/fFIk4zTKUb6l1W3DNOYAdKrxze9SiTPWi5m1Zgy5bijZ606nIuOTQ
IQLmngYFFG4etTfUT1QUqDJ5pM0qNjrUkC7KPL9adRQAwrikp7dKaetACU2RsCnVFM2TVplRV2Na
XBoWXJ5qtJJ81OifPSqUjbl0LVSdahjORUiHtQ3cykiynSpVODUERyKmVs9azkc80To2RUqtn61V
Q4NTo3es2rHPJWJ1bcKeH9ahDdxTwcis2YtWJQc9KKjBwakBz0ovYlq48PnrTg2KipQ2KZDRLv5p
d4qMNmloTFYeX44pPMptFUHKPDZpajpdx9apeRLVh9Md6UvleaiZsmtY6DSH0UxWx1p9aJ3KFQZa
trQrLzZBxmsi2XdKK6/wrY7ipIr0cFDnldnDjJuMbLqdL4f07aq8V1ulW4XHFZOkWm1BkV0Gmx8i
vSqSOnA0uRI29Ni4FasCdKpacnArSt0y1ccndn09COhZhTNWkXH41Dbrk1ZQd6xbO+KHItSUiDAp
4T1qGapCxjB5qZT81RqMmn0FokooByKKRSCiiigYUUUUAFFFFABRRRQAUUUUAwqGd8KfepWOBVS8
l2g0LUzbsrmZqsuQawr05atPUZtzHmsq55JNdMNDyMRLmZWU4NTxN0qAjBp8bevetWcy0LkZ6VID
jpVaOT1qUNkcGsmjREwkIpwmqJW3UtI0TJvP9T+tJ9o+tRUjNigTkyY3dMkudwqs7YPWmNLTUSHJ
hdPmsbUR61pT3IA5NY+q3ihTk1rFHBiZK2pjahPtzzWW11+961Lqt6CTzWRLdnfwa6ox0PmsRV10
Ou0W63KBmtiNty1yOgXmWGTXUQSZQGsZKzPRwlTniXLZvnrb09skVzsM2G54rY026HHNYTR6mHnZ
m9EflFK7d6rw3OV4pJbj3rGx63tFYJ5P1qjO24mpJps9OtVpZKpI5Kk7jJDg81FSu2400uBVo5mw
ZA3Wk8v0pPO5pRLkU9SBrjAOaq3B4qeaTiqk8tMyqSRR1BtqNXJ63PlzXR6xc7IzXHatc75TzXRT
R4GYVOiEt8s1WLg4iNVbOX1p+o3ISE89q1Z5sX7pzPiWXk1y118zVteIbzc5GawJpdzV85jJqU2e
/gabjBEUq/LUIbkinzy8YFQFsHjtXA5JS0PWpp2PWf2U/imfAnj1LS9kC2WpERSZPAPr/n0r7CnA
kXMeCCMgjvX5021y9vOJIiVdSCD6V9qfs2fE9fiT8PYPtT7r6xAimB6kdjXXXSxFGNRfFDR/4ej+
W33Dpv2VRwfwz/8ASkv1X5eZpeO/A1t4jt2aeJGcd8c14V8Zvg+1npb3Wmrgxnccema+m7qPcCD3
rmvEujJqFlLFKoZHUgqe9b4TFNpU56o4qreHmfOfwU8YiNmsb5iHThcn+lepyncm5TkGvE/ib4Un
+HPjcT2ylYi24MK9R8EeI08Q6LHIkitwM89K9/D1HONnuvyOTGUbPnS0ZZuAU3E5/wAaw9clKqSA
ORW7qPP4jtXOa0xUEc9K73UtE4oUVJuxzuoSEjPOQKx5bwr7etaeouQrDnmsK9baWPPTivPqVeV3
PWpULxsZPibWSdsK+mWrnbuTcD703UdSN3eyPnqePpUEs+Vr5fFYl15u5306Hs7WKF4cNVdX9alu
n3Marlsda4XqepTXuluGX1qzG+elZ8b1Yhk45rnnEzqQLiHc+a7Hw0RqPhaaFs5gmzx2WRSD+oFc
XHJzXVeAZDJdz25ODdwOi/7w+Zf1Fejla5nKNjkqe7qYVxCYiVYEEEgj3qtKvJ21seJbbytWkK42
S4kX8QKyXTDd+tLHQtG9iob2NXwf4bOu3o8w7Yw2Mkfe9q7TSVhbT9TjV086yY+WxAOBj+VYOiyD
RtMmaR0WS2XcBnBLGuebXp1llMTspmOXwetfLSpTxdR2dkmj6ijWpZbSimrtp3Pon4Z+IDNcW8+6
JZhABEEGDKxU/IAOTwCcHjjPai48C6do3iHVbjxDfL5d1ps1xp58jct27uWjWUDKx5YP94/wE8U3
wFqqeD/h9q2oadb28mqM1hbxTsgMsUUkUkjrGx+6WKBSRg4+leT6Pfi/8V+Xqy+ZHdXO3ncPJJYA
yDacb+3Q9a+7xlFYFqtHaNtf+3U3+f8AWh4eErzx37iX2lZr/t5rW1uiv8ze8W2semeGIYY5Y5Zp
5A7FOUAz6nnOazv2uoW/4Xrrd02Cl00MmcdcwRmum+JmiwWNwjOyBklHkwRrgRRgZCsfXHcVF8Xv
DqeL/FN5Jen/AFVrHtbOCW2LtP5CvIzyvBuhi1ezTT872a/I9bBZdU9nWwj3i01/26n/AJnhrNn7
3eopsICRUt1E1vIVlBVhwQR0qpczZUg1MFdWR5UYu9irfz4Q44rClil1O8it7BGlnncRxooyWYnA
AHqTir2o3fXmuw/Zj8NnVfiZ/as0Bnh8N27akIyCRLOpC28fuWmePA74Nejgacqk4xtc74tYem6k
uh9Caj4Uj0z4ZR+GdIYNL4i1O08LW+BgvaWCiS4kUDkbrpmRuuQRWx+3xocvg74daLa6bMYtL0+K
Ro4wMAyCMKD0wNqggc/xmp/A0yQ/tb6N4aaX7TB8P9Hjs5JNxKS38/725lGe7M6Z91rE/wCCr/jp
NJ8HaRpXnMrTJLKUHcsVVWP0Ak/M17eDrzecYOC1i+ao79rNJ2/wRj82zolgIVMtxSlJ+0jKlTS8
+ZTn6qTk7+UUfnrc3Znnd5slnJLe5JzUtrLiQFeMeoqg04EnBHtWlocX2i6VZyOT25rqlXliK9lu
3f7z2JU4xp8z7Hpfw2mk+xR7+/PFetaBqjQWwMRIIryjw7tsI4xDxjFeh6Fdme1HOfxr9Ip0rYeE
X0Py7N4qtNytpc9D0TxD5aCS4bjGfrXcfD/4hHTpvNtyzx9Cuf8APvXjsM0jBEJOOwrvfBgjsUXz
xndzgHFeFmeCpypvmV7nx+Mw6wzVaDtJbHvOl+Lv7ZRWbKbsYz3zXTWXiHyAFViSOOK8z0HVLaDT
VdHJIIAGfatuz1MK/mPJnAwOe5/wr83xOBi20loe9gc7xGGipyldvqekxeKhJCQHyR71geIPEh58
o5rkLrxDJZ3QFuco3fP0/wAaNT11FjLs3I64Nc9HLFTknbcvNuL62KoOF7NFTXb2TULt/MYgZ4rh
/GOuLaQvluvyA++K6fXdXS4sTJF8u75R7+px/nrXlfjTVhfXexM7YsgEHvX2OU4T2kkmtEfn2X4e
WLxUqk3dXvc4rxZcNPPI5bKjrzXKzoZJSRnJNa2ryM1xINxKsc4qtDAsi7VQhs9a9TGN1p2XQ/U8
IlQpoj0m0JctJ/D1zVbU5BPeM/8ACOOtat5ItnZbYxh34ArCuX5Iz0FY4qUaFNQv5s6qF6snMoXz
7mwc1VZfmzipZpNz5NQyyAL1r83xtd4mq5HrQTSsiKU7Aazb+9CZ5qXUb3YhANc5qmolicGsYxPS
w1By3Lf2/fJwa0rCTcoNcxaXBaXk10elvlBVvY6a8FFGhTGGGp4ORSMu6pTscYyiinIAarmAcOlA
GelFPTpUEyYwjHWgHPWnlcmkMdAk7DaRhkUpGDzRQIaqc806iigbdxCuTzQ33aWkc4U0AtTL1QZz
msK7XLGtzVG65rEuu/1rVHp4fYpSJ1qFlx1q2y7qiePFI7EyEDHSnoMdaULzwKcE9aY27j4ZStX7
S8KHg1nhfQVLHkEU9zOaTOistS6ZNaMF9uHWuXgmKn2q/b3hGMmplC5w1aCex0C3GepoM3oay47/
AI5NSLfA9TWXJY5HRt0NKN8nium8HjNwufWuOgu+RzXTeFL0LcJz3rWgrVEebmNN+zdj3zwCAIU+
ldxFIFiHNeceANRDwJz2rukut0PFfXPVJnyGAlyRa6i3l1tbg0y0uN8nNUruUlqfp7/OM+tOxr7V
uZ01g2UzV8dBWdpx+StBDkViz26TvEWrMHUVW61YgbpSOmmWKKAciig6Apj/AHqV+lNPSgW7sMLk
0lFFBBFP0NU5vvc1bmb5aqzDJNaxMKiIG+9TH6049abIeaswkUrnp+NUZ+TV669qozda6aZyVStJ
0rkPHRxbv9K6+Xhee1cT8QLkJavk9q64Hl4z4bHgfj/m7k+tcg33q6rxxN5l0+PWuWxl+a+Dx0r1
Wfe5YrUImfry/wChv64rwvxr/wAh+X6f417r4g/483+leE+NT/xP5cn/ADk14mK1R9dk+7Ptz4D6
gseiwjP8Ir0a/wBSzHhTXh3wR10jSoQD2FerWtwblATzX6Hh8Z7WlGKPw3M8G6eJm3tclyZZMnvW
jYxbQOKq20HIJrRt0wtdlGFtWeZUleyRct+AK0LVskVQhXjmr9oMYq5G9I0bY1Ndw+ZCc+lQ21XM
bo/m9Kxe56EFzRsefeMtNyWIFca8HlyfSvS/F1sGjY4rz++j2zHNcuIh7ykZYWTg5QFsV9a2bGPd
1rGtGxW3prZ/GuvDGGKfUvRW/HSlxsNTJ90Ypkq5Ndtzha0uPgl5rQgbP41mRDYcmrcMu1qykbUp
23NEL6VHNHyaIbjileQMetYNnVdNDIU+b6VOV+XNMi56VMV+WoYRWhDt+apVbIppUg0n1oeoWsLK
u4VWmi3DOKmaWopJgAaDOdnuVJk8sZFZmoXwjzzVvUrwKhwa5XWNSO87TXJiq6pRFhaHtZDNVu/M
zg1i3YyastcGQndUdwuRmvmsRJ1Xc+jw8PZaFI57Uiv/AHqc/GcUzOfvVwPQ707jgwPSlJx1qMHF
Iz04jHFs1XnOSakL8c1DM+ATW0S4LUqzHDE1UnmwOvFPvLgAnms65uvet1sehTg2OmuMnk1H9r29
6qT3XPXmq0t0T0pNnXGma0eoZPWrtreb+9c0lyd3Jq/Z3mOp5pcxNSkdHG+alDZ6VlWt9kDmrsVy
G6mk2cUoNEznLUlGc0UrogVVzTl44NNDYo3EnNJu4nqTB89aGbbUfmD3oDA96G7k2FzzR1pNwz1p
C/pQgsKxwKgkOQalZt1RHg1oaR0IHjzQi4NTFc0gTBpou45DjGalQ81FT4jzTIkrliNsVKj5NQoe
akTvWTZhImp6OajX7tKDg1LdzBq5YjkqQN3FVwe4p6SY61DXUycSyDnpTlbHWoVbPQ08PUmbViWi
mB6eDmgncKerZ60yjOKCGrElFN8ykLZ61SEPJx1ppk9KjaTPSo2f0rWJajcm3+9HWq+/nk0ok/Gt
SuQnpyGohN604PmqRLiXdPXdMK77whB8inFcHpPMwr0XwiAEWvawCtFs8vE61Yo6/T4cIK2NOj+Y
Vm2AyorX08YYVtJns4eOxt6eOBWlAMCs6x7fStKA5WuaR71DYtwDAqwoyBUEXSrEf9KyO2KJF6ip
FXdUaDJqVBUeZqOAx0ooopAOQ9qdUecU9W3CgrbUWiiigoKKKKACiiigAooooAKCcdaCcdailmwO
aCWwmlwKy9RusKRmpb2/CA81jXl35jHnrWkYnHXqrZENzLuY+9VJ6mJyagnPJrZHnTdyu/WhWx1o
Y5akrUyJFk9Kljm9arDk8VJUtFJltJM9Kf5lU1kK0/7RU2LUrFnzKa8g71Wac9zUMl4B3oUSXOxY
kkyar3NwFWoJb/3qleXhZTzWiiYTqqxDqmq+XnmuZ1fxBtBy1Wdbujg4NcT4kvygJBrphFJXZ89j
K8pPlRPqHiNS5y361Vj1tXPUVxmpayyynk1Xi8Qsp+9XI8ak7GayyU1e56nousqjjDV12nawrxjn
tXiGneKWSQfNXYeH/FfmKBurWFWFfbcz5auCeux6NLqoXnNPtPEWxx81cmuqGZOD1ojvGD5zV+yK
+uyTuj0rTteE6gZq+LreOtcHoepEEAmuqsbvzUHNc84WZ7OFxbqqzNBpc1DI+TSg7hTHGM1NrHU3
oRSS1C81Pn61VdizcmmjmnKw83HPel+04Heq7vtqGWf1NVymTqWJ57vmq01zgHJqGWbPes/Ub/yk
PNUonLVrWVytr1/8p5rlLufzJSSat6xqe9iM5rJeXJyTWz91WPCqzdaVy7DP5Y5qhrOqhYyM1Bea
gIUPNc3rOslicGuXE4lQjZG+FwbqyRBq9/vkPNZrzljUNxe+Y55qMSZFfOVZOTufU0qHs1YlaT0p
hbHWkL00n171z31N1Enh3SZC/WvQv2b/AIoP8NPiDbvdSFbG8byLkE8bTxn8Oted2s/kk4A5IOcc
8VK7bJAYzx29h/jXdhakadptXWzXdPRmdWn7SLj93r0P0RaRbiAPCQykAhh0INZt4nykda87/ZN+
K48deBV03VJN1/pK7OTzJH2P4dK9JvV4P0/CplSdCo4Xut0+6ez+44sTL20FN77P1PK/jf8AD5PF
vh+Yxj9+g3Ke9eF/DjxZL4Q15rLUNyru28twOcV9VavCsyMrjgjFfMfx88ESeHPEX26yTEUh3cDG
DXsUKso2mum/mjOilWi6UvkepNOL2zV0fII6iuf1b50JxnFY3ww8YR6tpIimceYgwAW5Nbmoj9y2
COK9ttSipR2OWnDkk09zl9QGN+81ynie7+xaVPI3XBVfqT/hXXakPvDGQa4X4kyNHpsaAYWSQZP0
FeZjZezpyZ62GjzNHFljnOeajlnx3pZGwKryN+tfILc9WMbjXfJ5qM/MetMeQlqA/rWljoUbIkV9
pqaOTFVgwPelDYHBqGhONzQgm3Gug8N6oNL1m0nB4hlVj9M8/pXKQSktxV+K72uDXv5PQsnI5K9G
52HjqwNneJnkKzxg+2dyn8m/SqGgact1erJcKGij+Y+9X/Et2NW8P210pJaSBJCf9pSUb+lJ4bd2
Kixha4c7gY0GT/nmt8wpxjBxfU0y/DudROXT9DK8XTrNqTNaEhGADDpk1kHKOPWt/V9Kktbhjdo8
DdSG9fQVhXCmV2K8gV4bwPIlKmro2xWs5Oe59FeH0WX4f6/uBzHFpE6L/dJEi/yJrzB9SMF/cT2e
UuftDKJD/AVQtx26ivUPDsmPAviUngjTtFOM9f3mP6/rXliXCJNqJuQf3c7OCR0LIw/nX0WZ0fbU
ebpeK/8AJIHDk7lTxlSC3tp8rmzcarLrVs8t0zs2zecnlv3XNb/ivVUufFTW7FlklhtJMj+P9yOP
0rmPDU0d1pUzLjBjb/0X0rB+KfiKXTviBp9xC2M2Fm49P9WB/SvO4ry5VcLGMdLWt9x7GQY2cazn
PVybRh/FZPsfiWWVF2xT/Mnpx1rib7U8AjNeg/HxlXR9MuY1CefliM+oHT2ryeaZp3IGSSa8DJ6k
sRh4S/rTQ9XM8DHD4ua6b/fqOuLvzDnGc19OfsUeHbTw34WGt+Jlb7JLLNr14cA/6Fpy5Tg9d1y6
49fKr5httMnuZwkaFncgKo6sT0A+tfU/xnuofg7+y5qllZuiz6rPa+FrXBwXgtR515IB1IadpEbH
+zX1mFwcoxs1ZyfKu+tk2vNJ83yPPm+apThHZPmf/buqXzdl8x37DGo3vjj4savr+qvvvNZv2uJy
e5ZjI+PoTivNv+CqPjxvFPxY+zWrrNa6aohVlOQCBkjj3JrsP2QvE8Xgjwbe65NLhoLaaZFBxvds
Io/HP4Yr5U/aG8aHXPFt6lrKJIY/kXBzg96+jngVHF4jFte7CmoR06vf7l+Z5WS46eJxE8LHX965
yd+kYqEV825PXsed/wBoEy9PwrY8O6mzalCGGOcmuXjH7z5TnHv1rZ8PKz6kp7KM142WQdTExuff
YyCVGR7V4fuYr6MFANwrsPCV59ncK4yM15b4O1NrScZI5xXeabqiiUMGGWr9YpLmjyn5ZjsO1Jx6
HptjfIMbFHrW5pmtCIc847elcZ4YuTcqAxJxzwM/pWw96A5MJ28c8V59egm3E+ZxGFUm4tHXt4vk
jhUQnGDnrVi18byLGGZ2UZJ6k1wg1PJIzuLVaiui8a+Yxx7Vxzy6FtUccsshazR6HpXjmV1JLMFB
781Yj8SPfXmMt856GuH0yRinJOK3bCT7JYyXPdflQHux6f4/hXn1sFTpt2Wp5dfAwg2kaPjDxa9p
Bttj9weWg9W6sfz4rz/UPERtZlllG+QndgnII9xTPFHicyXTqrfu4BsBB6msESPqW+W6JW3j++c9
+yj3r0cPhVhqail7zPoctyxUaackT+Ib/wDti9adkiiaUhisYwB6ACoLJVEjMfuqMZ96z57pnnOz
PXueh9KbquoGzsCkJAd/z96z9hGF5vofQRoOyguozVNS864ZlPyx9Oaw76+5ODRe3oRAM8gfnWRc
3ZdzzXx2eYjli1fc9zDYVRSLD3XpVe4u+DzULS596guZeOa+N5UehCkkynqlyTnmufvpSWNauoPu
zWPc80N2PVoRUUPsH+cZrptIkyozXK2z7HroNGuenNTe6JxMbq5vpytLRbvuX605170jydmRlDml
VdtLRQVcKVDzTGfB4pVbJoE+5LRSK2etBYCgkCN3WmEYNO8wU3rQAUUUUAFRTnaDipaqX021TTRc
FdmbqUuSaypvmPNXL6bcTVJzzWqPVpKyI2Xaaay7qkxvprLikzS9iPac05Y8mnou41KIwKaQ3IjW
LNPWPFSpFnrUyw4607EcxCqHNSqSop+wUuKCb3BXOMjil88jvSEZFRk460NCsi5b3Rz1rovDd2RO
vPeuVgOGrb0KfZKM+tJaM4cZTUoNHvPw2vSyICa9NtDvgHuK8Z+GepAbAT6V7HokomgXHTFfU0Zc
1KLPziMfZ4icGNuYSTUlkm1xVmeD8qjiTa9aXNuS0rm3prcCtKLpWXpxwBWpD9yspHs4fWI4cVNA
flGahp8TYbB71J1RZcU5WlqOF+MGpKDoTuhr9aY/3ac/3qY55xQJjaCcCimue1NEsimPFVZT1zU8
71WmftWiOebIutRyHrT2OBUUrYFaLcxbRVu2qlKcmp7qTk1UlkxXVTRx1WVr6XZESa8y+JurbIHG
a73xBfeRbtz0FeKfFDX97uA1XXqKjRlJnnuLxFeNNHm/ii6866bnvWRVjUrnzpyTVcHIr4CtPnm2
fomHh7OCRneIf+PR/pXg/jc58QS/T+pr3fxA2bR/pXg/jX/kPy/SvNxWx9Jk+7Ppv4IZ/s+H6Cvb
tDh3RLmvIPgXYb9OhOOwr27R7TZEuRX3WV0Wops/HOIaydaSRbjg44qxEvQDtQsZIGOlTRR4Fe5s
fNRi2yWAcir1uOfwqrAnzVdt1rOR2U0XbcVdj5Tn0qpAOBVtThKxe56FPRGB4qXMZrz3U4/37V6B
4qmAjbNcBqMgac4qKiukccX+9lYrRrtrTsJ9mMms9Rk1aiOBx2rSkuXUVb3tDbguuOtS+ZvNZVvN
0q7FLmuxPmOCScSzketKJcd6gaSmeZk96iQJsvx3ZXvTvt3qaoeYcVHJcFRWEpJam0eZ6G7bXYJ5
q2s4K9a5u0v8HrV5L/5R81RdS2NFUcNGahnB70yScAdazJNRx1NQTap6Um0t2HtXLZF65vAg61nX
urhFODWff6oeeax73Ui2ea46+LUFZG9LCyq6st6prWQea5+9vfMc80y+vCc5NZ8k5YnJr57FYp1H
qe/hsIoLQupc4NLLc5HOKzvPweDQbgmuLnujsVAsSSg9KYZfpUBlJpCxPeosbKBMZM9aa0uKiMm0
VGznHNWki1C5MZR61VvbrYp5oebArN1K4wDzVo6KdK7Kt/f/ADHBrOnvM55pl5cEseTVRmLHmtb6
Hq06aSJmn3U3JemxjP41MqZHNTuaPQRE7VZh+UimRJnpU0aYNQzKTLUMpTmrUN1jvVJRgU5X2mkc
7imasV7jviplvM96ylmpwnxRcydK5rfaR3pwnBrLW4OeDUqTk9eaLkOkaHmik84VUWbPepPMNBPI
T+dQJc9MVFRnFNOwchLvNJTCxNJvIHWruTykhOOtIXAqMyfWgNmmmVYlByKch5qNDzinp96m3cmR
PE2TUqH5qhhPNTKMmsmznmTIcilpgODTgcjmo5jF7jlbBp9RgZNSAYFK5LVxyvg809Zc9aiozigh
osCT0NOElVt5pwl+tIhxLIm9aXzhUAko8yhInkJjN6Uhkz1NRl/SmlietWkHKPaXJprvim0xzk1r
EtRFL+lKr+vFMorVMtolDkU9ZfWoVfA5p1Wnchxuaml3GyUc16D4RvhtXmvMLSUq/Wu08H3p3KM1
62Anq4nk46HI1M9U0243KDmtzTjkiua8Pgyoveut0q1OBxXTU0PVwSc0ma1guVFalunTiqllb7QM
9q0oI8da45M+how0JYl4FTotRxDJqdBxWbOyKFVcVKBgU1BxmnVL7FBRRRSHYKAcGiigaHht1LUY
ODxTw/rQG2wtFJuHrS7h60DuFFIWHrSF/SgLjqa0mKZJNtHJrP1HVlt1OT0ppXM51FBXZauL0Rg5
NZV/rqxg7WFc7r/jFYN2XH51zN14yE8hCtmuinQb1PGxOaQi+VM6671rzG4NRJcmRue9czZ6t57c
Gtqxm3qOa1dPlOanX9s7mju+WoJ25qUNkcVBLyxqUrG8tiIjNAGTxShD3p4GOlX6kJXEAxTgpNKq
etOqW7lpDChFITgU9zgVWuZxGOtCVxSdkMuJ9oPPNUZrvJ64qO8vOuDVF7rJ61vGFzz6tZXsXDNn
vVe6lyDTVmyO1QXk4CGrUTnlUujH1uX5Wrg/FVzgHmut1+8wDzXn3im93M3NVWlyU2eSv3tdI5fV
p/3hrMa5IPWp9Rl3uaz5Dlq+blK7ufVUIe6i9b35VuTXQ6FrpjYZauRiRi3Ga0LASI3GaunNwd0R
icPCpGzPVdF1wToAWragnDgc9a810S9liIzmuu0nU2ZQHzXuUK/tVrufI4mg8PJ22OrsLvy3HNdL
o2r4ABNcVbXGQDWhaan5J61pOFww+I9m7noltfCRetSNKCODXHWXiMIBuatKDxGkg5YVzOm0ezTx
sZrVmxK2TVWRsZNQHVVkH3s1HJdhu9JRHKqnsPlk5qrLLzRJcepqje3wVTg1aVzkqVbIW8vRGp5r
n9X1XdkA0zV9VIzg1gXeoFicmtLqG55VWrKq+WI66n3sSTVG7vBGp56VXvtU8sGue1bXsZGa5a2I
UTpwuClUexa1fWAM4Nc1qOp+Yx5qtqWsmVjzWdJd7zya8ipUdR6n1WEwHs0XRc7m61PFPmspZ/Wr
ENxjFcs4nZOloaZYFaZnFQxz571J5nrXM1ZnO42H7zU6fPF1BJ/SqvmU6OXDirpSUZarRicdDt/g
p8SZfhl45tr1GYQFgkwHOVJGf0zX25BdRahYxz2bB4pkEkbDoykZBr88y5BBWvqf9j/4qr4q8Jvo
GquWv9LG6Ek8vCT/AEJx+Ir0ZJzhyPeG3nH/AID/AAbODEU+R8666P16P57fcem6vHzwMVwfxQ8J
p4o8PzRTIGYL8pPY13+qct7Vg6nHuGD0P6104SWx58W4STR8l6ZfXHgTxXJDKu0BypzXq9nqKatY
pLEQQRziuZ/aI8FGxv1v7YYEh5INZvwv8Tq1ube5baB09c162Ek43pN+h14qPMlVj8zo9VTczE9a
87+KblYbVexZj+X/AOuvSdTXj5gea81+LS7FtD7sP5Vy5mn7CRvgtJI4qVuKrTPxUksvrVWR9xr5
WKPbpxuJRRRVSNn2CmvIFpXfaKrlt749TThByaS3KjEv2rYjz3NSeZgjpkVXjk2Io44FPWYEjPHe
vusNh1Qpxikc8t7nYaHc/bvBvlyE/wCjTGPJ6BJF4/Vat/Dj4hWvhUzNqXmmRgoDIMgYrE8FXPmx
albFuZbfzEH+1GwYY98BvzrKitxJfypu2opJGR2PP9ajG4Kni4unU2Ztgq88HU9pS3PT/ifqdr4r
8Jf2lpx3CIowbBBIJwQa82+14VgCcDpXRW0rQfDG/hH7wRy4+nOQa40uzKdvcVwZVhFRhOktUnZe
h3ZzFVqkKjWsor7z6P0W7I8O60ucq+g6YeexWeLn9a46TSQ0etx7NxDqQCM54IrqPDB8/RdRVmCq
3hq0zt9UniOaNMsUTWdUAJbzI9hH4135jVVLC3a6p/hE5ciy6OIzGq29tPvucf4bsprTT7mG7Ty2
S1LEA842da1/jNo2jeC38KXt9aC9u7vw9bzDLEhsPInI/wCAir1lbqt1kgM8umOTnnpGTWV+0+/m
2Xw6dif33htUY4/u3Mo/rXm5zUePxGGpNWjJarvaLaR9DluDpZZhsRUVm4vRvpdo8s8c+KZPFcu/
UYo1VAUijUYWIewzXKvAEbdGAB7Cug8TQwpOq2p4xnmsS7kWND3Fe1hsBRw0Y04RskfPVsXUxVR1
Ju7Z1XwD0r+0fiRa3txH51toaNqcqYyZGjx5UYHctK0agdya6/8Aa9a58SfFbwt8PdKdriTwvYx2
tyUbcJNRuCJ7l1Pcksg5xzkVs/sV6FaJejVdf+WzN02pXTnbiOz0+MzMxz/CbhoAf92ud/Yru5fj
L+14dY8RJ5097dz6rMHHCsxaTH4cD8PStp1FSqyqy1jRg5+rs7fNJST9UTThUmpyp/FJqnH5tX/8
mlH/AMBPafin8CLX4Hfs2K8rolyksZnBP3VwVVB9CSx+hr84PFN2NV1a9eIkh5GZec8Zr7e/4Kcf
HKfUNd1Dw/YXJWz08JbCJTxJKVJkY+4DbfwPrXwnJcraXDO+NuOlXl8cS8qjUxkrzqvnflFr3f6+
R3YDAYXCYzESwafJFqCb15nDSUv+3n/XQqRwm23DIOeK3vCcReRnznPArlptSMt4zxkEdq7bwpHE
tkpbgnn8anIqKq4jmS0R6uZVZQoq/U6PSX8uRcdR+ldDb6mYJQjk5POaxdOVI0B4P0pdPMl1qB81
8KvTNfe+1ULWPjpJVJNvofQHwA8UaDp73MnjNpDhAIgCeevTH8XpTdW1pdTvHe0jESOfujj8fbPW
vKPDmpGObah6nH1rvNDmVlCREM2Msf7tW8HGNR4m7vJL0Vux89iMFCjWlWu7s24H2cHn0q/YZuZg
qn61m28qy7S2Pm7DtW9olsqDcynnua560lCLZ59eSjFtmtp0BYqiD5jVnxfqq6bp3lQHb5a7U/32
6k/QVY0pl0+3N04BkPEQPPPrXC/EDWzNOVRyzHIJHqeteTTiqtXmlsv6/wCAeZg6DxeJSeyMNEk1
rU1is87QTlj0AHVjVjV76KBFis23RRkhB/eP94inRr/ZOneVbkGe4wZZB/APQVjXRMkzFAP7oFei
3JLnnuz66MFN+SLNqVbLnO1axdTvDPcO56DgVp6jJ9lshFHw7jkisLUJxEMHtXm5jWVCk03sd2Fh
zS5jPvZ8k46VVY7jT52yfrUecc1+WY/EvEVW3se5FWVhzHauKp3kuAammmwOtZ95Puzg1wXNoRuy
ndvljWbOeTVy5fJqhcScnFZnoUyHzNr9a1dHvMMBmsOWX5qsafd7HHNJO5pUhzRO80+43qOats27
Fc7pGpBgBmtuC4EgpnjVabiybrQRjrTo6dSuYEZGetIBipNo9KRgBTAbRRRQAmSW9qWiigpMKKKZ
JJsFAtxJZdo5rJ1O96gGptQvwinmsG+vtzHJq0jtw9G+oT3G5jiowd/WqxuMmnxzZ6mquehy2J0P
FLUYbHIqRTu60iRyDvUsSZNNVc1YiTA5qk7kyY5Ex0p4j9aVRgUtUZNjSnpTTx1qSkZcmlsIYaif
7pqWopOhpFrUWJ+ea0tOn2SDmskHBq3ay9Oakzqx5ken+ANa8mZMnHNe5+C9XE8CcivmLw3qht5l
Oa9h+HniwbUVmr3ctrqS9mz4DOsLLD1VWitOp7MMOv1qPyiHqnomqLdQjkcitMLu6V6PwmMGqsU0
T2L4IzWtbPuH1rHhGytC1l4qGrnfh5W0LtGeaRW3ClqDsJ43yMipVckdaqxvtNTo360G0GPJyeaY
/wB6nbhTWOTQXIaxwKjdsDmnOcmq8suTVxRnJ2GSvk1Vlbk1NI2ahlX/ABrRHNJ3ZGTgVXnkwDU0
hwKp3UnBrWCuYyZWuHzms+8uRGpOasXt0IlJY1yfijxKlrE2Wxiu2nG55mJrKCMvxz4hEED/ADY4
rwfx1rhurl8Nnmuq+IPjTz2dVfNeXavfm5lYk9TXg5zjYteygz1chy+Tk69RashaXe/NGeKiUYFO
37Vr5bmPseUoeIm22b59K8I8ay/8T+Xp0/xr2rxXqAjs3we1eBeMtSB16XmuHFM+hyem3c+1fgHb
7tLhyOwr2qwgxGK8g/Z+jzpcGfQV7VYxZjFfpuBjy0Uz8Izd8+MmgWMmpI4sVMsWe1Spb5robucc
aZHFHirkCHikht8nircNvjpWbZ0QptD4VqeZvLiohgx1qHVH8qE59Kz3Z0v3I3OU8YXuFYZriLib
dKa6HxZcGSQgVzohLyZ9ayqXc0kcuHtZyfUkiYlqsxnmm29ofSrSWp7iumMHYynNXEhznir9uDgV
DBac1ft4K6Yxscs5c2xG61GRjrVxoCKjMGRUzVyYuxCT8lV7g81caE+lVrmI+lcdWLsdNKSuVll2
twasxXG4dapSqVpsdxg4NcXtOVnXKmpIvyy4FVZZic5qQN5i1DIOfrRN3JhFIo3khJNZl02Aa1ru
Pmsm9XANeXiEz1MPbQy7xqpSPzVu8zk5qk33jXjVdz2qWwm7BzTvM9aiY5NKlZnSkTA5FNZvSlC+
5pCmelJPUlWuNpHPy0rAgc1GzYWtIs0WpDcNgE1j6nN1rRvpsA4rD1CbLHFbRR3YeF2UpzvY1CBk
09jxzTU+9VXPQRJGuDVhFzUEXWrKdKRMiSNeOKmjSmwpkc1Kq+lJo55C7DSEY61JQRnrUGRHQDg0
5kx0pANxpXHYkQ8ip4jmq69RirER6UyZIlQ/NUy8ioVGWqVDxQZSXUlAwOKWkXpwaWgkKYxyaeel
R1UQCiik381aAejc81MjZPFQL96poRzUt2IloWIetToO9QRDNToeKykzlnuPHJ5p9Rg4NPByKzbM
mhykA80+o6cHx1pNkjqKQMDS01ImQUUUU0yRytnrTqYDg0pemA6jPNNL+lJvNUmKw+mN1NG7IOTS
VakMKKM80VomO7CnK/rTaB1q0xE0P3xius8HkmVcetcxZQGRx712/g3TcOpIr1MBFudzy8wkuXlP
UfBtvviXNdtptttUcVyfhBfLiUe1dlYMCAa66z1Pby2K5EaNsnQVaTpVe3HP4VZUYFcr3PegiWHr
UyHioolxUqdahm0SVPu0tInSlpPcYUUUUikwooooKCiiigTdgooooJ5mIzbetRST8cUspqvO+Aaa
VyZSsQX995SHmuO8U6+Ykbmt7WJyFauA8YSlkbBrqowTZ4OZYiUYuxyPibxM8s7fNWdY6o0kmST1
qLVbcvKc0yzg2H2r1owSVj4aVSUp3bOs0a9PBJrqtMvhtGTXB2F4IcZNacHiAR8bqwnTctj2cNi1
TWrO8jvQV4NOEoY9a5Oy8Q7yPmrXs9TEg61g6TietSxkahr09Vx9apxXYI61IboDuKzcWdSmmWSc
daa0oFVJL0AcGq1xqOB1oUGxSrKKLc94EB5rMvb7rzUF1qBPeqM05c1tCmcFbE32FuLjeetRbzmk
JyeaRn21tY4JTb1HtMFqhqV8EQ5NLd3flqcmud1zWAgOTVKPVnLXr8qsih4j1TAbmuB16/8AMc4N
aviDWfMLc1zc4a7lwvevKx2J5nyxOnL8O4+/MzpQZnOKntNEkuW4U81v6F4RkvpBhSQa9E8J/C4y
bS0efwrnoYOU/elojurZhyPkpq7PPNH8By3RHyGup0r4VO4GUP5V7B4e+GSRKpZB+VdVp/guG3Uf
IK7VGjS0SuRDB4vF6zlZHidn8KXQZ2H8q07X4dSQAYTpXtKeG4lH3P0p40CL+7+lV9YS2Ro8g5/i
lc8e/wCERlgXlTVG80mW3zweK9pn8OROD8orI1TwWkqnaopxxGupy18hcV7p4xe3Utpyc8VSHi57
d8MTXofiXwCdrbU/SvOfEvg2aB22KaucpSV6Z4zwjoT5aq+ZoWfjzLYZq2LPxT5wHzZrz600C48/
ADda7Hw14XmcLuBopOcl76sE4OLSpSubseoNcAY70TWsk6njNbWi+E2AG9a37fwuoUbhRKaiz0KW
XVay948zvfD8kxPBrMu/C0pBwpr2RvCqNn5ajfwdG45UUvaxe5f9hVE7xZ8+634anQHCmuM1zRJ4
y2VIr6h1TwBHMp+QflXJ+IPhasitiPP4VnPD0q2zszanDE4LdXR8yX1rJGx3g1ULFDzmvYvFfwra
EMY0PHtXnWu+FJLCRtyEY9q87EYKdLVbHt4PM6df3ZaMxFn2nrU0c3oarzQtC2GFNWTB61wtHq8q
ktDSiucdasx3GR1rJSc9jmpY7rHesZQuYTo3NQOD3pykZ5qlFd56mpROCOtYuFjndNovxzbhhua2
fh/45u/h54vs9W0c4ltJAxTOBIv8Sn2I4rmkuMHg1N5gdcjrXVSquykt0ZTpKS5WtGfe+meJbXxf
4as9V0Vt1tfRrKnqueoPuDx+FZ2oNn6+9eGfshfF0WF2/hbXpisF8++xZjwkveP23Y/PjvXt9++0
EN1HX2PpXpUIxveOz2/ryPCqUpUpOMjjviX4aTxFoUsbAMyg49q+c4JJPB/iR4rnKgH07V9Q30u4
sD93+deKfHjwaGH27T0AKDLYNeqoSspx3R1YZe0TpyNa31NNT09ZI3DbgOcVwvxej3aTFIzcpIAP
xBqn8P8Axn5ZNtcP0Pyg074uXbHw7Fs5XzhubP1wKMdFVMM5rqjpwtCVOsoSPPpZc1CzZPNRPdYU
1C12B3r5C1j3o0y35vvSNPxVP7YPWka4z3pWL9mTyz+9Nt3y/NVml9aZ9oKNkV0YWoqVWMpbFOF1
ZGk8mATmmrcFWqslx5i8Ek1HJNgnJr7qElUipLqY8nQ6fwTq623iWzZiNrSCNvYN8p/nUl0PsV+w
YgbSY2HoVJH9BXLWl8YJlZCdykEexBzXU+M7pf7QeSJRtuilyuD08xR/7NuoqWsrkKnaWh1HghRq
2m6patk+dbmTAPTHcVxCDaQAeRnn14xXRfCDX0t/G+nw3JULO5gbn+8MVjeNI/7F8WahbSAL5E7Y
GMfKelebhpezxc6L6pP/ADPUxdN1sHSrLo3F/mj3TwFKb3w7emM/M3g2R8nodsq4NQ6PrYl8Q3yq
6NtMS7eh69M/lR8L7sDw8qpkmfwPc4GPvHcSPp0ri5bk2HjTWYQSrLCHHPPDA59q9DEUYYjDyi97
K35foeXlWIq4TNJyS917/dodLpWsCfxS/lMNgt5IQS3HEbjA/M1R+Lc7+J/CvgcZybDSpYQSOSDO
W5/OsDwfqxW0tHwN5LZJPX5WB5rR13xOND8BeBruXbJ/aFrdq4P+xOMY/B6ebYaOFjSqJaq1vWz/
AEO3JMRLMZ1aVb4W3f71+p53q+g3KbnQocdfWuS1TUNuV5D9AOua9l0nW7HX0nV0xJKpVc8gGvNN
O8PrF8VI01Mf6NZM17MvXKRAvj8SoH41ll2NeKrOnKOq/ps9DM8ohllFV07x1/K6PX/FOpJ8G/2T
tcaDCXureT4QtiD8y7h9qv3xnncNkZ91Fa//AASp8PQQ+IfEviXU3IXT7MrkLlQCeTx14RuPevKP
24dan0nVPC/gaRiZfCmm/bNUGPvalfEXM/I6hVaJVPYcVS+AH7Qlz8NPhlqOm+H7uWxbUHxcNGcO
yg5GD1B4xkdjXRHB1c4wlenRfvVXo/7t0r/OCb/7ePMdV5PChU5XNwabSt8Wstf+339y6nL/ALW3
iRdZ8c3b2s0k8c1zLMHkdpHYFsLlmO48AcnnjmvCdZn22xwR8xxXT/Fnx43ibxHNMWJUZAPqeef1
rgr27a5kCA5xXoZ7i6dL9xF/ClH7tz1shwNShhqcam+7LuiWwbluT2Fdrp0nlQKFx8o5ritBU+aC
ema6iC7AHBwK6uH6ahSUrBmbc52OmtL/AAgXpx1zVmzlYSksx6cfWuOGu7ZsLnrxXV+HT9vCICd7
MAPrXtX9rV5UeBXouguZ9Ts/Brra4uX+8rBYl/vNmuuOrizjWEMpmYGSd/cnOP5VzlnEtjbPcOfl
tB5cII++56n86y7jWnhcRs29ycue5Ne17slzPZHg8n1ud1seneHNSOpTbuw5ruLG4DRID34rzHwb
cmCxj38E4JI9a7Sy1QJBulIG4Z56AV5mLjzM8PHwvNxR0Gs+IhZWROcHG1B6D1riJrs3t08kzjr8
uf51Q8TeLDe3ZVG+XoMdhVC21HndJz/SvNcowqKlHpv/AJHo4HLvYU+bqzZnnzGwhchV5O7qT7Va
nurSawtlsoTGIVLSu2CztWJFci4kBLDHpT9R1BI1WJD0GW+tayrc755dDs9k37qIdRuS8hkLZ3dP
aufv7je5BNT6rqgGQCKxLjUAx618FxDmPM/ZxZ7eFoNK9id5BVaa6A6mq0+ocHBqjPqHvXxrkelC
lcuT3e4cGqc9x1qtJe5zk1XmvRzzWbkdEadiSebAJNZ9zNikuL3PU1Rnutx61m5HTCA55ffmkS52
t1xVWS4x3qBrk0uY6VG50Wn6v5bDJxXRaXrYfG48152l+UPWr9hrxiYZNWpmFbC86PUbW9EgGDVp
ZA1cRpPiXgbmrfstbWQDJqrXPIq4aUGbJf0oDButU475X6Gp0uB2waZzOLRLtHpQUFM+0D1pr3AH
ei4rMdSFsdaglvVXqaqXGrqveguNNyL0twFHWs6/1IKDyKoXmvAZw1Yuoa1uzzTWh20cM29S3qWq
bicGsme83Nyc1UuNR3k4NVXveeTScz1KdHlRoi7GeTUsd2PWsVr8Z60qagAetLnNfZXOjgud3WrM
bc1gWeoA9TWpbXmR8xrRSuc86djUhPNWY+1Z9vcA4wauQzZ61cTmki0gyeaHHFNVvSgnPWn1MgpG
bFIz46VG0o70NXHYcT3NQyvSyTccVC77uTSsXFBvOangfDVV8zmpom6VJUlobFhcbCOa7Dwn4ia0
lX5iK4W1kwfatSxuzEwOelXCbpu6PHxuGjXi4tH0N4H8ZiWNQz816HpespcRg7s5r5h8OeLGs5B8
2MV6P4X+I4wokevo8Ni4YhJSep8PWwtXL5uyvE9pSZZBwaswzba4bR/G0c6jLj863LfxIkgGGFdL
ptGlHGQl1Opguc1YWQNXMwa6vXcKux6/GBywqeVnoQxMWtWbW4etSJMB1NYbeI4wOWFQzeK4l6OP
zpcjZr9bpx6nSfaB60jXA9a5C48axoT84qNfHMfdxVKkzN5lSWlzrpJgRwarSS471zn/AAm8RHMg
/OmN4yhPO8fnVqlLsJ46nLqdAZwKjluB3Nczc+NoUB+cfnWVffEeCPrIv51tHDyl0OeeYUo7s7C5
vFXuKyNS1lIVOT0ritU+KsCKf3o/OuQ8SfFtNrBJB+daWhR1nKxzSxU6/u0otnZeKvG6WsbfOOK8
n8bfEEzlxG/61z3in4jNeM2JK4vUfEBuHJZs15GPzdJclI9TLsjnVkqtct61rTXcrFmPNZTPlsk8
1VuNUUZJYVnXniKOIH5q+XnU53dn2dDDcitFGy90qDk1Q1HW1iU4Nc7qPjBVztauf1HxUZScNWEq
iR6FLBSluXvGHiDfA4B7V4f4q1EtrMhzXoGuaqZom5ryzxHMW1V687EyufT5XQULo/Rj9nxf+JVD
/uiva7MfIK8W/Z7GdKi/3RXtVmP3Yr9Yw38CJ/OGYf75ULUaZqxFHuqKNeKt28fSqkTCNySCHNXI
bfPSmwR9MVbiAVaykztpwEWIIvNY3iGbERGa1by7WJDg1zes3fnE4NOCuzDFzSjyo5PWIDNMc1Wg
03Lcitqa13seKIrXaeRXVGir8zPHVSaXKinDp4A6VMLHnpV6KDPQVahtQ3QVo2lsCpuRmx2RB5FW
YrU+laUdj6infZgp6VDkbxoWM82ntTTZk9RWmsGT0/CpEshnkCs3I0VG5jGwJ7VDPppI6V0i2APa
kk04Y6VlKVyvqrOMvNNK5IFZk9qUfoa7e+00YPFYeoabzwK5qtFT1QRnKk7S2MeLOOakCFql+xlW
q1b2W4cisY0m9BzqpamXcWpZeRWfdaazZ4zXWf2aCOc019IUjtSng+cqnjOToef32lNk4BrLuNPZ
CeK9GvdCDdqy7nw3vPC15VfLZX0PVoZpG2pwxtCW5FPWyYdBXYr4RLn7tSjweQPumub+zKj6HX/a
1NdTjPsbelKLNiO9dl/wiRB+6TT08J4HK0lllR9CXmtNdTiJLNscg1UuISvau8uvDIC/drKvfDnX
iq/s2pHob0czhLqcHfo2KxrmNia7zUPDZyflrHuvDTMxwtS8LOHQ9rD4+nbc5F4j3BoWE9ga6f8A
4RVyfu0Hwq69VNT7GfY7FjqXc5+KA+lWY7Zj2rZj8PFTyKuweH+nFCoSfQyqY6C6mDFbkDpUq25U
c10Ufh70FK+gHHSh4eZzPHQZzhjNNIx1rdl0RgelU7jS2TqKwlSlHdGkcRCXUziM9aQLip3tSp6U
zyTmsmjoUtBqjLVNEM0Rw/hViO3LdKe5EpJCIO9PHWpUtSetPNsV7Gnysyc0MQ9qdRs2UYpCuIWx
1qNmxUjLkVGy5pp2ARnyOKRVz1pQh71JHHuNVcd7IEXvU8S4p8NqW6DNWodMd+xNLlctkc9SrFbs
gQErU8QNXrbQnk7GtG18Lu4+6atYWc9kcFXF049TFSInmnmI100PhFz1X9KfL4TdR92qeX1bXscT
zGlfc5UoRSEY61vXPh54z0NUpNJcH7prmnQnDdG0MTCfUoBSO9PCE1fh0d3PCmrsHhqR8fKcU4Ye
c9kTPEwjuzFEeeopfK9q6OPwjIR9w04+EZP7hrb6jV7GDzCl3OZMXrTSuOldFP4UkQH5TVSXw/Ih
+6fyqXhakN0aQxlOezMcjHWitM6JIOqmmNpDdwan2M+xoq8H1M+msCavnS2HY019Ocdqr2cuxaqx
7lEk9+9KH9TU72ZHXNR/ZyD0ppNbmnMmJT4ULt0qSKzLnpWnpmitK44ralSlN6IxqVo01dsn8P6Y
Z5Bx1r0Tw1pflKvFZ3hXwyV2krzXc6TovloMjmvoaNNUIW6njxUsXU5uiL+hExla63S3yOawdO04
gg4roNOhKdayqtM+mwUHCyZs23NWUGWqtajGKtJ0rlke5DYlUYFSKMCmqMtUqrnk1JuCnA5706jH
NFJgFFFFIpIKKKKCgooooJkFFFNd8dDTSuSRynJqpcn5asSvknFV5ju6VSRlN3MTVlLKcVxviOzM
obiu+vYPMB4rn9X03eDxXXRdjxsbS50eXanpu1ycVlz/ALkHFd9q2h7idq81zuoeGmkJ+WvTpyuf
H4rDyg3yo5O61ZouBmoItcdpB1roZ/BbynO2ok8Cur52H8q1s776HByztrF3DSNSY4JJrp9NvztG
TWVYeGGg6itmy0tkxxU1Gmd2E9pHc0oL84HNTfbiRUUGmswHFWY9HY9RXHKx7UHNortcl+9QSyMx
71rJohxyKcNE9RS5kX7KcjBMbHk0xojXRNogxwKguNJwvSnzozeGluYLnZ1qleXoj6mtTVLQwg8V
x/iK9NsG5xitY+8ediZuiM1nXVjU/N2riPEXiPexAaofEfiJgWGTXJ3eotcydc5rzsZjUlyQNcFg
ZVX7SoXJbprubAyc10fhLwm+ozKWUkZrN8IaC2pXCcZya9y+HXgUKiFk/SufC0OZe1qHRiKkpz9h
R3F8DfDlQqFo8fhXpWi+FY7OMfKPyq5o2jpZwqAoHFaQUKOK2qVXLbY93AZZDDxTa1I4bVYhwBUo
GOlFIzYrE9ZWjsLRTN5oLmgLj+tNaIMKQsT3pyNnrQIpXmkJcqQyjmuc1r4fx3hJCA5rtI0zUq2+
8cjNNVHDYwq4KniFaSPLk+GKRS52fpWxpvhJLMD5RXbyWY7iqlzbBRwK09u56M5oZXSo6pGRDZLE
PlAqYKBTpxgmoWfB4o3OhJR0RIMZ4p2B6VBvNOEvrmizHzEjRhuoqvcackw5AqVZsmnhwaNUJqMt
0cxr3g6O7jb5RzXmPjr4ZiRHKx/pXuroHHzVk63oSXcRytb06rWj2PKxmXRqe/DRnx54x8Gvp0rf
KRiuLvImt3IbtX1B8SfAIlikKpXgXjjw22n3D/LiuLG4VJc8NhZZjpKXsK25yyz4NSLcnvzVG4cx
yEGmrc4715B9LyXVzVS7xUqXnvWSt0akW6p2uS6VzXS99asRX+Rg1hrdfhUkd5g8GlBKLuZSw6N6
DUXtLhJLWRo5EYMrKcFSOhBFfU3wb+M6fFTwtnUHA1iwAS7QY/fDoJR9eh9/rXyELwyL1rX8DePb
vwH4lt9S0lmDwN86bsCZD95D7Ef54r08NJU5/wB1/h/XU48RglWj5o+wr+53Kdp71zHieBdU0+S3
ugpWRcZqfSPF1p4t0G31DQ5PMtrtNw9VPdWHYjpj2zVTUp8rx+dfU0KatZnmRpOLPnjxvotx4I8Q
tIg/dFiQQODTvFniaHWfA/yuDIjoAO4PNem+PvD8PiXS5EuAu8A7Sa+f/FWn3Hh67e1uWO3O4AHj
rXm4+Dw9KcEvdZ7OHjGvJTekkVJL04OTULXnPJqnJP1yai88Z6mvkGeuqRpJcknrUizZ61nRzc9a
nS445oJdMtmbFQyT9zUMlyAOtV5LnPU1PUFA07W6GDk4NOmk3c1ireGNuTV6K788fL6V9fleMjXp
qD3WhjUpOLuW1l24bqQc8mtbWtYM+laXIcMUje2Yjr8rBl/Hmue83c2Fxk11OofDLV9N+HEGt6ss
NvY3V7FFCrN+9LMGy23HTjvV5jjKOGUVUkk29E3ZvyR0YTB1cRzSpxbUVdvsiHwrI0/i/TxA+1vt
CPkeoNafx1vQ/wAUdRMGcOUP47RX0R8Nv2LtD05NN1S91K8nlMSTqUXy9m5QeQevWt3U/wBlj4eX
N/LPrVpNeXE8gMkk90RuPHoRX5Xi/FbJ6GN5oqc+Vcuket9d7H6Hh+AsfVwXsm4puXNq+ljgPg87
P4e0aQDPm+EryLpy2VkOP0FN1rwFb6v4pm1O0JSa5t2XsUmZkI57jt+VXLHV7HTfFUVpp94mnaP4
Usr20tYrUec9wJJcNvDvn5UJGemR6GuX8XeCJIY30601pBdNdTTRXspCMkJXbGjETbSeSzLtUqwO
GI4P6J9WxmaYKjUoScJySeq6Ntq+y2a6nwtHN8tyvM8TQrwdRKyuv5krO1k+qM+HwLfeB/D5OvqG
miVnRojlP9WeN3TPNcz8ZtUMvwb+HkMSgfYkv1YjuDLGQfavRvDnw18U6lpo0/QNRHiDT3ggjuUt
7RpYjJJuHlAliZDhTlhgDPYDNcj8YdIhvfCPla0s7SaOLl3ZV2JbiQxiGMcAcbHBB6HPevVxc68c
OqlZqUqbu7b7W1XTc4cFj8vxWLeGwacPaJ7rS61evXovI8y8AeKbvT9et/s7M0YkXcpGdwzz0r2z
4Z+FtNn/AGhtO/t5lS2v3W6uFkX5UtbZHupQ2f4SYUX8x3p37GUHw68K/DK88QfFCTTzq738sEbX
N46GOFVTGEU45Zjya6r/AIWX4M8bftL2z+FpdPm0mDwne28xWYMN8swDBS5+9sJ49CRX5rS41niM
5rYejhaijCFRSnbRtRvp5328z9ArZA45RD2tSLcpQsr9HJL9ddD42+LfxJvPiT8Rta8R6qzC5127
kvHB58sO+UQZ7KpUD2Arhb/UGjDBCRnrg9K+2/i7+zr4U8WWEw8O3CaaVXnEEbEDAHXt0r41+MPg
cfDrW3srK+GoBJChfyDHggZI6nPGDX0PDHiBl2fx9lh+aM4rWLTTX4W/ErNOC8dk8VWqJSg+qaf6
nD6pdE53DGOvFZh1FomZlPsKj1PVzKx5C9+PSqlpdRXTKjZ3hsnFevicSsRVjSizio0uSDlJHYaH
O32ZTLjOM+9aM2oCKMknFYdneCOMDjOKZe6kXk2owIHpX32DtRoxifPVKXtajfQ2dNuhcXAbuDXo
ngK6KSo+cSDO329T+FeVaTOElGWxzzXb6Z4gFhahY2w0gx9Fr2MDFRTnI8vNKLnHkielXeufbolW
3bzEgGFA7+pNZ2kwvd35JPGc/WudsNaETfKfvDp710/h+RyirHnMhx071uqrnaK2R826X1SDSO/8
NtGsao+AuMsfSpPFPi4IjJC2N4xx/Ctc62tJpdoy7wyocsQeCfSue/ts6peubl8RKfNlI7AdAPcn
iliq0aEefr0OHB4F1qvtJbI2o9QaaUtISoP8qkXWCr4BJ9Peufu9Y3H5cKX52/3R6UW+oAHdIcBa
8DReu7PoFRdrtHZQ6wLS23FvnPas7UPEGNxDdetczca+8zkg9O1Zl/rxkY4PFeTm+Zxw1N2Zvh8D
d3Zt3mtFyec/jVOXVOOTWHLqWepFRSaj3BzX5riMS603JnsRw6Whrz6nnvVOfUvU1lzX5Peqst9z
1rmdQ3jRNZtQ3fdNQy33HXNZovMmmy3eB1rNyuaKlZlqe855NVpLvJ61Uluc98VCbkA9f1qXI2jT
Lj3HqarXF171XkuvSqlxeYzzS5jWMC1Je4PJoj1PaeDWPPfBScnNRf2iKj2ljoVG51tjrpjI+bFb
dh4oKgZavOotUx3qzFrmzo1XGtYwqYRSPUrXxdjq1X4fF692FeTR+IiOjGp08UEfx1ftzjllyZ6y
PFq4+9Uc3isAHDV5enis4HzUSeKyR96n7dGay3U9Bu/Ffo1Zl14o3k/NXET+J+uWqpJ4lyfvUe3O
mngLdDtZdf35y361UuNXz3zXHnxJz96mv4jDDlv1pOsdEcI10Omm1XJ5NQPqeB1rmH8QAn71Rtru
ehNR7ZG6wzOlk1TB5NImqfN96uVk1sZ6/rTodYBPBo9qX9XO2s9T5HNa1pqfviuGsNT3EZNbum3R
cjBrenO5zVaB2Nje7yMmtW2nzjJrnNJbIFblq2AMV3Qi2jzatNI045TjrTjITVeN+KeT71qoHM4j
nbjrTGbHWimsQaOUaiNZu5phOetPIz1phXFRKI+USpoz6VGq55NSR96yaZLLcDcVcgm4FZ8DYqwj
4qWrnLONzTguyh64rT0/Xnt2GGNc+stSLOVojJx2OSpQjUVmjv8ASPHslvjLniul074nsANz/rXk
CXpU9amTVnTof1rupZjVpdTxsRkdGtrY9vg+KYUcv196dJ8Wwg4f9a8QPiCRf4j+dRS+IZG/iP51
0/2zNdDjXDiv8TPaJ/jAR/y0/WqNx8X2OcP+teOS65Iw+8aryay/djWbzmr0OiPDdPqz12f4sM+c
P+tVZPiw6/8ALQ/nXkz6w+OSarz6y/8AeNZvNq3c3jw3Q/lPWpfjBIn/AC0/WoJPjW6D/WfrXj1z
rT4PJrNu9Yc/xGks5rrqdMeGcO94nruq/HCTBxKfzrmdU+NUzk/vT+deZahq7nOWNYl9qzZPzVjV
zmvP7R6OG4Yw0NeU9Kv/AIvzSZ/eH86xb34nPNndIfzrzq81dueTWbca0wPWvPqY+pPdnu0Mlow+
GJ6Lc+PN/LSVm3fjoD+OvPbrXnA+8ayrzxE+T81cksQz1KWVx7HoV949yD8/61h6h43aQnDGuIuN
dZs5aqz6oXPLH86xdds9Cnl8Y9Dq5/EzzH7xpi6qZDy1cxHf88NVu3v+mTUc7Zs8Oo7GxfXW6A5P
UV57r82dSfrXXXd7mA89RXCa7cFtRcjmsqrOzBws2fpn+z0B/ZMOf7or2m0XEYrwH9n7xDHHpcIZ
uwr2/TtcieMYYV+u4WaqUIpH8wZnF0sXNyN63TJ57VdgAFY0WtRqM7hmlfxGifxCtHFmMa8Irc3x
OqDOahutYWIcNXMXnixQPlesm68TmU8MankXUJ4xtWgjpdQ1zzM4NZr3Pmsec1jx6mZT1q3BPmuq
nSVro8+daUn7xeVd31qRYOeabb81aC4HNXJWLiuYZHHzgVct05FQJ1qzBywrOR000W4480PBnrT7
c8c9an2AjmsG7HYo3RTWLb2qaNeOadKu3pUPmlT1qdxpcrLSdOKU8jmoFnBp3m575qXE0TRFdQhx
9ay7vTt+eK2SA4prQBhU7GU6Smc1Jpm1ulAt/L7VsXduFzxWdcfI1Unc45UVBkW7bwaGcEVHI+7p
UZenYyZIyhuuKEt1Y9qqSzlSafa3JLUmuhCVzUtdMR+1XBo6EcgVDp82AN1XzdALWbud1KnBrYoX
GmInUVn3gWEdq0727461h6nLuzWtODZlVhGOxTvLhT6VQlVZD061FezkOeaZayF3xWiSbsEYcqvc
e+kCfoopYvB4lOWUVtaXa+ZjNblpZKACRTlRgt0aU51JbSOUg8Dx45SmXfglAp2pXcCBVHIqOa3W
RTxWfs4PobctRaqTPL9Q8M/Zyflql9j8psYr0XV9KEgOAK5LWNLMLkgcVy1cNGPvRRrRxUr8k2Z0
UINWodOWUdBVaLKPg1raeQcZqadOM9y605QV0yD/AIR0SL0qjqPhb5Tha663C7Rmny2izLyBWtTA
wkjlhjasHdHlWqaAYiflrJksWR8Yr1TVfDwmU4WuZ1Lw2Y2Py14WKy1xd0e/g82U1aTOWt7Esela
VtpmRyKtx6d5TdKvQQAVhTw1tzoq4tvYoLpgxyKJNNAHArWEIFI8AatnQVjl+su5z09iR2qs9sR0
rpJLDf2qpd6eFB4rlqYZ7nXSxV9DBZdp5pCM9atXkGw81V61xSi4ux6EJcyEWPLVo6fprTEYGaTS
dNN1IODzXc+GvCm4KWWu7CYOVdnnY7HRoK3UytJ8LtLjK9a6LT/BwwMrXTaZ4fWFRla1YNOVR0Fe
5TwtKktrnz86tau7t2Rztl4SVcZWta08MooGVFbENqq9qtxQjHatW1HZELCqXxO5kJoCAdBTZdBR
hgCtsxfSpYLHzD0qedl/VIy0SOVuPCQm6JmqjeAd7/c/SvRrTRweoq5HoiAdBWcpRe6NYZU3qnY8
2tfAQQjKdPatG38HInVBXdNpKqOBUMljtPSkppbIr+ylH4tTl4vCqd1FTJ4RRv4B+VdFHZ/N0q9b
WQ7ih1Gb08upvSxx8vgZZF+4Ko3Xw9UnOwV6UlkoHIFNlsEYdBU+1NJZPTavY8oufAQT+D9Ky73w
aIyflr1660tWB4rE1TRAc4HNUpRlujhrZY6esWeWy+GQvUVDJ4ZDZwK7e/0rYx4ql9h+bkfpWip0
30POcasHa5xc/hMt0Wq58HsTnbXo9ro4l6jNXU8NIR92s3h6PVHVTjiGtGeZ2vhMqRlcVvaL4dVH
GVrqLnQRH0HSixsPLl6VrCEKfwoh0ak5WqMv6Bo4jUcV0dnZhR0qlpUWFFbVrHyKynI+iwdFRiki
a1tgMVpWkWCKrW6VftEyPrXPJns0o2LVsnerUa1HDHgCrCL2rFs74RHxjP41LTUHNOqWaBRRRSLS
sFFFFAwooooAKKKKA3Ef7tRSVMRnrUbp600zOS6FdhwfWoyOxqw6etRsuetaoxkirLHnOaoXdkHz
Wk33uahlj9a0i7HLVipGBdaIJDyKpyeHV3fdrpGXnFQyLzXTGpJHnVMNB7nPHQEHYU06Gv8AdFbk
sWagMWW6VoqjMHhoroZB0Reyj8qfHo2D0rYjts9anS3UVLqMccLFmZb6Xt7VbisR6Vb8oU1ztNZt
3OmFKMCP7GB2/SmSW4UZxU3n+9NkkBBwak0aRWdQM+lVLgqQc1PeOVBxWTdXewnJq4xuc1WaiVtW
txIh9TXBeMNILo+0V3Fxe+ZnJrG1aBblTxmuqmmjxcbTVZaHg/izSpIpGwDWHpelvPdqrDvXr/ib
wqLonC5rI0LwKVvlO3v6V59fLnKpzLYyo5k6VN05LU3/AIVeD95jLJ1xXuvhfQ1s7dfl7Vy3w58N
C1iTKgfhXolrCI0AA6U68krQjsj28nwdourPdigbRxS0pOTxSVzH0L2sNZsHAptOcHNNwaCQpHJH
SnBc9TSHrQA1ST1qWIZNMAyeKnjTAoBakkS5NWAMCmQpgZqSs9zdKwEZHNVbmLrVqo503Cncclcw
72PaaqN941q6hDkGsySPmt4s4KisxlJv5pSMdaQqD1q0ZC0ofHWkopjJVkpzLvXmoVPzVKhz1qWi
k7mF4n0Nby3b5ckivB/i34JwJGVP0r6TuIvNjINeffEfw4t1bSELniuijJSXJLZni5lh3G1anuj4
y8S6c1lcsCDwawmn2nk16Z8V/D/2O5kO3vXld+fLlOa8HFUvYzaZ9JleIWKoqRZS596lS596yVn5
5qeO49DXOnc9J0zUW4p63GetZ6XPrUq3APWghwL63O3kGnG6z0rPMwApn2nJ6muijU5XZ7C9nc9X
/Z6+KH/CMeIzpWpS4sNTYAEniGborfQ/dP4ele3302Ac8EHB9vavjuK5KOrxsQwOQQcEfjX0h8KP
iCvj3wXFLcODfWQ8i6U9SR91z/vD9RX1GXYjmjySev6f8A87GYez54/M2NSbcCTXkfx60ONdOivr
cAMkgR8dwa9a1FuDj1IyK5Hx7pa654du7UkhpIzt46HORXTjY+3oSXUzwnuVEfO8kvBqEzgd6Zes
YJHSTKspII9DVOW6x3r4KejPoowNFLraeDUoveKxPtnvT1vj1zWfMN0jWe7yKhkuaoG+zUcl56mp
chKkW5br3qay1Al9oPJPT1rFmu+vNNhvtkgO7vXXgK/sKyZUqPNE9a+Bfh+fxP8AEWxSyhWYQ/Ph
l3DPQcYOTkjgCvoX9oz4eavr2haToer6va3TPFFq7RFAiaeMMDC/fOAPcnqB34f/AIJ232iRfEo3
vjiVhaWNs1wGETMBIuNobaCSvLHGOSBXo/xN8Y6Vd654q1zQYmaxkDBYmJU+XwBjnI3lR3BCseOM
V9lKhTrYlKVG6UbuTinrJ2STe3fT0Z8ZmmZYnD2jTr2XPyqCk01ZKTlKK3T+FX000POfGfxpvRZx
WPh+PUZTZJ5XmTXixQsqhQrKE+Y/MCeuMYFcAvi3WLi6U3Vvp8hwADJI7Yxgdz7Vxer+NpkubgW8
o8tGHb1Pr6ZrLtPG1092RPc+ShDNuCbuccD8TgfjWccLkWWScKVFavtFa+up9JLGZvjop1azenVy
/RntNh8atR8IeAJNDuru3fT7iaOaWEwKSWQ5UI+NwXseecfXOEv7R8djq3nnTVuJHyNryhVQEYwA
F6j35OM15Mt1NLMz3YuJCFJBxk5x157UjyS28qresGCEcZ+X1xkfWnUzi8r4aKhF+V2+mpyRyOFS
DVe8r69l17erPpD4VftQnwz4p0/W1sLJZ9NkMkQJzuBUowYqATlWYZ5I96y/jr4gvvEHxBl1PxXt
XTNUla8UwK01nPubduiUELIvOCudwOcivBkllkkXazQ853LnK88CtnSvjBrngdJYbadvsrnJheNZ
LeT3aJgVJ98A11LH0tMRKC5rWb7pO9vLXy1McNkcKV6UW1G7aS6Nq17Py/4ZnYarpvhDWoZYrDT4
IVkbcr213sdc9QytyV9sZFVtK+AdvrXxM0DTvA2qWG6cNeiK8vFDS7SNscbAHLORgAjtk8c1zWof
tDWmqRQjWfDOiMYiQDDC8QPuQrj8uBzVvwh8V9Q1DUZG8MRW+nWzTqxtrWIJ556r5jZ3MMgdWxkC
olVweP8AdpU4xnffR/8AD+ex2TwNbLacqnt5SVno79V6/l6npPxqvbvwf4C1F7C7tbLUbK2EiRiW
RtrlmJUl+CdoZSoxyoOORXx3468eTXlrai6keWZoZJZXZsnfM2T+SBa+q/GK6b4q8ZC5u3eS5v7V
LiCBmfZJuSQSDy/u5yrHPWvhzxNqObmQAj5pGwPQA4A/QV4OdYCjhKqxCilKW7S1072R9Vwrm1bF
4OVFuXKtk72V9bK+66FK61AvKTzgdfSrvh8+ZK0jHGTxXPmYysAM8nFdFoUXkQAY7c1z5FSeIxHt
JbI9vGtU6PKupupdbYj147mq5vSj5J61FNc7IcHoaqySl5eCMCv0RVLJI8KFNPU2rbUdqls81p6f
rbxyKWO71z6Vy9vN5hVVJyTWha3eyV84JAxW9Oc5u19DGrRT6HfaIVu3ilScOW5ZR/DXpHhy+8i3
Q7Xy643Hog9f0ryr4eSGGUSy8oo3OCeo9K6d/EklyxaaQ8knAPGP6V7FJPlPkMzourUdNbI3fEut
ltsYcAZy39KpWWqCPTSGb57iTJ9wOn61zh1w6peFA23ecf7qj/8AVVwXsUqK4LFQNiDvx3ryMdWc
p6vY68PhVRpqDRtxXjXE/uf0p95f4Iji+hrNt70QQ7u7dBUM+oCBS7Hk9a83EVfYwcmzohS5nsWb
7VfKTaDzWf8Abi/U1QuL8zzEnoe1CSkCvzXNcwlialk9EetSo+zRfN1xzUMl5jvUBl96jd+5ryeY
1UCSS5JzUMlz6moZZuvNV5bjHU1N2aqBb+14prXlZst56moftvPU0XNFSNKS4JPJqJ5wOpqkbzPX
NRyXo7UmzRUyzPd4FULq+x0NRXN5kdazru8znBrKUjeFMkuL7nrUH2/nqaoXN3z1qv8AbMNyRWMp
nUqZs/b/APapjanjuayn1AY61Wmvye9S5jVK5vDV+eWNOGqn1rmv7SweTUi6mO5qPaA6J0o1gj+K
opdbP941z7amOxqCbVPU0e0CNA3ZdcPPzVXk1wjv+dYEuqe9VJtWz3zR7U6I4c6KTXyD96m/2+f7
xrlpNV9TUY1XH8VT7Vmyw6Os/tw92pj66fU1y/8Aa+f4qDqe7+Kj2o1hzphrZY9atWepl261yMWo
ZPJrV0m5LuMHNaU5uTFKjZHdaNcl2HOa6/RDuAzXE+HhkKTXZaRJsAzXuYWnfVnlYiB12lvgCti2
fjrzXOabc9Oa27OfOK9SMbI8atDU1IpM9ak356mqkb45qUScc0NnHKJKXHrSF/So/MpC/qakVh5f
nk05ZM9ag3j1pVbuKA5SwOtSAY6VDG+4VKpyKzlEykiRRt5qZJKr54xQHIrBqxk1cthvQ04SkVWS
an+dmoZm4kxm20x7j1NRPJ71C822pEoXJ3ueeKY1wTVR7j0qN7vb3FQy1TLTzE96hebGaqve+9Qy
3voak0VMsTXH51Vmn45NQSXfoary3XvUvU2jAfcz9cms27uMA81Jc3Pqazby4PNSzqp07lbULvAP
NYd/dHJ5q7fzZrFvZM55rKR6VGBVvLknoazrq4xnmp7h+TWbeTbQTmueR6NKJWv7vrk1i3t8S3Bq
fUbrAPNYt7c4zzXNOR6FKmSTXvPJzUP27B4rPnucHk1D9r54NZc52RpmzHf89au2uo+9c2l5zzVm
C+6c1SmKVI6C51DMPB7Vxus3W6/Y5rZmv8xHJrltUuc3jc1FSVzTDU7Nn3N8GfGzW1jEN/YV7Ho/
xFcRj56+XPhZqxWziwewr1TSNXbYPmNfdYHETUVZn4nneW051ZNo9qg+ILMv3zUo8ZvN/HXlllrZ
45rWs9YJIya9mnXnLdnydXLacdkd8NeabqxqeC8Ltya5Kx1POOa2LO/BxzzXdSa6nm1qPLokdRZX
GcZNa9lLkCuWsdQHc1s2GoDI5r06M1Y8XEU2nc6Wzfgc1eDZ6VjWd4CPrVxLwAdaucRU6iSLocKa
mhk54rLfUAvenwakCeorJxZ0QrK5vW8vpVpJcj1rFg1AdiKnGpAd6wlF3O6FVWNGV91U55Nveom1
IEcn86qXepjHJAoUWKdVWLX2zaepqWK6DHrmsCTVhu4NTWupA4yap0zGOIV7HRxSZFSGUbax49TG
3qKG1cDuKz9mzqVeNty5fScGsa9kwxJqW41VWHWsy9vgxPNWqbOWtVT2FMwzzSl8jOaoNd88GlW7
year2dznUu5aaPealt7bByaZaSeaRitCNAF6VDhY0jFSHwt5ajtSyX2BwarTzbO9VZbrnrVRpXNe
fl0LM91u71Ru3355pHuaryz5PJrojSsYzqXM++h3OcUmnwESDdViUbzk0iOIulNUfeuQ6r5eU29O
kEYFakN4AODXLx6kE7irMGrAnr+tVKjcunXUdDpftW70pGuM1kW+o7+9WVut/WueVKx1Rr3LMxEv
WsfWNLEikgVqRybu9PkgEqVDjbQJL2i0PPtQ0828hwKS0uTEcGui1/TeCcVy11mCUiuWcPZu6NKc
3VXLLc3bS/4GTWjbXG6uUtb7BHtWzp15uxzXRTkpowq0/Z6m6IBKO1Z+q6QHQ8Vfs5wy81Lc4kjO
amUL6MVtOZbnBapY+S546VTEgBre8SxBATXIXd95MhGa8LFJUZHtYJuvA1km9aljIbnrWHBqoJ61
etr/AD3rCFVSOipQlE0woxz3qrfKNtIb76VVu73IOTWk5RsZU6crmXqQwTiqttb+bLgetT3knmvV
7w/pxlmGR1NeaqXtKlj13P2NO7Oi8HaBvZSy16PoukrFGvH6VheFdPEUa8V2NlHhBivpKdNUYKKP
m03iKjnIelsFFP8ALx2qZYzikYZ4NS3c6nGw1OtTxnJqOKPmrEUeTxUyJUWSW0HmsM1r2Nj0yKi0
6zyRxWvBCEWsZSPRw9DqwhhCDtUvAFMPWiszttYeQHFMNqHp8QzVqKPik3YpQ5ymtnt7VNGm3rVl
o6hdcHNTcr2aiOBz0psjYFNBx0psjZPNCVwbGtyOarXFuJAe9SySYOKRW3dasxdpaMwdU0sMDxWM
+mFZOldlcWwkFZt3YYJOK1jM86vhE3dGZZ2wjxkVfjwFqu4EVCzehqnqKFoaDrmAP0FV47PD9Ktx
vv4apoYtxGBSvYp01N3JtOixite1Tge9U7SHaBWjbLg81lJnp4eFkWYU54rRtIsfhVO1jy3PatO2
TCisJM9KlEniXFSp1NMUYWnp1rN9DsRKnSlpE+7S0nuUgooopFhRRRQAUUUUAFFFFABQRkc0UUCk
ROOD7VE471O/3qjZcGrizGSuV3jzzUEwwpq2646VVuOhraOpzVNEVZDg/hVd/vVPIetQuMniuiJw
yEC7ulBtz1qWJKlKCk2CjcqfdFNL88VJOME/SqskhB4q4xuZylyllJc9aZP1OPSo45N3XrTy24YN
JxsUpcyIGk2mk876UTrg1WJyeatRTMnJodcneKwtUypNbZ5FZWqx5U4q4qzOWvqjnrm6Ktyaga4D
cE03VGMbGs/7X82Ca64x0PFnVs7F42y3Jxitfw94ZV5VIUVk6ZNvkHvXdeFIQyqSOtc2IbijswVC
Feaujf0HTBawrgVqn5Vx3NNtkCRjApz9a8pu7PsKdNU4pIbR9KY7c0ByBSGPA9aMD0opGbH1oANw
FIXBphfFAfJoFcljGanjXNQQVahGTzUyNIK5KBgUtFFSdCSCgjIoooE0UryPKmsq4XDGtm7HBrGv
Gw5zWsDkrWRD9aTAPTFRyTCljkzWtjkvqSdKKAc9KKGtCtLDSQp96VWzTScmkB5p2JJwdw5rE8VW
YntH47VsZxVTWE32zZ54px0dya8VODTPmD446IEMhA9a+efEMflXD/U19VfHOzBglOPWvlnxoBFe
P9a582jtLuYcNzs50+zMQzc9akjuMd6otcYPFC3WK8M+z5DViueOtSi5HrWQt4O5qQXnvTuS6ZqG
5z3NJ52e9Zy3We9PW5PrRzMn2djRWXcMV03wl8fv4D8Ywzyufsdx+5ulz1RuN2PVc5/CuNS5pxuM
ZIPGfXrXdRryg1NPVEyp8y5WfWt5cBhmNgwPQjGCOx989c+9YeqvkZYkjGaw/g943Hi7wHElwxa6
0zFtNzyVx8jfkCv1Fa2pzbgSBjnpX10asasFNbM8V03SlyvofPfxa01tH8YXXG1Lg+an0PWuRmn5
616v8fNDN/pcd9aqWa0ysh/2D/8AXrxq4ugCa+KzCi6NVo+loe/FNE7XAHU003mO9Zs18B9481A9
/wAcV5rZ1Klc2Pt49aa19kcnNYrahnoRSf2h7ip5yvYmrLe56VC10Se9Z/273FNN7k9TScilTse5
/sgeJLZfGGp6frIuZFu9Pk8hYZWQ+apUrnHBHHIPFeo+IbXxN4h+GurweFdHu9WM8iW0/wBi/etC
VIcsUHOMDHAxz0r5o+B+uvpXxR0aWCTYXnERPqGGD/OvWvibqV3oXi+4fRZriwO8yK0MpQ8heSQe
ue1fc5TiMXi8G6dGS5r/AGr20X4Hk4jKMBVrPF4qLvBK3LZN3fV9fQ4if4VeL7q9kTT/AAx4jLO+
GUabMSQPfZWxpP7LHj/UW3LoVzZptJLXhW3xgE4wxyD9RU9t8bvG76hBZ2virV2D7VwJSSq55wfb
1rI8feJL/VvFVyL++1C7WBhEFluHk52jgKT1Y968GrlOc1q7hUlTirN3XM+vqj6SE8ohRVWCqS1S
t7q9O5iJY3On6q9nqwkWW1kKyq0u1Vw2GGQOenY16h418L6ZqvhjSZNOuILWSKNo3CjG7DNglup6
r27V5/41sf8AhBvGS6OPLup4YES7BBYCdk3GMH0XIH51Xlsb82qXQmXzoydmXPyHA5HYYr28Pl0s
VCNSjd+aWh5jxMMHKpQrxSvtd6+l/Il/sqO7JVdSglkRyu0Mc5zkdvY1ia54d1SZml0mGW6jZd7i
3cymJQcAvgfL+NdToHgTWPF0c1z4bivL2/jIEkSWhLTA91wdob0GBnk5r0b9kHUvtWraw/hu/tdI
8VRIsV1Z3sYYTRh+3HrkEY49a8njDF1eHMrniXC7Wtne33pNr7rHp8L4PDcQZgsMpqPz1+4+ZbyO
9viUFvGrWincxIjzzncSTyefStj4XeIo9Dvb03rNtlt/lAU8srKcZ/E19nfETwb4F8ZaVPJ8YtC8
N21/CpZ7rTla33jn5iVA5r5R8VaR4e07xskXgF5m0tUYh52LFiBghSefTr+HWvnPDzi2PE9WbpUJ
wlBbtXh6KS/yPoOL+D1k1KNOpVjKM3Zq/vK/W3Y6XVPHC+IZtFPhad5vssDJJJGpAjAVmbJ/ujLc
18aancmWVuCBk9frX1x8Ubo6F4WcWVy9if7HnjcQRgyyMVkPPtztJ4wORXyE2ZJQD0B59q+s4hnP
ETpvuvmfO5DgIZYq2GTbcJNa7W6WJ9Ht/NuQ8g+SulsVG75e1ZtrbrDbxlWG49q1rCLbjjOelerk
+GjhqaSNMbW9pdkWoyBHAHFUwCHO7/8AXV7VYtrAnt1qgLnbK3fIxX0Ot7mFJ3joSWN20d1mMHB4
rT0/E0mMDJPJrBt5MSErz2re0FdqBjndmurDe8zPFrkTZ11tfixsxFAQoPLkdTUGr+I3gtcRctKc
D6etURdDHPPvXM+KddMU0hR87RsBxXqYjEKjTdjxsLhfb1NUdRpPiHzZChZcsNpPoo/rWxb6wM/M
7HbyPevL9D1l4UODlmO0Z7/StyLVXj4ckkjivm41vaPnkelWwfLKyPQrbXt8mS2Aox1qtqfiITy4
VuBXEXniv7BBtV8M361Tt/E5dvmbOa+T4hzTkj7KL1Z0YfLn8bR3sWpBjkmrMWojHWuIh8QZ6Grc
Wvn1r4hSu7m8sKzsRfgjqM0yS8B71zCa9nq1P/trPeqvcz+rNG1PeAdCKpz3nXms6TU9wzmq8t9n
pTNY0S7Le89aryX2D1qjLeepqtLee9S2dEaRpPqRHc1E2q4B5rInvcZ5qlc6nt71EpGyoXNu41UY
OTWdc6oCTzWLc6yfWqM+s5zlv1rCUzohhjclvwx61BJegd6wZNcx1NVZ/EA55rGUzdYZnQy6mFHL
VUn1Uetc3c+IevzVQuPEXPDVjKZvHCNnUyawBnn9aj/t7aeD+tcdN4hP96oG8Qe9Z85usE2dwdfD
Dk1G+tA964ka8R/FS/2+e5o5xrBHWzawD3qvLqmSea5g65nqaDrOep/Wpc2WsK0dA+pc9aibVDk8
/rWC2r570xtUGOuKXMWqBvjVCD94fnUkeq5PJFcw2qH1NLHqpLdaalcv6udjaX3mOMGup8Nx+awr
z/QrozSrzmvS/B8GVUmvSwcOZnFiYciOy0KLZGM+ldFYzbMZrD09hGgrRt7j1NfR0lyo8OouY6bT
7vkc1vafdZA5rjrG6wRW7pt705rri7nmVqdzqYJcipw3oay7O8yBzVxJsjmnY82ULMsFie9J1qPf
noaUOaVmRyjycCkV8mk8yjcBSswaJUf86sRy5+tVA2elSxPk0mjOUS0G3UFsHmo1fP1pzPkc1jOJ
zuI7cPWl8zHeoHkx0qNpvU1iw5bllpB681BNMBUMl0AOtV5brPtUspUx01xjvVaW5qOefPeq0k9Z
yN1TJpLkmoJLg+tRPNuNRSNUPU0UCV7j3qCW4NIzYqGVsUmaRiJNL61Qun+U81PM9UryWoexvCJn
30nHNZF41aF/Nknmse9uMZJNYTZ30olK9lwDWNqVzjIzV3ULrGea57VL3Gea5ps9KjC5T1G65PNY
13c5PJqXUL7k5PNZNxd5J3GuObPVpUx002Sc1EZqglus96ga4561lzHUol3zwOvFOW6wetZxufel
W5oUh8hqSXn7vrWBqNxuumNW5brCHmsS+nJuDzUylc1ow1Pqj4Y3hW2j57V6jpV+Qg5ryj4aRE2s
fuK9M01CEFfaYKT5UfkWcRTqM6S01Lnk1q2mqYI5rmLfIq7DMVr1o1Gj5mrQUjr7LWtuOa1bbxDt
P3q4e3umxwTVyG9YY5reOIaOGpgoyO+s/EuP4q2NM8R5I+avN7W+bPU1s6Zetkc110cTK55eIwEL
Hp9j4jAUfNVxvEoC/erg7O+bA5NWJL5gvWvVjiZcp4UsBHmOmu/Fe08Nii08Wbm5auFv9RYHGaXT
tQYt1rl+ty57HcsshyXsenW3ijIHzVYHiTPVjXD2V2xUcmri3TDqa7o1m+hwSwii9GdW/iTjqaz7
/wATkA4NYrXR9ao6hOSp5qKtVpaFUsIpPU1G8TFpOWrT0/Xyw65rhlkPncmtvTXOwZz6VhQrSk9T
qxGEhGOh1o107eM0yTXTjrWKHI7mkZ8dc138zPN9ikacuvEnlqibVi/OazHJzT40J+tQ23oaKlGO
pbk1Ig9c0sGpFmHNUp0IFJZZaXmoV72NeSPKdXo8pfGa21P7usXQovlXitrbhBxXRKJz0tEUrxsC
s+R8E5NXr41l3b4NawiY1JaiSXGAearTXnpVe6u9ueaz577nk1TlYcabluaZvMZzVW71MIDk1mT6
nsU81k6nre0HmonUUUb08M5M2X1zD9amt9e561wtx4gw33qktPEGSOa5litTveA93Y9M0/WdxGT1
rYtNQ3gZNecaVreSPmrp9K1TfjmuuE1UWp5lWjKg7o7C1uNxrUtmDLzXOadc7sZPWt2xm4+tY1YW
NqFTmINZtQ8bcVwniCDypGwK9Fv13xn6VxPim2+ZuK5akbwZonyVUznIJTvGTWxpsxBFYqrtlwK1
LJ8VlQR04izR0NndHAwavCfenWsazkzWlA2VrulG55sZWdjK8Sx7ojivONfZo5m+tepaxB5kJ4rz
rxVZFZW4rwM3otrmR72S1UpcrMS0uSXrWtZzt681k2sGJOlasEfy14lCLPoa/LsWDckdSagmuSel
NkzSIhc8Vu03oc6SWo+1t/PlFdf4Y0naVJFY2h2PmSDiu60ayEUS16GBwyvzM8jMsU37iNnR4/LC
10VkdyiuesztNb+mvlQRXoTRyYZ20NFOlNdPmp6fdpcZrnPQa0Gxrk1oWFtuYZFV4Uy3Fa+mwetZ
SZpSp8zLtlb7F6VaK7RSwJtSnOu4Vg2etGPKiCk2809kx0pFXJoJauS2685q5EuKrwrgCrUQxUM3
pqwSLmoZFq0RnrUUiYpFyVyqy46VG/3qndagl7/SqiYSVitK2KISSaJhzRCKoxtdlmKPetQ31r8t
XIFyvNFzFlDU82ps6d4nKalHsJqksmGrX1iHk1itw1dMdUePWXJIu27ZYVftBkj61mWrcitOzOCK
Ujai7mraJmr0MeKpWR4rSgXJrnkevSiWrSPpV+MYIqtbL/hVlfvVjI9CCsiZTkU9O9RKfmqWPvUv
obJ3Jh0FFA4FFSXEKKKKBsKKKKASsFFFFAwooooAKKKRzhaCZDCcmgjPWiimmQ2ROMA5qlc1el5z
VC5PNb0zlr6FWU/zplK5y1A6iug896sljXAqRxgCkjGcUsnSkbJWRVuRzVCQ5ar12cE+1Z0z/N9K
3pq6OOtKzHq201MDuFVo33VYjOackTCQk67lqq6c1cf7tVJWwTmlEcmMKkVS1GHKnHerwfPWorqP
chq0ZTXNE4jxBBjJrnJZNkhz2rsPEkGA1cbffJKa76OqPl8Z7kjU0WbMo5r0fwfJlVryzR59sowa
9H8GXWQvNcmNjoepk9S8kd9CMxjHpSuMim2TbohT5BgGvF6n226K54NFK4w1JTIHr05pJPWlQ5FI
470AQ0U5lzyKbQRYngOTVyA5NUoDyKu25xUyNqZLRRRUm72CiiigHsVr04U1g6i+CcVt3r/Kawr/
AOYmtqepxYllF5MHrTopOaa8eTSou2ujSx5ybuWUenM+RzUKnIpxYkc1LRspaAz+tCHBpD7UqjJq
raC6kynIqtqrYt2+lWE6VR12by7Zz7UluFSVoM8O+O0wW1l57Gvkvx7dj7dJz3r6b+P2rBIZRn1r
5M8cX++8kOe9c2cStGMfIz4Xp+0qVJ+ZlSXnzcU0Xh9azHuiXNPS4z1r53mPv/Z2NNbs9zUiXOaz
klqRZadyXA0Vn9DT1uCO9Z6zU77QfU1VyeQ0Pth9RS/bzjnk1mPc+9Rm6OevSnCpysXs7ne/CH4h
f8IX4xhNy4WzvP3FxnoFJ4b8GwfwNe6aldjJ5/XNfJNzemPknqK95+GHjX/hLfAVpNO5NzbA20xJ
5LKAAT9VK/rX0WV4rejL1RxYzCXtNGn4h2XsMsNwAYplKMD3Br5p8TI+j6vc203DW8hQ/hX0Tq9w
NpL/AJ14R8erD7B4jF7EP3d6vzEf3x1/TFY53Fygp9jsyyG8Tk5dQJJ5qB77jrWbNenPJqE3me9f
Kcx7SpGo16T3pv271NZv2nPekM/vU3H7M1Ptp9aaNSGfvVmtcsBgUwTk9KG10K9kjp/C+ryQa/Zv
bEmVZk24653DFfUXinTdK1LV7lPHWqw6QyrFhmBYvlBvA2q3TA/Ovj/SmMl/EpYplwAemORX0t8R
oXvLa0hZmcQQB3A5LDavzFT16mvt+GKVTE4epTpzcXdaq19n3PNxlalg25VaamuW9ne2ko229e5p
W3gPwzBq00ugeLtHZChWFbosrox/i+ZVH0PGMiqHiu88M+ANZk1ew1Sz17X0fNha2rGeGGbA2zSl
Rg4PIXJ5HSvMPEphitvM0iHUI5LsqQ08yFCucNsAHHzAc9xUnw60RtQvLloBNDOq7ncr8j8nLAYz
6V3xy3FYuvGjUryktmrJXW+rSD+2MPhcPKtDDxi9Gnd6Pba72/pHf/CTwjHr/wDaeu+MTLeLEGmc
nmS6kZtqjAySXk7egNZP7SviFfC2lt4bth5WpRSoNTWLaY4n27zFuGclMqp7Zz6V6P8ADfHhb4dW
lmkGbi51j+1LqXeWeCKKItCgB4BMhJz14ryjxN4Ef4hSk6fveaaRmcqRlC2W3uc85Oc59a+mxWGr
vDSw1H3Vt2vtd389flbax8VhsdhKmMeJrSvZ3vf3Y7pad9Llf4GePrm0tBdCO7aTRZQWmgkZfMVw
Rhz6qeVPY81yPxG1i+8Ka7b6jo081vI7GRWLnzA2Opcc9AM889a+mdP/AGadL+FnwXhbStU0ltUu
7RW1CL+0DcT6gZgrxyLAq4t4oSVQb/ndi5IUBd3kHxL+GS65ZWMSNbYmu0i+0yOUhQsOSWxwB1IH
OAeOlczprMcodGSvOOl35P8AFW/q9zuoZlRwua89N2Uu3Zq/y1PIde+IHiDxZBv8SalfX/lozsJr
kkEdsDP0q/4I1+8vZobmG2kLxKkCpsJEp3AEE9ieefauy8NfAm5kKLZQWd+Y3kLu0q+ZPGHKK0UT
Mp2ZB5/PpXW+DfhzceFPD19fa79mtlEuxbUuJ5gdhIZdnyqOR1YnPavGwGVSwOsNP7ttPvPqa2P+
vOMp6x3u30T10vfyHeLfE9jP8ENeTWZI1ubnR5Rbutl5rmTJ+Qv5i+WAM/NhvpXx/ZxK8weRgwwC
NvavpL4hSNf+EriOwMbRPaMD8rLjg9MjH/1+tfNltCYYMqyt5mOB/D7V5OYYf2U6Mpb2d/vPcniP
bYvFxi1yqStbs4pmseXVocn61Zt70xnCk5B5qjDJhCM8kcVLbElVwSSeCK9fDytZnBVjdamk4N1E
QxPJ61SuLXyDl+nrVy3fZCQUBJ7nqKzdWumkDbnwqD869WpWjTp8zOajdy5VsRRTKrZDDmuk02RI
7Zc45/HiuIMp3ZQbR35ro9MnD2oOc9DXNlmNdWo4l46j7qNbULxbcPIpBVVOOMZH0rgNc1IzXHDZ
yeQe9dJ4kv8AyrXaWHzg44ri3uBLPgNvZ+/YfSuvNsToqaerNcqocqc2jUsLwuMyg4UfKB/OtMa2
JIiTw6jPJ6/Sudub1bNNmTn+LHpVLW/ECQ2vlwNuY856FP8AGvExWLjhqW56KwjxE1oXJ9Zm1C8k
EIdyisxA5wqgkn8BmlttZKEbjzXJf2q3mltxJP61Kmp9McevvX5bi8W8RVcme4sKoxSO7tNd/wBq
tCDWt2Oa8/t9Zx/FV6310gdayjVOeeEO8i1bOOatRap/tVw0Gv46mrcOv+jVqqqOaWGZ2Y1HPU01
9QB6muUXxB70N4g/2qv2pH1ZnSy6gPWqs2ogDrXPSa/6tVabXM9WqHVNI4Zm3damOcGsy81LOeaz
LjWN3fNULnVM9TWUqh008OX7rUc55rPudSxnBqjc6lnoaz7nUPesJTO2FAvXGqH1qjcaqc8GqM94
STzVWW696xcjpjRSLc+pE96py35PRiaryTE9aheWs2zojTRO96c9ajN2x71WeXmmGSobNFBFo3je
v60hvCP4jVUyGmmT8aLlKBbN63qaPtzf3qplyelN8z3pByIvfbj3NH21iOpqkHNKZKA5EW/tRJ5N
T28u5his5X55q9YHLj61UdxSjY7PwhAZZV716z4Wt/LiXIrzTwLDmRa9W0JdsI+lfQYGOh89j5am
zFLtHJqzDc4bms8PxzT45sHrXqqVjyHE3bS55FbGn3fIrmLS4wetatndYxzXTCZzVYXOv0+9yBzW
tb3G4cmuSsr3GCDWxZ6hwOa6U7nm1aJvq4bpS1QhvQ3erCXOR1zT5TkcWixuPrS76iEwNL5ooaIs
TK/pUit3FVvMHrSi4wetTYlxuXllyPeh5c96qLdDvTZLwAHJrOa0M3TJ5Jsd6rTXOOpqrcagM8Gq
sl8D3zXHJgqZbkus9KiefPeqjXme9N+056ms27mqhYsSPUDtkn2oM2RTSwwallpDWk/CmNJ6Urni
oXapKsOeWq80uBSTT7ao3V3jOTSkaRhcdcXIUHmsu+vQAeabe3+AcmsXUNSxnJrGbsdtKlcff3+M
5NYmoakOeag1LVcZwa53VNZ681yznY9Ojh7lnVNWAB5rnNT1bJPNVtU1nOea5/UdWJJy1cVSoexQ
wxcvdUGetZk+pA5wazrvUyc81Rlvyc81yylc9KGH0Nd9R56imNqI/vCsRr4k8Gm/bz61m5G3sTa+
3AnrTlvR61h/2gfWnLfHPJpKQ/YmzJejYeay7q5/fGmG8OKo3FxmU5NEpFQp2Z9nfDC1JtY8dgK9
O02yzGMiuE+FtpmzjOO1epaVafIK+9wMbxR+HZxU/eMhjsCMZFTJZ1ppZfLyKeLT2r1VTPm3WZnx
22D0qxHBVoWtPWD0p+zIdS422j+YCtnS4ySKz7eLn61t6VHyK6qENThxM7I1bOH5aknXC1Lbx4QV
FeHapr1XG0Tw1K8jH1A/Madpf36hvX3SVZ0v7wrz4q87nqt8tM6Cy6D6VejXIyapWXC1fjHHFepB
aHjVZajWGDVO+TJrQaPIqpeJ8uaVVaDpS1M2GLdKK3tOhwgrLto/3tdBpsOVFLDU9SsXUtEelvkc
042vFXIrbPWpfsvHevRVM8l1dTK+ynd3qzb2vHAqw1tg881Yt4MdaagkEql0Z91accDpUVnb/vhg
Vq3cGV4qC1h/e5xUunrccaj5bG7okPyitdo8pVLRo8AVqvH+7NRN6nTSh7piahH1rD1Ftua6TUY8
5rnNVjyGxW9PVHHVXKzB1CfBNZN1de9aGqKRmsK/cqG5rCpJo76EU0Q3+o7FPNcxrWsEE81oapOQ
rYNcnrc7ZbmvPxFRpHt4OgmyO51khzzUllrJ3jk/nXPXNwfMPJqawmbeOehrzVVdz23h1ynoehaq
WI5rtNBvd2Oa8y8PzEsOa77w5ISFz1r2MJUbPmswpJXO+0i4yBXRafLkfrXKaK52iuk01+n5V6VR
XVzwKL5ZNGrK26H8K5XxNFkGumL/ALvn0rnPEJyprjte50VXqmci8X738avWi/KKrzJmWrdoMYxW
dKGpvVneJoWg5rUth8tZlrwOa0rU8V2taHApajruHdEa4rxVYhmbiu5nGYzXL+JY9xavPxtPnp6n
bg6ns6yscVHZhZOauJb/AC1L5I8yrEcGVrwoULH0U69zPeHnmnQw5fpVx4OeRToLfLdKfsdQ9voa
3hu1y6122n2+IhXMeG4cOMiuys4/3IxXq0o8sEeHVl7Sq2JGu1q2dJbOKytuGrR0tsEUp7GlHRm5
GNwp4XBqO3fKipa5mepHVEtqMuM1uaanArFtRzW7pw+UYrGodeHWpoDoKKAM9KUJmsT0hCM9aFUZ
pShpypg80hcpJEuasIMDNRxLUtQapBSMNwpaKC2VZRg1WnPJq1P96qkxyTVI5qhDIM0sa+velIz1
p0Qy4qjFLUuW4zT51ytNgHAqRxlTWZ1paHP6zH1rn5lxIa6fWEypzXPzx/vDXTB6Hj4qHvDbVcGt
O1OMVQt1wc1et+BmnIKKsalrJg1q2Um7FYUMnFaOn3Pzc1jJHp0Z2Z0Fv0FSg4NVbSXctWgc9Kwa
sepF6EiHOKmTrVdDzViI5BqbGkSVegpaYrYp9S1YoKKKKRSCiiigrcKKKKACiiigApshp1Mf71BE
mJRRQTjrVWIaI5T1rPujzV+VvlJrPuTk1vS3OXEMps2OachyRTJBSxmulI8/qWo+v4UOefpSKcAU
MeDmpN+hTvG4NZspy1X71uKzJm+bmumkro83EPUlhPNWI2wKqRt0qwrdxVyiTTkSSycVSnfLVZkb
5STVGd8HjvUxiVUkOWTmnsd6H6VVEnPWpFkqnEyVQwvE6ZQ1wmrDEhrvfEp+Rq4HVmzIfau3Dq6P
nczdpDdNmxIOa7/wZefMvNecWkmySuv8KX+yRcmli6d0GV1+SaPYdIn3wircgyfrWB4b1DfGuT2r
dVt4yK+cnFxkfolCoqkEyJxzmm1I65PNMIwaRQmcUvBX3pKKBXCmlOeKdnNBOOtAXHRnawzVmJ8V
TD5NTwyUmrlRdi8DkUVHC+Rg1JUHTFhSOcKaWobiTigJOxUv5cA5rGujuOavX8+SRWdLJuNdEFZH
m1pXZEynOaQITT6K1uc1hVXIpC2etFFIYgbdT0600LnpTwMU27gPB2pmue8ZaiLeyfJ7VuTy+Whz
XnHxU8SLaWcg3YwDWtCHPJHHmFf2VJngX7QHiIM0i7vWvmXxVfebdNz3r1b41eKvtV3L83c14jq1
3587c14Wb11UqtI+k4Wwbo0FKS1ZF5uTUkcnNVVb0qWNsfjXj3PrWi7FLU6tiqcbc/WrEb5qzKSJ
8+lDNjrTA+KRmz1oIsDvxzVWefnrT7iXFULmfANS2axjcdPd5Xk13v7OXicw67fabKx2XcPmpyfv
p/irH/vmvMJ7jJ5rY+Fut/2L8SdImJwpuFifsCr/ACn/ANCrtwddxqwn52NJ0uanJH0Dqk+chj1r
z74raEPEfhq6iUfvYP3sR9x1FegapAyMwbOVOOa53WrMvbyfLn5TX0+KpKtBxZ5mGl7KSaPmOWQl
qRFZjWvqmkk6vcCJTjzD+HNS2uhM3UGvgpwlGTifROpFGVHAx6Cp4tOZ+oNdBaeHS3Ra1LPwoW6r
SUGc08VGJyC6OzdjU0egu38Nd9aeDc4ylalr4H3Y+SrVPU5Z5jGJwfhnwhNqGtWkNsm6WWZFUY6k
sBivsbwn8Bdb+KnjXUtJ8I6e93OAhfLhUji8uMZd2wFXIY9ySeATxXl/wN8Cwj4qaC97EHhivI5H
UnbuVTuIz2zjFfYXgBLrSrvV9S8OO1iL7Oy12sUuIdzfui4IyFXaOeTjrX3vDtSeFwVadNLmb0b1
V9Fqt+r8vM+H4l4loYecaFe7jJK9nZ25r6OzSfu/8A+WfEP7P1xper31tI1vdNbFoo7iJ99sQjHD
wuQGKseQ2Bx2qz4Z+FN1aatYrMqm3u8+ZMhyw3EA8ngngj8a+m/+EP8ACurXJl1bSpra6XHmPbyk
x/grk4J9O1WdR8P6EsxtfD1hc/Z3YbZLiQF14OQMDgZwc+vWvqKOZQo2Sg+bq7JfPc+AxXE8pQla
Sa7a9V0vvb5Hjev+A7TwdoKz3cgRmRY9jJhRuLqpDZyR8vPyjBPXFUYvDM2l2sVp4a0ktZXCJL5r
xom1gCMZUHdg9xge1e/6v8PLHxr4IubK8jzKjbo5SOQCRwf91sg9sNXnsHwTFtY2baJeX6mykkF5
5kwaOVmb5RFGFG1Rg9ck5HStMPmkaq/ePVPW+3l/W55eFzGjUot1ZpN97tPTTbZ3vdMb8LvD2h+H
tX0+68VwyXsEQmk1BGQSRCUo/kvGh+V/KI43cl5d2BsFeUeJvhi+p+G7XTJUkEck6SCMOSFbbt4z
zk56+gr6O8EfDo63PdQzqxtLCE3V3IeNsSrkjPuflGOufaqC+CYxqUVxeMFEEgXOOjE5zx3Gf5Vh
RxtOlXqNu7aV106tfn91jSnnWIpKlF2UbtxdrX2W/ZO3ktT528Z/B99Dnt0kSKJExa27CPIkCLtZ
wT0y2fqc1W8NfDZl8PavcXO6S2sNu2OP+KQnC98Ack/hX0b8RtEjudUgjskS7s7DaivKCRJwA+3+
6ASeeuc1z6+GbbT/AApqVppyMsd7qW8syDc8aKSRu7DJU49665Y14rCxg1Ztr7rq/wA7H22X5zhM
vxU6qnzKEZWW/vKO9+q5j5n8SfC59QtY7dGlI8rJLtuDBy2Dj1I618hXnhaXTr+aNlOY5Cn1wcf0
r9JD4UVrq7KgEvLkjupr5O8R/DNV8R3qFPmW4cYx/tGvF4hwUX7D2XS6/BH1PDPE1XMcRiauIerU
fwR4gmhvvXapBNXrTQ3iU5AG3nNeqah8N/sjjCHI6YFVbr4bOlu7yfLv/h71NHCSSPfrZrCS30PN
fL2bvNBP0rGvLUXdywQBgfQ5Fei6t4INvDKxyADgEd64HWrOS3vJY4A4Udzznj1rHMZOnTsdWCrR
rNuDMDVJYop/JiDs3QnOADW/orFLJVj+bb1zWddaat2fNhg8sAKGG7J3eorV0qAxWnz4z1571z5N
GSrXZ24ycXTSRjeM7gOQoJBVenvXNWm7zSE28Dkn+GtnxVIRcybcb2OB6KK5+5u/stmyxEgOMH3N
aZjWUsR6HpYKFqSigv8AU440JfOSThv8a5rUL3Lko2Qeam1C7XkfMCPYEVkzz72JNfD59mPOvZxZ
9BhcOqauS+fzwact0R3qoZMdKTzfXFfI3O3lNFL09zU0d/jvWSJvenLce9PmE6aNyLUyO9TpqpxW
AtzipFu8dzVKZm6SZvjWD70HVvU1g/bDn71Kbs/3qftCfYo221Y1E+qH1rIa8Prmozd565pc41SR
qyakT1aq0t/71Qa696hkuvWpczRUy3PeFu9VJrrnrUElwWqJpPWocjWMB7zFjUTyU15c1E8lTc1U
RzyZ61DJJQ7/AJ1Ez56VDdy0hxOaaX9KbRSKFLZ60lNZ/Sm5oAVmzSUUUAKCR0o3mkopcw+UerZr
R0w5kGazFOGrQ0x8OKqL1ImtD0vwGMstep6OMQj6V5T4Dlwy816lpEv7kV9Jgn7p81j17xoM22kD
880x3460zdz1rvPOL9vLg81oWtzjFY0Un51at58YyauMrESjc6K0u8EEGtO1v+ODXNWtz71fhufQ
11Qmck6Z0cGpkHk1ch1QHvXLx3ZHWrUV961spnPKkmdPHqnvUn9p5HWuaS/54NO/tA/3qrnRj7BH
R/2mPWkOpD1rnv7RP96kN/nq1HML2B0Davjoaq3etYU81iS6kQD8xrK1PW/LB5rCrNJFRwtzcn18
BuWqMa6G/i4rirrxDlz8361EniE/3q8mdbU2+p+R3q6uCetSLqw9RXCx+I8n73Wpk8R8/epe2RLw
jO4XU17mnDUl7NXFp4j/ANqn/wDCR470e1Rm8Kzr21FT3qCbUx64rlX8ScdarzeJOPvUvaoqOFZ0
tzqY55rMvdVAyQawbjxHno2azbzxBnPzVEqp008KzX1DVgM81ganrAwcGs6/1zr81Ymo6zuzzXLO
qj0aOGLWqaxnODXOanqpOeajv9T3Z5NYt9fbs81yTqXPXo0LCX9/nPNY15dliSxp95dbieazribc
a5ZSPTpwsMnmyearyS0SyVXkkrFs6UhzzVGZqYz4+tNLE9ak0SJRNnv+tPSbB61WpQxFK4WLXnet
V5JMvSeYcVG7EtQ2CifoB8Kof9Ci+gr1HSYvlFeb/CpP+JfEfYV6bpvyqtfo2BaUUfz3m+tSRpxW
24c0422OwqW1YFccVKyZ6V7Ss0fLybTsyp5XtSiLPapzGc0u0+lFgvYijiw1ammNtas+rVpNsNa0
3ys56yc4nQwy/u8j0qjqdzgHmmJfgJ1qjf3W/PNdVStdWPPpYd812VZ5tz/jV3S5fnFZjHnJq5ps
mGFc1N6noVI+4dVYPlBWjDxisjS5cqM1rQvzXr0tUfP19GWBwpzVK+/rViSYIuao3U248Uqr0sOh
FtiWg/ej610mkJuArmrQ/PXS6K/ArTCrUMbsa8UOaeYfSn24BFKevFdx5iSK7Jz8wp0fBpZDUTSB
aA0Q6Y5FMtl/eD6015d1SW4xIKBdToNGOBWuR8lYmlTbcVsLLlK5Ki1PTpO8TP1Fev1rB1OHOeK6
C+GSayryHJOa3ouxx4iNzkdUtuuBXO6nbEZyK7bUbTdniue1OwyDxVVad9R4atZ2ZxOpQEg5Fctr
dmctwa9A1DT+vFc9q2lbs8V5deldH0GExCizz64tCZOlT2FkS/StyfRCX6VYsNEIYcV58aDuezLF
rl3J9AsyCOK7zw5BtA61haLpOCvy12Oh2GwDivXwtKx83mGIUkb2kR8Lmuj01eBWLpsO3Fb+nrwD
XoVNEeHR1k2WpCBFzXOeIX61vX03lxnNcnr15liM1y20bNqj5pJIyZDmT8at2gyuazzLmStGx5Ue
tFKOppVdkX7Zc9a0LaqltHkCr1sMcmumWxxwetx9w/7s1y3iKXk10OoXAjjauM1+/wB0hGa4MW+W
B3YSLnVKkZDSVcjjyOlZtpMHfPvWrbHeK8ynFM9es3EaYc06KHnmrCJxThHzWnszB1TU0HCuK7DT
mzGPpXG6VIEkFdXpc+UHNdFvdOSLtN3LkiZNWrLgioCN44qa34IrN7HSt7mxaydjVpWyKzreT5Rm
p1uMd655RO2E7I0rVuea3tLO4DNcvbXY3it/SLncBzWFRHfhpps3IlyOacU9KbbvuFSVzO56ys0M
K4oUZNPoqbjsSxCpACelRxHIqVOlJ6GkdhNhpG4zTy2KikbC80lqD2K8py1QOu4VM5y1Rt1NWjnk
rkDIRToVx1p7LnrQBii9yFuWLc8VI/3aigbinzNtQ0nudCehlaq3BrBnGZDWxq03UVjyNuc10QWh
5WI1kOhGKtxDC81Wj681ZTpVPUUFYm8zaBUlre4k61SuZ9innmqKajtm60lG45VlBnd6bd+Yo5rR
jl461y2hahvA5reinyOawlCzPXoVlKJoJJk1YhbnFZ0c3vmrcMu4CsnGx1wnct0UxJMjmn1LNk7j
wcj1pajzil3n1qLMY+imByKcHzSGnYWiiiixVwoooqlETYUxjk05jgVGxwKGS2NdsmkzQTjrRmqM
7jJzhKoXB5NXLh+KoXD8muikjkru5XkPX3pEPNI5yaZ5oB6102OBysXIzlaJDhaiimxRNLleajl1
NefQqXr1nTnJq3dybj9aoyNuauylHQ8yvK7JU+7U0b8c1XibtUgbFVJXIhIklbjFUrhuammlwOap
zS8/WlGIVamg2lD4FMGScmiR9qmtGjnUjK8Syfuz9K4XVBmZj612HiGfIIzXJX6739a68NGyPDzF
88ijEu2TNbmiXJideayY4cGrtsfKNbVYXVjlwzcHc9E8Na4IwoJxXYadrCyqPmrxYeJf7P6tjFae
hfExPNCtIPzrw8RhG3dH1GDziNK0ZM9lSUSDg9aVl3VzHh/xbHfRr845roYLxZlBBzXmyi4uzPp6
OIjXV4seeOtI/Tk04tupCM9ak1aI6OtPKCk8ugBtSRN0pAgpRwaBJFuJqsA7hVJZgo5NKdQVP4ql
q7NozS3LjttWqN5NtU8019TQ9DVS5uhJ0NOMdSalVNaFS9k3E+9VG5NWZhvBzUJj+ldMdDzp6sYX
x0pN5qTy/pQEqvkRYQdOaUITTlXHSnhPWkUlcRE4pXwqnNDyCMc1la1r6WURLMBihJydkKc40ldk
HiXWFsbZyWAwK+dvjn8QRHFKqPzz3rsPit8UEs4JAsg796+U/i78RjfzyhZM5J71pia8cFSd/iZ5
eGoyzjEpR+BHGfEPxIb27k+bPNcRPcb3PNSazqpuJmJOazvtHPevi6tX2km2fq2EwyoU1FF6N+ea
nRuKz47j3zUqXWKhSOhxNGOTtUqS4rPW7GOad9tHrVqRDgaX2nAqKW796z2vsZxUE+ocdcUOQKmX
Li7HOTVC5ufeq0+oc9aqS3RfvWTkbxp2JpbjLVPpF39j1m0nPIhlST64YH+lZ+/fV2xj8wg81thp
2mvVM0krI+t9V00yXLsnIYlx9CBisXXtI8vR7hypO1ST6dK7nSbP+2PDmmXuB/pdlDLnGM5QE/zq
l4v0bZ4YvXcAYjNffThaLPkFXs0j558BeDxrWuzmSNHRidwbvmrmu/DWTQNRYJGxtnJMbYzx6E+t
d98EvC/mPPKVJAPWu81Pwgmo2ckE6Fg4z7qecEV5FTLo18NFpe8KvmzhWlG+h4Vp/hjOMr+lblh4
ZA/hrprrws2kXbRTr05U4+8PWrFtp4A6V83KHs24y3MauNctmZFp4fVcfLWjbaGo6rWnDaAdqtxW
wx0rJzPOqYpvqaPwo0tIfG1i7/wsSvHO7acfrX1p4Yuk0nw3Dp+rRPIsMyzI6t80aj7y47g47188
fAfwydV8ZxXK7gmn4nPHDHOADX0jFGHgM1ztzLz24Ar6/BO2ChCS3bfn0t+p+VcZZlKli4cjvZar
fr2fqZ+v6L5yteWESvbXEjHGMGFsg7G/A9RWz4I+HMHidNS/tBZzPbQ7ordJfKLsW+bLgEgAHOB1
qO9159R8MQWDiOO2tJGaMou15CW3fMR97B6elWtA8UzeH2jmtSTIxBZlbDAeue31rSrUxDouMHaV
9PS+n3rc8DCZhg6GOp1akb0/tK3Vx1srvaW3R22toQ21rHo2ogBCdmCEZ/mIK9GIHXkZzzWHqVvb
afY+XYw3EMpk3SOpymwnHfJ68+mOK9GHiex1uZv7asLXe8WJbuJisrA45yvBPT6U+20nwTqrSxXt
zqFgP+ezyKUbPXO4ew7Vxwx8qTvUpy6Xtqvw/wArnbRyani6vLhcZT5ZN2U3yP8AFW6b35ezOT8G
3lx/Yt/pOiWsaLqu17md2VWZY85BkOBtHJP1OBzWV4g8C3tlq7WepWtwk1m3nsrMDEynkNuHDKev
6V6XLpHgnw7ZOb7VxqfyhxZrc7Q46gsiAdcA+9cn4u8a3HihGjQpY2MC/u7eJRhFAACnnke3Sqwu
MnVrOVGDUXu2mtdFp1emmy6a9D0c0yyjl2Gp08dieautIRhJSUY6uzsrRV23dSb1fu9Ti9b0n7Za
SJLNEJI5FAjI2mTdk8dhj1Nclf3QWyH2USPCHbaGGDuI5Y/UAfgBXS308V1dNDasHWUEHKl+QOc4
7e9cZruqmdiqhdrHeMDoTwB19K+twNNvR+p52Apy9mo8tr7vv/WhXsLWLzUfbzIokYnksd3pXhPi
HwsLrxZqMjxqrSXUjcDA+8TxX0fJZpa2tvldvl4Qn1715prOkx/8JLeQNt3PKz5KYAz7101YxxMo
vzPpshx3sp1Wuq/JnlVz4MFxdjC5HcYqyPA0N9dt5kMjnZtXvz9O9es3OiwatEi2kMEEdsgDsDl5
T7DvWto/hXy4oILJUkIfAbH3WPqa9FKnSV2j0sVnjjHzPnLXvhdIqyzW1ojW0YKt5iZU7hjOD0Ne
R+KvgxfXaj7BD5NvKWZGkA+YA4ODX6OXf7Pcd/4HkiKQyjG7A+YZwfTrya8X+LXwF/4RqKO5s/NS
FQXZYwNhYhQFJPTueD+FeFXr4XHtxg9Uz28qzmtR5W1oz4J8R+Ev7Fk8mRFbYSMqSMn6VVmsDYWZ
4HAz04r17x74NibXWPklQHJ5yxPPrXBeOtK/s/T5WORnha6Muwns+eb6H21DMPrPJHqzyHxDtlZ/
mGASzMece1ctfXA8hBnBPzVv+Kzn93bDAc5Y9TXM61+7lYdlG0cV8Xjq755zufomBppRVzHvpcsa
pSNz9Knu+HqrIa/O8ZVdWo2z34RskhrvTDJjrTZH5+tRlsda5DVIkMtKJqhMlBkx1oK5ScT47077
R71W8zHWjzPWncOUtC496X7V2qp5goMg70XYuUstc+9NNwTUBlHammalcfKTmYmmNJnqahabNMaa
k2NRJGlz0pjP6mozLTTJUtlWJGf0qNn9KYZPXmml80hpCu+elNpGfFNLE96Ch5OOtMZs0hOetFAB
RRRQAUUUVEty1sFIWwaRmx0ptNITZJVzT3w4qkpyKntH2uKcRSVz0XwLdYkSvWNCl3wL9K8S8H33
lyrz3r1zwrfiWBea9/Az0sfPZhT1udC33TTKeDuH1ppGDXqnkofG/NTxy81TDfNinrJg80JisaUF
x61eguvU1ixze9WYbmtIysZSibSXNSpc571kx3PvUq3fFbKZm4GqLn1NKLrPcVmC6zTluafORyGn
9qPrTWufes/7RnvTXusDk0c4KBZvL7Yhya5jXta2k84q1rGpCOM5NcTr+s7nIzXFiq1kddCjzMsX
OslmPzVEurkdD+tc9LqW5uaRdQ54NePKpdnd7A6dNZ55JqVNb/2q5ddQ54Jp66ifXNL2hLoHUjXM
jlqd/bmB96uXGoH1FH9oH1FV7Qj6ujpTrno1RSa371zzaiR3qKTUSepqXUKWHNyfWie9UrrVyc5N
ZMuoe9VZ74nvUOobQoF671QnPNZV5qBOcmobi796oz3G7qaxlI66dKwXd1uJLGsy6uCx61LczZzz
VGeTrmsZSO2EbEFzLzgVUlepZWyTVaY1jJnTFEMr5qF271JIetQOcmoNUNZsfWmlie9DHLUlRcta
i7j6mjeaTNFIdhd5pjNg06o2b5qLgkfoZ8LJwLGP6CvRrS7wAQa8o+GV3iyiye1ehWl78o5r7jDV
7RR+D5lh71WdTZX/AEya04JhIvNcpaX2D1rXsdSAxk17eHxKejPmsThWtjZEeaQoRUUWoKy8miTU
EToRXoe1jbc832ck7WHtgDJqtPeCHoar3ergKcGsi+1TfnBrnq4hLY6qOElLdGyNaycZqdLnzx1r
k470l+ta+mahwNxqaNfmepdbB+zWhr+XuqzajZjNV7e4Vh1qwsgP3TXoxa3PLqX2ZtaZc44NbMF1
8ozXKW155Z5NX4dXGMZrtp10tDzK2Gc3c2bi69+tVWl3NVUX3m9D1qaFt3Wq5uZhGnyIt2ore0mf
YRk1hwHir9pc7COa6KT5Wc1ePOrHWWs+Vqdn44rF06+yMZrTjnDCvQXvK6PKacHZiyniqV1Nt71Y
uJQBWZdz7jxUzlZDhHmZYhn3GrsDZOax7aTDc1pW8/FEHdDqR5Wa1pceXjNaltfbk4Nc0175fepb
TVcPgmolHmLhUcToZm3jmqk8e4U61ufMXrmp2j3cilH3TaS50Y15bZB4rG1CxBB4rqri2yDxzWXf
2nB4rqhNNWOGpBwd0cbqNkMnisW90wSE8V1epw4Y8VmG33PXLUhd2O2hVajc5h9A3N93v6VYtNAI
PK109vpQkxwOavW2iAdQKuGFvqFTMGtDI0rRtpHFdDY2PlgcVNa6cF6Cr8VuAK6VTUFoedUrSrMW
0i2itW3fYvNUY120l1qIgjOTWc1cunJQQ7Wb7bGea5HVLoyOeetXdW1jzWIBrGkk8xq5Ju+iOmjF
t87FjOZBWtpwzis22h56VrWCbcVrRiLEz0satsmVGaslvLSq8DYUVBqWoCGM4Nazdjmi+i3KPiHU
vLQ4NcRql/5sx5rS8Q6r5rEA1zcspklrwcZW9pKyPo8tw3JHmZo2EuWresJMiuasnwRmt3TZOlZ0
TbErqbESZHFPZMDim27ZSpZOR+FdjVkeZfWw2Gby3HNdBouobsDNcrO+1s+lW9J1Hy5Bk1lGpZ2Y
50m1zo9CtGEietWUGBWPol8JEGSK2FO4U56GlKXOrk8cm3vTmuD61AH2015s1k1c15rFqK6Kt1ra
0jUsMOa5gPhuDzV2xuSjConG5rRquEj0LTrwSKORWgrhhXJ6NqPAya6C3ud6jmuKcbM+hoVlKJcZ
8dKb5vPaoi+eporOyN3ItRPzU6tjpVGJ8VZjkqWjWMiQnJyahmk5p8kvHFV3fJyaQpyEJx1qOhm7
mo5JfSrRi5DnamiTJ61GX55oBwaLElmKXFJdXGEqB7gRiqF5qQwRmmo3CdVRRX1K43Maz93z81LN
N5rdc1EE55roijzJy5nclib1qfzdq8mq6nHWobu7ESHmr5Rc/Khmp34UdaxW1H991qPWNT+YjNZS
Xe5+tbwp6HlV8TeR3fh3VORzXYWN35sY5ry7RNQ8thzXaaJqm9BzWNWketgMVdWbOojk5q3bzc1l
29wHA5q7BJg9a5ZRPbpzNSJ81Mr461TtpOMGrCvjrXPJHdCV0SGT0pCxPemF/Smk560krl3JQ5FO
DbqhDYpwfNDiCkTB8U4NnpUQk9acH7g1GqKuSUhbFJ5oxUbSelNg2PLbqjdsmmtLTS+aaiS5A5ya
azbRzQzBRzVW6ugoPNaJGNSoooWefrVKeXmo578Z61Wku898V1U6bPNq1kx80uOBVd58GmyT7vu1
C8m3rXVGBwzqFuK696fLc5Wst7vYeTTRqG49ap0rmX1lJWLUr7iSarsck0CbfzSlDmtUrGUpc40H
B4pXnKjrSMNvWqt3c46VSjzGUp8iC4u8GoBcbj1qrNcZbg0kc3PzV0KlZHE6/MzQEvHNQ3U2xTzU
X2oKOoqhqOqAKcGocG2XKsoq7KGtT72OKxJYd5NW7288xjVYPzzXbSpuKPGrVFOVyNbbB4pJ38mM
57VaRwqEt0rm/FniJLKFzuAxVPzJclFabswfHXin7CjBWwa8+i+Kb2l/nzDwfWsr4m+Og7uA/rXl
d74qJuCQ3evi81zS1W0Hsfa5JkKrUb1Vqz62+HnxrDbBLL+tezeEviXFexrmQHPvX58+HfiG9lIp
EhH416l4H+OD2mwNL+tGHzKliVy1d+48RlGKy2XPh9Y9j7osPEcVygwwOa0I7xJBwRXzF4S+PiOq
B5efrXoWifGSC4Rf3o5966nhubWDuKlnKh7tZOL8z17zQe9HmCuAtfihBIP9YPzqeT4lwKufMH51
m8PPsdizag1fmO2e4VOpFV59WjhBJYV51qnxZhhBxIPzrlNd+NcaBtso/OtI4WT3OWrndJaQ1Z6x
qvjOK1U5cVymr/FaO3c4kHHvXivif41GQMI5P1rgta+KMs8pPmnr61b9hR+J3ZwvEYzGP92rLzPq
PTfitHcSAGQH8a6PTfFkd4AQ4Oa+N9G+KUkMwzIcfWvRfCPxiGF8yT9a0gqNde67Mh4jF4N/vVdH
0vFfLKOCOak3BuhrynQPitHOq5kHPvXT2HxAhnX74zUyw0onbSzSlV3Z19FYEXjKBl++tR3PjeCI
ZDrUezmzpeLpWvc6MyhBUFzqqQKSzAYriNW+J0Fup/eD864fxV8bYrdWxKPzrSOGdry0Rx1c2hH3
YavyPTPEPjmGxjb5xx715F8SvjLHaxOElGcHvXmvj/4871cRzfrXiXjn4rTag7/vDz71y4nMKODV
oayKw2W4vNpJ1Pdj2Om+KPxea+kkCy5znvXi/iTxM99KxLZzVXXPET3cjbmJz71gXV4WySa+QxWN
niJc0mfpOVZTTwUFGKJri93E5PNQ/bNp61Sln681Xku8Vyc578aZsLfe9PXUsDk1gHUNvej+0vem
plexOiXUzjig6mcdcVzw1PHc0h1PPen7QPYm8+pEjrUEt/71kHUs96Yb7PelzjVI0nvS3ekSfcaz
luN5q3Zjc3FLmKcbGjbIXYVvaNY7yv8AWs3SrXewyOtdZoenj5ciumh8SZ5+IqcqPrv4EZ1/4J6D
Mfne3ie1fPYo5A/8d2/hitLxvofmeEr9VUEmI8VS/Y5H2/4TXlo4ybLUGI9g6Kf5g16Dr2kedo11
GVyXiYdPav0ei/a0E+tj8/xVZ068ku5458B9JVtIucjlWrtrnTgzDgfXFYfwJtNg1CPHCvg+xrtb
+2/d/Nx9KihZ0InlYys1VldnD+IdBjv4GBVdyn5W6YrlJLI20pSQfMp5r0m9t/vfLgHuK5fxTYAO
si9vlOOM183nFBNe0iiaGIcvdZhJHVmKH0I60wJtqxEuK+cgud6mspns3wM0r7JoVpHAB599Kbhz
0+UfIgPtnJr1PW9cgtJfsoO7HygHvjr+ua86+Buo/bdRt1fbiCKJRgdcLVjWdea28YyiRywRsrxw
fr7V+k4fCRqqEF0imfkubUJY3HVIy6a/1/XQ9D0XS7vX0xo1tcXDoA5WBDIyjOCdoHTkdKzbnURb
3IQb1kaXG1lJPXGPUHrxWFZeO7rQL5bjTp5re4j+7JFIVZeOgx2rnfEPjktqUUkTkMBgkH5iSc5z
6+/WtKWAqObcrcvQ46GVqrGKinz63elraWt1vvf5Hr2lXMO5RPBG0bhufutjbjBOapnWNKS4Y6zb
38KlckW90rYPfO9R7dDXOeB/FEmsz2qXGzMplIJ6jC9PpxmuI8WeIZWvDukJ6Ly2DjrWVLLOepKM
3ay7vuy8vw1aNX2UlF27xT8j0T+07EMzWMEpXduAupNxxg/wIFB7dSR7VkavfPZ6VemKZDnaQNvy
jJ7AduOntWDpN3HJaK1vMzkDBOMEE9ai8R3X/EkuwTtDSxAZPuTXoRwapy30039fM6Pq8p1VB7X2
sl1Kiazcy3bvbCRnkRoyxyFGeM+9NttMje6tkcq4lnUHByOo/wADT7bVlhtJBcW63AeJ44wSV8ti
OH46kccVZ8K2rhbMXDDMLk5A74r0pS5E2lb+menVqOnT00S2NS4jURs20ccr7da4HWtFn1LxLJFC
SXchmOOgxXbyXRki2y56ZA9eaj0fR7eXxJI0ilJF+dpWk++MDgD/AD0rnpy9km5HNgsQ8JzTfY5n
TdDnsNy24JB+Z8j8sV698Ofh8GsYbq6i8qW5O9QDlSB3K96zdB0exvNRkl1eB5R1RV4L47DnrXrX
w9it/EEMDxW01uB8hSWMqyjrx6j3FeJnmayVK0Vbu/0O/K4yzvExp9b/AHl3R/DxTTGSKJEBb+EA
ZPc4ry748fDqK70Schd207/JjUs7nB5CrycAdccV9O2GlJplisMWCB1OPvGvJ/jl4ZjutFuxsaV0
BaMqxDIRnGSPy/GvhMpzSTxia01P2zN+F/7LwFObd2lZ+X+Z+bHxC8OQHWDCYpTNFCPMMo27HJON
o7rt2/e569K8M+NOkCCzbbwi5IJ5z6V9ffE3wqP7Rme4tRBJcRh8Kc465OTyf0r5h+P2kpNP5aEk
IuGfOQp75xX7ZW5aeXVJrdnzfD+KU8XGC2R8r6vaM9+7ThiMEnHNchrg/ettzycnivTPE2jm2ed0
IkH3dwHWvO/EEJDt6ivx7MW6dF33uz90wE1No5q6O5j3qrMcZq5dJtY4qjOeDXw83d3PfiQO3f1q
Nn/OnyGoHbArNs2Qpl9TTTJTGbFMaT1NTcpK5KZMUebx1FQGT0ppl96B8pZ86k86q3m59aPNz1zQ
OxZ86k80+9QebjvSeYPegLE5kpjSZNRGT0pN5oHaxIXNIZM9TTCxPekoAf5g96aXz0pKKVwCiiil
zDSuFFFFLmK5QoopHbHSqvcm3cGfHSkD8c02ipdh3YE560UUUXDlFVsGpY22tUNORvWhOwWN7Qb3
ypVJNepeCNa3KoJrxuxuPLcc12fhHXfKdcmvQwlbkkedjKPPE9usbnzYxz2qZjk1zXhzXFnjXJzX
QxSiVcg19FTmpK585ODg9QbhqA5FOZc0yqehBIr56VNFLVZThqkVtpqriZcWX3pyzEetUxJ7mnrJ
607ktFwXGaeJ6piT8aeJfeq5ieUtfaPc1FdXgjQ81WnvBEpyawtb18RofmGaidTlVy4U3NjPEmth
QcGuH1TVfMlODmpNd14zOcNXPz3u9uvWvHxFfmZ69Chyoum9y3NOW7zWYJc96csp9c1xcx08hqLd
e5qQXfvWULg+tSLcn1p8xDgaf2o+350G6J9KzhPmlM+OtHMLkL5uiO9Rtc571T8/PSmvP6Ucw1BF
l7g561BLce9QvMajd89am5aiEsuTVaeWnyPVaZ81DZrFEM7+tU7h6nmaqs7ZrOR0RRBIaglNTSHk
1XlNZyNkiCQ81CT3qWTvULn5ahmqGU1m9KcTgVHUFIKUNikooGKXPNRufmp9Mf71J6gfeHw3crZR
/Su7t7kqOTXD/DePNlHj0rtFQhelfW0dIo/G8ak6juXY9RKd6ni1wp1NZLjFRu5BNdCqSicDw8Z7
nSR+Jyo60r+Ji6/erljMaBckdTWv1mZl9QhvY6KXWTJ3qI3m/qaw/thHej+0tooWIfUHg0tkbouR
n0qeDVREeo/OuYk1nZ3NVpvEG3oa2jiuUh4Bz0O/tvEqp1arieKUI5avJ5/Fhj/iqJfG7KeWraOZ
uOhhPIefVI9fPiVc/K1SweI8n71eTW3jfeRl61LLxerc7utdFPMObqc1TJHBbHrOn68GxyK27LVl
bHIryKx8WgEfNW5pvjEZHz16VHMI9zyMRlEuiPUoL9SODVmK956iuCsfF6soyw/OtCPxWmPvCvRj
jYW3PJnls09jubXVRGeTWhD4jUDlv1rzZ/FyjowqP/hMOfv0/wC01HZmLySVTdHqJ1sTDrTTOJOc
155ZeMxkbmrVt/GSEDLCtoZjCe7OaplFSlsjrfPEfORTTrQi4zXLS+K1ccMKqS6/5h4anLHRWzCG
WSfxI7Ftb8w8Gp7O/wAtnNcVb6zlutallrYXvV08WpO7M62XuKskeg6TqWAATW7a3oZRzXmtr4lW
MD5hWjbeOEj+84rt9vTnuzz1Qq03ZLQ7yRlbpWbqIBBrEh8cROOHFSt4gjuBwwrSnKL2ZjVUrWcS
tqMG5jWebba2a05bxJO4qvLOg6ECtnyvW5zQcoq1h9koXrWlAF71z8uqJb5+YVF/wlqQ9XFUsRCK
s2Q8NUk7xR1e4CniYAc8VyX/AAnUK9XFRzeO4ivDim8VSt8Qlhq9/hOqu9UWFDzXPavr24nDVhX/
AIxExO16y5dXM7fe61w1sVGWkTvw2Akvema8moGSTJP61ZtX801gRXY3da0LPUlixlhWNOSWrOyp
TaVkjorVM4rQgIjArnYfEESAZYUlz4tjjU4YV1/WadNbnnywtWq9jpLjVlt0PNc9rfiIPkK1YOq+
LvMztasS51wzNyTXmYnH8+iZ62Dylp80kad7emdzzUCdaoxX29uTVuCUP3rz1JSdz2PZumrIvWwx
WtYPtIrJt3GPer0NwE71vBpHLVTlodFaTgCpnuAV4rBTUwnepBqueprV11Y4vqzbuXbmXJwDTYJi
kgNVReBu4pftQFcspXdzdU7Kx12g6v5eAxrqrHVlkQZNeWQav5B4NbGmeK9pALVvDEQkrSOOWHqU
neK0PRTchxwab5grnNO8RrMB8wrVt9QWTvWvLdaGSqX0ZoJyasw8GqEdwOxFWYbkd6zaNoyRtadd
lCMmuh07UsqMmuMjvADwavWer7COa55wud1DE8jO4iuN44NTpJnrXM2OvLj5mrRj1yMj7wrmlA9W
GJjJbmv5gHel+1hayW1lMcEVXl1XPRqXJct4mK2ZvG8Dd6Y9xu6VhJqeTyatRX27qafJYUcQpF4v
nqaTd6VAk4bvmpBOAOtKxfNceF9aR5AoqGa+VAeazr7WAFODTUbkTrRgiTU9SCA4NYVzqm5zzUOo
6l5hODWa8+5uTXRGB49fFOb0Nq3vN55NXI3DDmubj1ARHk1J/wAJIkQ5YVfJ2FHExitWbtxcBF61
iatqm0EZqhe+K0I4YVjXutCduGz+Nb06b6nHiMamrRZJe3vmueaiik+aqZuN7ZJqeF811qNkeZz8
zubGnzlWGDXTaJqJUrzXI2b4IrYsLgoRg1nUhc78PVcXc9B0rUg6jJFbVrcBxxXB6bqmzGTXQadr
YOATXBUpH0WGxae7Ophn6c81bjuBj5qwbfUg44OatR3uehrllTZ60MQjX80GgSAmqEV1nvkVOsoa
ocTZVeYs7ge9LuHrVcH0NLuPqaXKXzk4b0NODnvVXcfWkM+3vScR+0sW/Mpjy46mqjXfufzpj3fv
TUCXXLLXGPQUxrrHc1TkvAOpqnc6mFHWtFTuc88Qo9TRuL8Acmsu+1H0NUbrVeetUJ9RDHk100qF
tzzq+Mvpcsz353cmmx3u7vWbLeKD8xFRNqaRnlh+ddqgrHlSxDvqzc+0ZHWop7jHesc68o/iH50y
TWRIOtUoEyxUbblm8u+Tg1Wjuzu5qvNdiTnIqIXAXqa6oxVjz51W3c37S6yOatrcDHWuZTVhF3FS
DxEoH3hWUqTb0OinjIxVmzdubgAHBrMvJtxqo2tiQcNUT6iDzmrhCxnVxCnsK5Jbmo5r0QD71Vbz
VFRTgisLVdcxnDV3UqXtDx8Ri40Vua194gEanBrEvfEPmMfmrB1LW2JOGrN/tUsx3Gu6GFhHVniV
cyqVX7ux0/8AaJkPWpY7wAcmuXOvR26EyOAB1zXOeKvi7baRA4ikG7HXNY4ipSoRbk7G+E9tiZKM
Its7bxP40h0m2YFwD9a8X+JHxWUrIEk9e9cV4/8Ajebt32S5H1ryXxP8Q3vnYlyfxr4nNc9i04Um
fpWQ8LVKklVrrU6Dxd43N5Mx39/WuTn1/e33q52/8QmViS1UW1csetfC1q7qSuz9VwmAjRgopHYQ
+ISp4Y1rab4ykgIw5/OvO49Vz3q1Dq3vURrNG9TBxktUexaJ8UZbcj94ePeuy0T43ywKP3pH4187
wa2V/iq9beInXox/OuylmFSlszxsTkVCv8UT6fsPj9Ko/wBf+tXW+Psjp/rj+dfMMHil1X7xqzH4
tc/xmu6Od1lpzHjz4Twzd+U+gtQ+NMtzn98efesi6+I8tyTmQn8a8et/ErueW/WtOz1kt3prMKlV
6sX9h0cOrRid5deKXn6uT+NUZtUaT+KsKHUN3U1MLrNbKo2ZvDqnsjUj1RkbrWppni2W2YYciuY+
0e9OW6wetXGq47Gc6EZqzR6do3xNltiMyHj3rqNM+MkkYAMh/OvDk1Er901MuttH0Y12U8wqU1oz
zK2S0aru4n0DH8b2Vf8AW8/WqOqfHRgpAl/WvCpfEkgH3j+dZ974hd8/Maqeb1LaGdPhui3qeqeI
fjdLKG2yn8+lcJ4i+KU92W/eN+dcfe6o8nVjWXdXDPnJNeXXx1Wruz38Hk2HobRL+teK5btjlyc1
zV/fNMxJJqWYkk5zVWaPPWvMqXnufQ0IRp7IzrpiSaz5nxmtS6jxn3rLvBtzXFUVj1aMrlK4mwDV
C5usCp7t8Csq8uMMawcrHpUo3Hve7TyaYdR9DWbPdcnmq7XvNTznVGlc2P7QOetL/aJJ5NYv26nL
ee9HOV7FG0L8+tSxXe48msWK7z1NXLabJGDVKVyJU7G1avuYVs6XFuIrD04bmFdPosG7Fbw1OGu7
I6DQ7PJXiux0Oy+7kVg6Ba9K7HRbbG3iu6ktUfPYqrufSn7Dfz2PiS2PpBKBn/fB/pXseo2Gbd1z
95SP0NeN/sNHb4q1uIY+fTw/1KyKP/Zq951OEKr5HUY/Svu8vqXopeR+eZpO2Jl8jw34O25tfEur
QP1RyfyY12uoQZYnoM9cVyvw4gMXxJ1gZ7twO/NdtqkBbtwferw7tSt5nBjZ3n8jmL+IbCV4Gelc
/rFuJUYEDkcV0WorkYGc88VialGRuHavOx0VKnY58PUftLnJPCY5CrDkUq849qs6nB5c25e/JquP
aviqkfZyaPTuevfASdl1fDEYCxGpvF86w+KZc4BPU846Vk/AafZrGM/wpn86teO3I8VyAdC3J/A1
+nYCtalTn/dX5nwOIp/8KdT/AAl7VtYhGmpFbQRxtkO0hbcx4/lXGa7qTC6ABBOeo4Axiti+lIt0
OACUA/GuS1yZ/PGWbHNXmWK9lT909LLMOlI9R+DetfatUsWlTI3zr97oPLOf6Vyvi+98y9O4DeDt
I7jHFXvgjfCPVLNZCQWkkAA90NY3i65263IV5y5x+fepeIbpqpfdL82c1GgoY+aS6fqzp/Cg26fE
QWy3NS+J0M2jMFHL3KEHPUAEVW8PanH9miVFEYbGQOg461PrMxk0qdY1yWnXIA68HpXp83PBP0OC
SaxF33/UsR2LRoYpgjsqgnnIPFXtFiKyp5aBdgZ8A/7NZ2nqyQ/K5DYycjBArY0sjLk/8s4HbI98
CtKsrRZx120mmQRyLIjOFwyKBvY8L3zxVAX8X9u3z3zPHJEgSMKcEOQMHPcVPOT5QWPCkuCWz1xW
fLYRt4peW+dvlKkELwxwOtNR/r7jWhGNpX7f5HW+CZZU1VLbxHFFKXdHAlbamf8AnoDzg89K+iPh
sY5XiWMGQ8AuCSDk18/eAkstF1mS8vWlkjZQmwoXAHvgHP8A9evob4capp/2W2aybZC4UhAm0Aep
HWvh+K3p7sX+lz6rgR05ZonzKK03+W19PuPQpF/WvPfivLDb2lwJkkdnU7VjbG4+mRjH516FcyeV
A7HPyjPHNeS/FvXUsdOaTzY4mYEYkboPXA5NfD5RSdWvGx++8Z4yOHwVpbs+RPij4clhvHN25Vr1
TPGqqwO0kgAZ7A8D8a+R/jPpst1quoeUFm8tmDFcB17fMp5r7A8WZvUkkMrSgZ+c8gJnoMk18v8A
xg+z3F+5giRc5Ib+In6/h0r90xMn9RcJPsfjPC+KU8XUnFaM+Y/GOmC2s23H5mYkgrjFeVeJrXDM
fWvcviTZsiY3M2BwCc4rxnxTGTIwNflueP2UeU/esnqc8bnC36Yas24HXNbOqR8msi6XNfDyR9ZS
d0UpT1qFzzU03H41Xc5zWUtzpRGzdzUTtj8afIaiduSals0EZ8dc03zKaTk0VLY0ri7zRvNN3DNB
bAzSuVYf5h70m85pofPWlzQmFh3metBf0poOelFFwsLvPrRvNJRTuKzHh80tR0u8+tIPUfRTCxPe
kJz1oGPLD1o3imUUBqPL+lMJz1oop3FZsKKTfk0u4etIrYKQtiguBTCcnmgBd5p/Wo6UORQBPHJg
+9amlaiYXBz0rGD5qWGYq1XGViJxuj0zwv4oMZUFq9A0LxIs8Yy1eD6dqpiYYNdToXi4w4BbFerh
sXy6M8jE4Pm1R7bFerKuQRS7we9cFo/jYOAGet+18TJKoywOa9aGIjNHkTw8oG9vFKG9DWVHrKPj
kc1Zi1FW6NWimjJwaL6tkc0ofHeqLaiqjlhUE+tpGPvU+dIFBs1TcBepqGfVBGpya56+8UpGDhqw
NV8ZdQrVjPEqPU2p4ZzOk1nxMsanDVxmu+JTMxw1ZGq+JmmY/N1rFuNSMhOT1rza2K5tEenQwnLu
X7nUTKxyag87Pf8AWqQuMmnrLnvXE5XOzksXFmqVJuapLL61IsvvSuS4l0SfjThJ+FVFl9akWXNP
mIcSyHPrS+YagEn4Upkx3ppk2JvMNIWJ71F5vvSGTPrTCxIWA70xn9aYXNMaSpuVyhK9Vpn4qR3z
VeVsmpNIoimaqspy1TSnGarueSahu5tEikPBqvKankPFV5TWb3NVuQSHINRSdqlfpUUh5qWaDG6G
mU9/u0wnFQWBOOtFRk5605DzikncB1Rnk08timUdQPvv4bR5sIv92u2EQ2iuO+Gif6BFn0FduqfL
0r66l8KPxjGO1VlOSLFQvFk1eePNQvFWhhGRSeLFRPHV9oueaheHNFjRSKUgIFVZ2PNaEkVU7mLF
I2g0ZtxKRnFZt5csAcE1qXcXJrKvouDUM7KaTMi9vGGeazLjUGU8Gr1+hzWNdjDGsJNnpU4JlmPW
3Q9TV6z8SOv8Vc67FTToZjnmlGbRpLDxktUdtY+KG4y1ben+KW4+avPrScjFbFhORjmumFaRw1sF
B9D0Kz8VuMYY1oQ+K5DxuP51w9lMSBk1p2spBGTXXGtLueZUwNNdDro/Ejt1Y1KuvMerGuchc44J
qykh71oqkjneEguhvR+IGH8RqxF4nkH8Rrnc5qQHFUqsl1M3hIPdHUweKn7satQ+Js4y3NcespB9
alW4YdzWixEkc08BB9DtovE+OrVOvi3aPvVw63TjvSm7cdzWixk0c8sspvdHav43YHh6jPjp8/fP
51xhuGPemmVupNS8bU7gsqpdju7bx+6Hlz+dall8SmUDc/615d9oPYmk/tB06NWlPMasOplVyOjU
6HsKfE0YGX/Wib4nLt5evGptckT+I1RuvEko/iNb/wBt1I9Tk/1Xoy6HruqfE5SD+8/Wub1X4o7M
7X/WvMb/AMSynOWPPvWJf67I5OWNclbOakup34fhmlHdHpl38W3V+JD+dRwfFqRn5k/WvIp9UdmO
SaZHqbqc5NcSzSrfc9T/AFfw9vhPcrL4kiYjc/61s2XjhJANzivBLLXZEI+Y1sWXiiRR94130M2m
tzzsRw9D7KPcR43jVOHqtdfEVY+jivIT4rkK/fP51Xm8RSSn7xrWpnE7aHLS4chfU9Ym+Jxz8r/r
Uf8AwsJp/wCM/nXlMOqPIwyxrUsLtj3Oa51mFSb3Ot5JSpLRHo0fiY3HVqtQ6pu71xVhdMMHNa1t
ekAZNdEcS3uclTAxjsdXBqeOpq7b60FHJ/WuPW/I705dUbPU1X1zlMHl/Md3BroOMGrKa3kcGuFt
9TbsavQaix6mrjj2znnlqR141fPQ09dXx1Ncwl+SOtSC+b1NDxjMfqKOnXXNo60p8QZ71yxvWJ6/
rSC8bPWsJY2RSy+J1H9tbjwamg1oqRg1y8d2fU1PFdmoWLfcJYGOx2th4oMRGWre07xtjAZ68yS+
YdyKsQ6k6dGrpp5nOBwV8op1eh6/aeM0YctWhD4rjb+KvHLfXZI8ZJq7D4lkH8Vdkc3TWqPMqZI4
v3Weur4pQ/xUp8XKnVhXlUfidx0Y0r+JHb+Kplm0exz/ANj1P5j1I+PxEflYU6L4mBT9/wDWvJJd
bkf+I/nUY1eQH7xrnlm+uiNY5PK3xM9vtPiKs3V60YPGCTdXFeE2viCSMj5jxWpaeMJI+rmtqea0
5fEjGpl+Ip/DK57dD4lQ4+YVai8VIv8AGPzrxaHx06jG8/nTz4+kx94/nW/16g+pkqeLj0Paj41j
QcsKjk8eRjowrxG48dyE/fP51VfxrMT98/nUPH0EbKljJHttx45Vx98VQm8ViXq9eQr4xkP3mP51
InjF/wC8accxomc8Ji5bs9Tk11T95v1qpc+IY0H3hXnL+M3I5Y1TuvFjuPvGreZUlsRHLsRPdnd6
n4wSIHDVzeq+PmUna9cpe6882fmNZF7eM+ck1x1c0k9Inp4bJo7z1Ork8euW5c1PaeM/MPzPXns9
wyk8mmx6o8bDDGsaWZVE9Wd08mpSWiPXLLxKkoHzDNa9jq6N3FeQ6Z4gcEDca6TS/EDnGTXvYXMP
abngYvKXTd4np9rqK4HNX4dUC/xCuA0/XGYDmte21FpMV68OWoeNN1KO52cGubehrQsvEJDferi7
a5ZutadlI2Oap0UFPFzvoegaX4hzjLVu2msBwMmvPdOuGXHNbdnfMAOa46tBHt4XGytqdtb6kD0N
W49RHc1x0GpkdTVmPVmHQ1ySoXPUp42x166kP71OGoA9DXKJqxz1zUqasT1NZOhY6Y45M6Y3wPeo
pL4Y61hDU896Y+pE9TQqLG8Xc15dQx3qpcasEHWsua/J6GqN3dsc8mto0bnJUxjWxfvfEW3PNY97
4oIz81Ur6Vmzyaxr/dnnNdlOhE8bE46p0NK68VkH71Zl54yKD7361kX28E9axdSLkHrXbChHc8Kt
j6t7XNbUviAYs/PWPcfE3aTlz+dczrZfnk1ympzSBzya5a2I9k7JG+Hw0sRrKbPSv+FohT80n609
PiwqjmX9a8Yu7+VCfmNULjV5l/iNcjzJr7J6Ecl5tps92f4xIv8Ay0/WhPjNGfvSA/jXz7Prcwz8
xqrN4inTPzH86z/tW32UbrIG/wDl4z6Ll+MMDDlx+dUrj4ywRZw4z9a+dbnxZOn8RrMvfGM5P3zS
ed8u0S48MSqPWbPo25+PkcH3ZB+dQJ+0Ohb5pB+dfMd54rnc/fb86ov4qnQ8ufzrllns77I7ocJx
trJ/efWi/HW3ul/eOPzqGf4p2k+SZh+dfJ58dzwf8tD+dRyfEu4T/lo351rDiWVNbGM+CPav4mfT
+o/EmzQEmYVzWtfGe1s1PlOCR7187X3xMuHU/vD+dc9q3jiefOZD+dcuI4oqNe6d+D4DpprnZ7V4
v/aAZlYRy8fWvLPFXxhnv5GzK2PrXB6rr8s7Hcx596w7q/Z2OSa+Vxub18S9ZH6BlfDGGwaVonSa
l4zkunOXPPvWXPrJl+81YpuCT1o8w968l1HLc+qp4aFNaIvy6iSepqL7cc9apM5xmm7zWMpXOuME
aUd8c9asw3/qax0cg1Yic0lIHBG3DfZ71Yjv/WsWGU5qwkx7VSkYSgjaj1AjoasRaiSRzWHHMe1W
YJCetUpMxlTR0dlfEkZNbmnXh45rlLBjkV0GmZIGa7KDbPLxMVY6O0uz61eiuD2NZdihIFaMSfL0
r1INniVUrk/2k0faT3qPYaa6NWuphoTfavWmtdehqEqR1pjN2FAWQ+W5OOtVJpcnmnyZqCSoabNo
2RHKd1VZV3GrTjvUEo5rNxOiMinNHVeVeDmrknIqtMM1DidEZGfdR9aydQTAOa2rkbgaytSXg1y1
YXR3UJ6nO6iduawtQlxmtvV225rmtSnxnmvMqaM+gwy5indXHJ5qm93z1qO8ueetUpLrB61z8x6s
IF8XfPWnpdetZQu+etSR3XvRzF8htQT571pWMucZrn7a4561r6dLyOa1iznqRsdTpHJFdjoMecVx
mhtkiu38PDO3NdlI8TGaHaeH4eBXY6Km1QMDJ457Vy3h9Mha7DSE+Vc16ED5bFS3Pfv2IBt+I2pJ
n72mSfpJHXvniRhawsR3HX2714H+xR8vxOvPfTJf/Q469m+LeoDT9Dkdj1/DGa+uwE7Uk/J/mz4X
MFzYq3oeWfDr5fHt/KWVvPDEEHJXnGCO1dvqXyqwXJ57V5j8Kb0J4xnLHHmhiDn3r068OV69uprX
C1lVhp3POzBOMzAvoQwIyRkenSsLVIyDjpjqa39RUhTzyRWHqSFkPPbvXJitTCg3E5zU488HH1rO
Zdrc961tSjCrnOT71lv9/NfLY2Ktc9NO6PQvgZL/AMTwrjBCr36/MKvfEM7PF7gk4IGayfglKE18
AddoP5MK0viSwHi4k55B/rX3OBnbCUpeR8fiI/8ACpL/AAlO7b/Q42Y9RiuU1qfM+B2rqLlsaao7
DnmuR1QmS7Nc+cVZKnZb6HqZdH3mdj8IbkLrdiM8+e4/8cNYvi+6Metyc55JwO/NaHwrby9dtNx2
4nP/AKCRWb49tpLHXpUu1KyAkkHFTUqOOBi29SYQX1+X+H9WaXhrUN0CktgbuAe1bd1eFtOkdZCN
t1Gcjtwa5Lw7KI7XLFgd/wDStjULtB4enaMnIuY+f+AmvQw+K/cxbObE4f8Afad/1N1NV/dMzNje
efWtnSr/ABY3TsNwEWMH+Ibh1rhP7QDQZU4Gfz4rd0/WFbTXWNyS45AHuK9WlWjUXK/I8zE4OyRq
LJ55Zoi24NuCY6f41m3XmHUbqWSVY0XGVI5fjpUv9oMsYSExNITjbgnB9c1S0/w/faz4gnUJIYlV
TKWdUC+3NdM6qjb1FQp8nNKTS0/yO70Uy2PhS1k0uSBfNkVXRXBlky2AAv8AFyexFey/CfWIkt44
4J28+0k2zw+bkwt/t916dB0rx7S/Ac1xf22+2a6LAmSC2KTCMqMqZSW2gMAeCeo45r0n4UXqT36y
QTiUHdL5eQVjz15HXHvye9fM57GnWoy5Xfd/f3387PTyIyet9SzCjUineUrX9Wn87HrPiDx9ENP2
XDx27NliBJkkDn8a+bfj149/t2dlt7eSKxgbYszcC5bqQB1wOOp/CvVvGOtWulsbu7Fv5ijaGdgp
XIzj15x29K+afiv4n/tvWHMbz3COxb5yAiseoXHUVx8J5XBVfaKOi6/1+p9xxHneJziXJVknbT5f
l9xy/iO9e/tXO/cu0kLjA6elfPfxRtgGdYQAN2MnnA71734mkay0uYyugZUOF7ivAPiBfrGzK2Wd
v4j0FfeZpKMMOo+ZHDMHGbcNjwr4nxGNpM4J+mK8W8Ux/vGyK9w+I5Fy8nDMcEnJ9PSvEvFbh5CR
X5HxHbmP3TI2/Zo4jVU5PrWJdrW7qv3jWJd96+NmfY0noUJulVZDjNWZjVWVuaykdkSKRutQOe1S
SGoScmsmaCM22mlie9DHJpDyKlamgZzSFsdab0PBoYHqaVwHbxRuFMopgPD5p+/jmoaUORQgJCxP
egORTPMoEnrTAlDZpaj60u4+tADycdaQuKYX9TTTJQBJ5lJvNMD+tBf0oAfvPrSE+tRl/U0ZzRcB
5cCk8ym0hfFK4Di5o3mmeYaFfPWlcdh+8+tG803ePWlBz0p8wrDhJ61Ir+tQ05XwOaALCSlTVq3v
zF0NUFk9DTlf86tSaJcbnQ2HiBosYatqy8XuowWNcQkpU1PHdsvetoVnHZmE6EZbnolr42I/jrQg
8c7V5avMY9QYdTUy6o2PvEfjXRHFyRzywcWeky+Osj71Z9541Z8/PXEf2mx6k0174t3pvFyfUUcJ
FHSXnippP4jzWbcaw8p61lfaC1J5uetYOq5G0aSiXWui55NIJPWqyP8AlUqNzg0ua5diZX9KkR/S
oA2DTwe4ouSyyj1IGxUEZzUiHJqkZsnSTPWpVfHWqyHBqZTkUyGibeaUSetRbiKVXz1ppkkpbPQi
kLEelNoJx1qrXACc9aazZ4FIWJ60lQG4yRsVDIePrT5GyailbrQzRIglaoGPy1LMahkNZm0SKQ8/
Sq8v9KmkP61BNUM0RDIeKjfrUknao361LLRG/SmOeKfJ2qOTtWb2LG0o6ikpUGWpoAflvpSU7d19
6bUrcD9A/hkoNhHn+6K7mNPkrh/hj/x4R/QV3cfKCvr6KvFH4rjn+9ZGyZqNoqsFM0jJjpWxyKRT
eKo2izVwpnpUckVBrGRnzRVUuIsg1pyx5zmqdwmM0NG8JGNdxdayr6PrW7eJ1rHvl4NZyO6lI5zU
U6+1Yt8uGre1MYJrDv655HqUWZsw60kXWnTnk0yNsGsup2LY0bXqK1rA5FY1o+RWvYSdK3gYVDes
OgrWtBmsfT3yBmti1bIFdcTzKhoQLwKsxLnrVe3+5VuEZAraJxzY9U45p4GelCjJp4GOlUZsaE9a
eEpVTPJpwXPSggFXjingeuaUDHSlKn0oIbGlQaa6etPoqGrCIGTH0qGUYq06cVBOMZpGkWZ90Oua
y741rXR61k3xyawmdNMx77k1mXfJ+lad6eTWbdd652jugU3Xmo6lc8moqi1jUkgODWhbNg9azYn2
tV6CXpWsGY1FcuUDk0xJQRUiNlquTuY2sWrRcsK2tPTJ4rHtTggnvW1ptbUjmrm1ZR5xWjElU7Ac
CtGNcKM12x2PIqPUMcYpBkt9KeRikUVjN6lR2LFpmtK0X5c1QtV5FaVoMinTMKxZiTipBHTol4+t
SAYrZrQ476kOz0pVXnmnlfmoCetc8tyrixg1YjzUca8/WrEa/rUkSHKuetSKMmkAxxT1G2nsZtjl
ODzUkb5PFRVLEKTZnImjc5p6Nk9ajTpUqDispM55DlyaeKB0oqCG7BTlkKnrTQM07y6dyGOE7Upm
NJigjNF2KyEaZj3NN3n1pWXvTaOZjshd5FHnH1pKCM1aYCmY+tMaQt3pSuaYRg0+ZlJIbI2ahnGa
mk6VHIMitEzaBRuEyKqNH8341oTLkVXeP5jxVLc3T0H2MfNdFpUZOKxbBPmFdFpMeCPSvZwKuePj
5aG7pMROK6PT7c4GaydHhBxXS6dBwOK+uwytG58Ri5c0rFi0ts4zWtZWp9Kjs7bOOK1bK36YrSUy
KVEnsrfGK04ISB71FaW/TIrRggrnnM9SjSGIhFSBGqdbenCD3rJu51qmRKCPvU9XOalEGO1L5VTd
FqDQzefWgsT3qXycf/qpfJ+tK6K5WV2GRxUckRarvk/WmtEO9HMJ077mRc2uQcis28ss5yK6KeDj
pVG5t8gg1tCZx1qFzlr2xyDkVi6jYcHIrr7y19qx9RteDxXXTqHiYnDHB61p2Q3Fclq2m43cV6Lq
9qCDxXL6rY5zxWWKpqWpGCrOm7HA3+m5zxWRdaeQTkV2l/YfMeKybzT/AG6141SkfTUMRocjc2BG
e9Z9zZ4HSururD1FZl5ZYzkVzSpHo065yN/ZnBrGvbUgmuvv7PrxWNfWfXiuOpTPWoVjlri3IPNU
bqDIJFdDd2mM8cVmXlvjPFck4WPSp1LnPXqEc1lXRPNb1/BjNY95DyfeuKpE9ShK5kXDEjrVC6JK
1pzx4zis67GFauSoj1KL1Mq75NZ8y9a07pcnmqMqcmuCoj1qOxU24JpwQmpRFk1NHB7VlY6uaxWM
R7U0xVeMPHSonhweBWc0VGZAsfNTRp6Uqx5PNTxw1CRTkJFHxzVqOPpSRRYPTmrMUPrWkYmMpjY4
s9atW8WSBQkRNWraDFaqFznnMuadFyK6HS4sYrJ0+HGK39Lj6V30IHkYqdzY0+DIHFakNtx0yaq6
bFnGa2LeDI4r1qULo+er1bMq/ZT6Ux7cjtmtT7LxUctuQK6PZnKqplPDUEkFacsHWqssW2ocLG0a
lyhImBUEi+tXZl61VlHHFZtHRGVyrJxUE1TzVXkO4c1k0bxZVk61XmqxKM1XmHFZuJ0xkVrj7tY+
pthT9K1bnhTWLq0mFNYVVZHdh9Wjmtdmxurk9WuOTzXQ6/P97muR1WfLHmvDrvU+rwUdEZ95ccnJ
61Re5wadeTcmqMknPNcdz24R0LQuueTUsc+TWcJcmpYpMEYp8xbjc2LS4+bmtrTJ+RzXNW0vStvT
JcsK1izlqx0O10GXkV3nhuTO2vOtAl+Za73wzL92u6iz57GxPSPDp+UV2Oj8ge+K4nw3J92uz0d+
Fr06b0PkcWtT3v8AY1ulg+Kjqes9hNGv1G1v5Ka9V+PjOfC0hhYBhg4PSvCv2atZXSfizo0kz7Fl
cwFvTepXP5mvozx7pQ1zSpraQDccjB5FfW4BKrQ07Nfr+p8RmF4YmMnseCfDRivipDyOucdq9Xnb
IG7pXBfC7RRB4rv/ADQM2uQF/Gu51FwEO0gkdRmpwdP2cHc4cfJSloZuq9jGBjvWFqHJatm6k3Bs
HI9Kx9SO3r61niNbnLB2sYWq/dOB0FZEn38YrZ1LG05Geaxpf9Ya+Zxq0uejHRHZfBmTb4pUdth/
mK2viYmfF5JK98fma5/4RS7fFcWO6n+ldL8T+PFJIxgE849zX12WycsBT/rqfLYxcuZf9umNcNvs
uf7tcxqPy3Rrobli8PPGRXPanj7RlfxrDNZXhc9LAq0mdD8NJyddsw/QXA7exrM8bH/iezZyfmP8
6u/Dgka3a7Dz9qjHT6iqPjkEa/cD+67D9awqz/4TotvqEFbHP/D+omkN/wAS1hyPnq9cNu8N3Iyc
faIsZ+jVm6Q+bGQHPDZ/SrjNu8LXpU/dniI/JqulU/cr0LqwvP5r8yUb2tTsUsBzwKbZ6jIHkWId
FGeaLC5ZI1AcLuwCc8VraddW07ypOsUZCgB1b73416VKTbTTOWp+7TvG5m/2nLJeokk6QqOSCcKD
68Vd1HUJ9ThjhjuJpYYl82VuML6kD/HrVHWraPSJGeCJ5GkH325UfT3qhDcv5zFnwGwCmAAfTJzW
sK7UuVvqawpRqpTgj074bXkK3RjvjH9lm2wzW9qixS3C9fv/AFxnkGvfvh3bD7dBaxoqS20ASeXC
sYj2RmwAxxzx0r5c0qziW2M2l3hNxHhVtEiZ1lyP4X6k57bcehr37wF4ofT9KtJ9eD/2vNABLBAm
SQPuFsHAbHUdfUU86outRUo7vS3n39O7726HkKVLCYqNeo/dTTfR/wBea+QfFKHUZr+SPRLiN50k
JAkjCiJePm39cHPqMZrxL4pQLYX8kdxfvcX8zg4gXMcY9Cx69cfLxwc17D4m0vW/HLSRWu6CBVZ9
5YFUDDPJH8s59q8m8b6fYeHU8rRp/wC0LksDJOY9qRjHCoc4APUk8+9deS2go0+Zc3ZL83svT8zS
nW9pJ1Emk9r/ANanD69asumTecuHVDkueEr5y+KF4Bev5RLHPcda+g/Ft4JdNlA5/d8ejH1INfNv
xPvfLvZg6jJbJbB4HYe1enxBNxpQufY8JwcqjuePfELUC0s2/jJPHSvI/EkmWavRfH98WmcZOBkA
eleY+IZ8s2a/Hc6rOdZpn7llVPlgkctqr8msS7br71r6rJktWJdt81fPTd2fUUVoVJ254qpMasTN
k1VmPpWL1OuJDI3WoycCnSHio3PFZM1iNpC2OtIz+lNpN2KCiikY4Bqb2ATzKPMptFFx6Cl+eKUP
602ikFx+8etLnNRk460U7sNCQHHSgnJ5pm4kUlPmCxJRTNx9TSZPrRzBYeWxTS2aSkLAd6V7j0Qt
KGI6UzzKPMpBqOJz1ophc9qeORQDuFFFFArhRRRQFxQ5HWnBt3SmUqdaadh7q4/OKcH9abRVXvsS
Sq/41IDg1AjdjUiN2NMCUPmnBiO9RU9Tkc00yWiRZcU4SVFTk61ZJKG3U9GzwaiT71SKcGgTVyZD
kU9GzUSdalTrVRIJQcinoaYv3afH3q0SyaM9KlT71QoOBUyjkYqkZtEg6ipUPWoh1FSp0pkjqKKK
DMXcR3pCc9aKKACkkOFpajlbIoKRH1qKU9akY4FQTNnNJuxaRDIcmopTUjn5qhlPWoNYkUh5qGU9
alkPJqF+lZmqIXOWqNz81PJyaYxyxqWUhknamOMrT5O1NqSyOlBwaQ8GigAoooqdgP0E+GPNhH/u
13sI+QVwfww/48I/92u/gHy19hR+FH4njv4rDb7UjR+vFS0HnrWxxlZ4+aYwyKsOlQyCgtMqTLg1
TuV61fuKo3Z5oZ0QMu8FY+oHCn61r3rc81i6lJwazkehRMDUzjdWBqDckVtapJkmuf1CX5jXLNnr
0UUp3+Y1Gr88UyeXnmohP83Wsbnco6GpZzcitewmwRXOW8/IINatjc5xzW0JGVSJ1WmTdq3LKTI+
tcrp110Oa39Pucgc9a7KcjzK0LG7avkVdgasu2m5HvV+GWuiJwTiXY+9PQZPNRRPmpk6VaMJDqeq
460id6dQSKq5PNPpE6UtIhgRnrTGXBp9Nc8/SgQxvumq1w2M1PLIAKo3c3oazehcFqVLyTANZF7L
1Jq5fXGax724zmuebO6nEqXb5JzWdcPz1qxdT9cGs+efGa5nI7IRGyPgHPeq7y4NNmuPeq7zc88V
Dkbxiy0k9WIbjB61licetSxXGO9JTsN07mzFc5GM1ahm5rFhuau21x71qp3OeVM3LV92K2tMfkVz
tlN8w5rZ0+bGPat6cjirR0Op06TgZrTjPy8VgWF3gDmtW3usiu6M9DyKlN3LZ5PFOjGWqFZd2Kmh
OTWbd2K1i1AcHmtCzas6HrV22fFOLszCoro1IG3CpKqwzYAqYTZFa8xxuGpJmlUZNRo2T1qRDzzW
UtwaJE+9U8fbFQKcNU0bccdqViJEwODT6jp6HIpvYye4tTRioaljOT9ahkSJk6VLGelQoakjaspH
PImoAyeKOtOQ81Jk9xwGBRRRQxMKKKKlMlMKYwwafSP0qihlFFFUmAUxzzTycdajJyaoqIj9Kjbl
ac5yaaxwPrWiNooglHWoHHP1qxJyTUEh5q1ua9C1YD5xXRaRziucsW+YZrodIOGFe1gXqePj1odd
og5Ga6jTBnHtXKaLJ92ur0ts4r62i7wPiq6tVNyzjwBWrZxdKzbFgcZrXtDUSZ10Yov2iZ5rQgTj
NU7X7vFX4OV/GueTPUpIkVM9acF9BTkXcalCAVm3Y6FG5GsJ708RipAnrT1XJ6UuY0UCIRZ60vlC
p1T0FO8vPWp5iuQr+UP8imPEKsPHjpUb9KOa4nEpyJVS5j61em4eqlyetaRZy1EZV5HwaxdRTg1u
3hxWJqPeuqmzyMUlZnOapFnNc7qdtkniuo1FMk1h38Oc4rrfvRPBvy1LnKX1ryeKybu2HPFdNfwc
nH1rHvIepxXnVYHsYeqc9d22M8Vk3tvwa6K+i+X6Vj30fJrinE9ejK5zl/ADn3rGvLbk8V0l9F1r
Ivou9cc4nq0ZnO3ttjJArHv4Nua6S9i61i6hFgGuKrE9ahO5zWoRViXsVdHqEfB71iX6DJrzqqPb
w8jCu0weKy7tcZrZvl9e9ZF30auCoezR1Mu5HFVJUyeKu3IquUrhkrnq03YhjjqeOKiOPnmrEa4F
SomzkRGLio2iq0VyKjZOazmioMgWPmpo48UoTBp6Lk1mkW2SQxY61ZjjqOMcfWrMI6VrFGE2SQxV
bt4/m4qKMcVatkreKOSci7YrzW7pvUViWgwa2tObBFdlHQ8yvqjpNM5xW5aLxWBpUucVvWLZFexQ
PncTdMtiLNRyQYq1DgrStGGrtUbnm89mZc8GCcVSuIuK2LiH1FZ91HjNZTidNOdzJuFwapSj5ua0
LpcGqE3WuaSO6m7lWYcVWYdRVmY5qvIQDzWTR1RZWnGKrXAwKtTn0qpdPgYrKSOiBRuzhfxrn9bm
2qea2dRnCg81yuv3oAPNcVedkevg6bbRzfiC5yzVyepTZJrc1u63M3Nc3fybifevBrSuz7DCQskZ
129UmbJqzctk1VPU1znrQQVMneoaliOetBTRetK2dLflaxbXvWvpz4xitYnNVR12gycrXeeGZeVr
zzRJMMK7jw3PgrzXbRZ4GNieneGZeFrttHk4Ga898NXGdvNdzo0+QMmvTpu6Pj8ZHVnbeGtRk0y/
gubNiktu4kQ+hByP5V9cQeIY/Emk2l9aEmO7hWYZ9x0/PI/CvjnS5ema+lPg/eM3ww0rzz08wL64
DnH9a+iyau05Q6Hx+bU7xUjPiiXw/wDE+6inwItRTzIyO59P51tXT4jwe9ZfxTtwbC31C05nsZQQ
QOSO/wCFT22pJqWnx3AxtkXOfT616Serh8zwq0NFJehWn+VsOMVQ1JPLQYORWhKd5wSMY7VSumRF
weQPU1yzpyloYqpFHO6p9zPNZEgw3NauqarHI7CAZ7ZP9KziysTv614OMoKzjzHbBt6tHRfCyXZ4
qg9wwP5V1XxIUHxQgbvzz25rj/AtzHZ63DLIQMZHXHWut8b3Eep61HLAwJHUenFfT5ZHkwcI36nz
uNg/r8Z205WjFuP9Qu48lcYrnNVbfOT6cV1VzaBogRgYrnL2xL3MgXkqcVjmlKUocvc7cDNNtmp8
Nl3eILZScD7TGcn61V8foF8RXOO7t/OmeHZ207U4pGJQK4bI56U7xKx1LUpZIAX3Enge9c/KnglT
63NOVrFc/SxV0dtsT7uuauxzq/hq/QH52eMgewJrPhtpYkPyMB3NSWkZdXDDIb9aij8Ch8jecNXJ
+X4Fm2f/AEJS+BxUul3WWuNwXPyjBHWqYi2JgkgfXNJpqk3UwHIGK9Cm2pwX9bGTgnGTOo07UWhP
lTl3tzk+Ux4OfQ/0p82iPohW/jitZLWaQJ5RYO6HH90+vOPpVXQXLhkcEjHA/wAc9K7fw34ctdVQ
R6odsCkM6MfmUf7B6nr09q9mjTtHneyPExGJWFk29nuYui6Umm3DSy2flv5isVL/AL4dSMbTxx1P
QCvcvhzf6c+nAQWNxF5pA8yRGfzGx2K54GOpA96yvB/7PlmYYLnRpXnBZmd7pg7EZwCOMcAE4P0N
ew+G9J+yWarbwxxBOAhUAAdiuM4z1rxs8zihUgoQu311tY68vyivmeIjPaPdq6for/8ABOY13R3v
IPmcxIhVkDJvViTzhMn5hjhiOM14t8U/h2YJvPUXDnDlmSzadvLU8s7NtTv0xnJyOlfVFwY5lIub
SDzAdrlF6f41wvxGOnaVZXE15ZRSPEDlcbS4P90+vSvHyjOalCqoxj8lY+rzHhpUYqpGqreaaPir
4iwQadpV2dOWaRdhVGmHzAdjx0x0r5N+Jeoq+oy+Y8ki7snd8ucf3R/U19bftWfFPQ9PVrbTtKe4
knO9oUk8nysdcgqSPr39a+G/HGspfatcSwosIdmbywCAnsMmvps9xrqxpw5Wn1ue7wjlroxlUclK
/Y898aX2+R8HOSe9eea5NljXV+Krzczc964jWZ8sea/LMfPmqyZ+v4GFoow9Tkyax7pssa0b+TLH
msuduTXlSPdpLQqzNyarStU8zc1WkOTWT0OqJG55qJz81PJ7mozz171kaIj60UrjB4prnAqWMUnH
WmM26kJz1opDasFFFFAgooooAa/Wm5xSv96koLQu4+tG80lFA7DvMNJvNJRQKyFLE9aSiigYUUUU
AFPU5FMp6/doJkLRRRQSFFFFABSqfmpKAcGgpElFFHWqiSA68VKOopgXBGaen3qoB/WpAMCmJ96p
ANxppXJYnWnquBQFxT0HOaskVRgU9FzyaRV3U8DsKBMegwPrUiDge9MVegqQDJq0iGSU5OpptPQc
fWmTJkyckVKgqJBzUydKpGbHKealSol+9UydKohsWiinIAetBA2ilbGeKQnAoAR2wKic9qV3x170
wnuaC0NkbFV5DUsjZqCVuv5VDNEMJyagkOalY4FQyHmpZokQyHj61FIakk7VFKev0qDREVR1JUdS
2Whr9abTpOtNPIqSiMnJooPHWigAoooqdkB+gnwuOdPj/wB2vQYPuV558Lmzp8f0FegW7/LX2FH4
UfimP/ismopAwPekMmOlbHCkEh4qvI2TT5JarzSbRzQXFXIbh+az7uTk1ZuZeDWbeTcGk2dlOJSv
putYOq3GM81p6jPgHmue1S45PNYzZ6VCJkarPwawL+fOa0dUuOTWBf3HJ5rkmz2aECC5uOarmc56
1Fc3GOtVTOSaxbO+MNDVgusHrWjZXnIwa5yO5IPNXrS85HNXGRM6Z2GnX3St7Tr/AARk1w9hfY78
1t6fqPPWuuEzgrUrnc2V+MDmtS2uvU8VxljqeO9a9nqnTBrqjO55tSidTDce9WY7jI61gW2phu+K
uRX4I61upHHKmbKy1IJQetZSXw7EVIL3jrVXMnA0hJ70efjvWd9vx1xSNqA9aGxezZoPce9RSXPv
WdJqYHeq0+qdealyKVJs0Li8A75rOvL7OcmqVzqnvWddanweaxnM6KdHUsXl715rKvLzJODUN5qW
c81mXeodcmuWcjtp0SS7ux2NZ1xd9cmobq+znnFZ8996GuaUjshSLct5UD3ZJ61RkuznrUX2rn71
ZNnRGkaK3HPWpY7msoXGe9Sx3WKLjdM2YLjPer1tcetYcFznvV23uMEc1aZzzgdHZXOMc1r2N305
rlrS5wRzWrZ3XSuiEjiq0jrLO9weDWtZ3uehrlbK69a1rK66ZNdEZHnVKR0kE+4dauQS1i21zuAy
a0IJ+ma2RxTp2NWJ+9WreSsyGarcMucYq0c04GnFNip0kyazopsVYSXPQ1RzygXkfFSpJk9apRzV
MsmadjNxLitmpI2qoknpU0cvrQZOJbjfIp4ODVdH9KlSSgxlEnByKfG2KgVscipFbPIqGrGbRYDY
5FSK3cVXjk9alV/yrNowlEso2RTgcdKgV8VKsmRzWbRjJEwORRUYb0NLvNImw+im76QuaBWH0jN1
FNLE96SgAooJx1pjyVSVhpXFZs9KY7YFIz7ajd91aJGkYgz5NMd6Rn9KYzYrRI2SB2wKrvJzSyy8
1XlmHrVGqiXrOUBxXQaTMCRzXJW11tbrW7pN9gjJr0sFUs7Hm46ldHdaNNjFdVpVxwDXB6PfAkHN
dTpN/wAAZr6/CTUo2PiMbTcJcx2dhOCBWvZ3HSuVsL7gc1sWV5uA5rWcCKVZHTWk3StK1fIrnrK7
9TWrZ3PTmuaUT1KNVM2IW/Wp0GTVGCfNW4pQelYSR6EJXJlXJ5qZUx1qBH54qVZR3rN3OhD6KaZB
60jTDtU2KbQSNioXOFpXk9agmmqkjKUiOaTnJqjcycGpbifPTpVG6n4NbRRw1Zla8k61jXzZzV+7
m681lXkvWuqCPIxErmZfnk1kXq8mtS9k61k38mAcda6k9DxaivIyL9cVj3i8GtW+mznmse8lHPSu
So0ejh4uxmXqZ3VjXyZFa95LwfWse+l61wVD2qCZj3y8msi+GFNa1/J1zWLfyDJrhqSPWoxZl33U
1jagBg1qXsvWsa/mHNcNSR69CLMfUR1rC1E9a2NRl4PNYWoS/Ma86rI9vDRMi/bmse8brWnfyZzW
ReSAt9K86rI92hEqTctzUJ4pZZhk1C82a43I9OESUPg9aljfjmqayDuamjkyRUORtylmkZcikQ9q
dSk7oErDAvPNSxjNNxxT06VmMmQc/Sp4jVdDkip42wa1iYyLcTVbtTnFUYXq1bybSK2gctVGnanp
WpZNjBrHtZATWnaScV20jzqyOg02fbjmt6wusAZNcpZ3GMYNa1pe4716NKdjxsRS5jqra5BxzxVg
Sg965+21Pjk1ZXVhjqK74VUeTOg7mlO4I4rOvWB796ZLqgI6j8KpXWogg4NEqiZVOjIivG+Y1mzt
zU11eg55rPnvASea5ZyPRpwYkr5NV5ny1MmvB2NVJ74AHmsJSR2Qg2STzAcms29vMZ5pl7qYGeax
dR1TGcGuWpUsehQw7bE1fUcA81yGu6hndzmrur6p15rl9Vv95ODXk4mtc+jwWGtqZ+p3O5jzWLdy
bmNXL2bJNZlw9eVJ3Po6MbIrTtk1XqSY5qOpOyIVLHUVSQmgply1PNaunvzWTbHBFaNlJg1rE5qh
1GiyEsK7fQlaEKz8A+9cd4egVtMkk5DBgu4jC59M+tdJo0++DexLbMDGeRXdRWlzycTTumejeG7z
leTiu80G73KOa8s8O3u3bzXe+HdQyFyetd1KVz5LG0j0HSbnGK9B8L/FjVtA0qG0sZ0+zw52IyA4
ycn9a8t0m74GDXRafcZxXfQrzoO9N2Z8xi6EaitJXPQNQ+Kmq61Yvb3skJjkGCBGAa1fCPjyCw09
LTU0kUKeJAcj8RXAW8nQVetZAWAJ6+9X9crqfM5a+Z5FXDwS5bHo58R2V1J/o9zESem7K4qrrN4r
2b+VIrD2bOa5KK4jijGBub9BWnZeIIooNht48+vevSo4mnK6q1En8zyq2GtrFFbB59ams9Pkum+V
Tj1okv45JA0aY5zjtVyLxOsa48oAd8GuGNHC+0vUqaBOVS3uxH2mmvDKvOCD3rUM8glUtz6motHv
4dTcmU7ZAflHtVjWXWwiQEHPU+9fQ0IQpU+eD908yq5SmoSWpeimWby1kbYHYKWPYd6u3Hw2tZ/E
Jhj1mERPbiYOkRJY7tpUAHr0rj5tXdgSPlDd810Nv8RIbfUbOSEMogtmic46k88fiK8jNsa6rj7K
T03tb9T18owtCnze3S8r3/Rl3W/BVppcirZXM8yeTuLGPblx0GDUng/4Yr4nFz9ouZbeYxlIAq53
SYB2t7YrD1j4hzarsLAARjaMemfSm6N8Q77RZJ302cRvIpGWGdp6ZHvXn151J4Zxoyan0b/4Gh6k
J4RYlOcbw12/4dkWl6JctrH2bynabcYyncnpSTaK1pYTNIfLMTHgng84IqoPE0sNxHcRSt5yNvzn
kn1z61W1DXDeLsHCZJx25Oa7aOLS1dv1PNq06aVldv8AAtRhSDlhycfrU2g+Wbm5MjBQxC5rENwS
ODSWuoG33kH5ia9Gljoe1pt7a/kcUsO3FpM9E0LTVkmVUQu/8LZyGPYYruvCdi080SWqs8wxLET3
A6rivHLDxlNZWgdJApTpnvVzRPjRq3h0xNaSqRA5dNwyATwfrx26V9Q8RTnSUYNJtdT5/FZPicVf
lZ9s/DcPqjwpAEaOdNyMnyjPORnr2P5V6Jb+GobGOMRMztHkHf0dSeQQOK+G/CH7bdx4UnZ77TLa
RdqlVhk2eQ443xjkDI6rwD+deu+C/wDgpN4f1TTVHjCyexvSdoVZAyyYH3s44ye361+e5tkeNlU5
qCUo+TV/uufqnA+KweAw3scxi1NbSs2radlpqr+ll6/QmoWKRQuETdEU27QeVxnB/WvHPjvJFD4Y
vJLpfO+zo8kcQZQ8+B90Z4/HIFebfEL/AIKZ21nZXUeg6IZHAOzN0qsRjrjDDrXzB8ZP+CofibxV
pclnomlaVp52489szSHPDgg4UhgcEYqcJk2MyqpGrily+V03+Fz3czxWEzy1PCJ8q3drL0XW39I8
3+JvjGe512W6LXFvbys8ZadiXt5AemRk55wAevYmvnbx7qsQmneQgFmIx6evWt7xz8Wb7WdavNSv
JI4rq64YRxgIfwP6V5D4p1x7qVvMfd1xXrZvnMZL2kt3sjvybKfq6UFsYmv3nnSELkkngVzOs2bR
sysRuFb2leIINI1tbjUI/PSMH5exNUvFmuaZqgeSyVoHb+EdK+Bqy9q3Nn6Bg6KscRekgtnrms2d
+taF4xlkbbWbcdDnrXDNdj0YxsVpW6/lVeQ9amk9utV5OlYy0NkMc4Wo+pp8hpmccnvWZoNb7xpk
hp1Mc5apY1uJRRRSB7hRRRQIKKKKAGMcsaSlPU0lBogooooAKKKKACiiigAooooAKev3aZT06UCl
sLRRRQQFFFFABRRRQVEepytKBk8UiH5acn3quImPxk+9PVcUiDjNPVcmmJscgwKkUYFNAyakVc/S
tEZiqueTT1TPXpSU9VxQJigelPVcdetCrinBd1UibjlGBT0HekVc0+qEAGTUg6imoOc09BlqZmSp
3qVPu1GgwPrTkGTTRL1Hg4NTIah61Kn3qokfRRQTjrQTygTjrTHeh39ajLbjQFhCcmmu1DtjpUbn
tSbLSGu3eoXPNOds81H1qC0NkNQPyPrUsh61ETipkaEUnWoZT1qV/vVDL/WpLQw9DUdSHoajqHuW
hsnam05+tNpFDH60lOfrTaACiiilID7++Fz/APEvj+grvoJMKOa4H4cxiGAImcKcDNdzC3Ar66j8
KPxbHK9Rlkze9NaTJppOBTC5NbNs4+UV5MVWml9adKxzVS4c4oNYRIbqbNZt5P19qtXLHBrLvmOK
ls7acTO1K44PNc7qlxnNa2oyEhq5/VHIJrnmz1KETG1ObOawb+XJ61q6k55rEvm5auSTPYooo3Mv
Jqs83PNPuGNU5HNYnfFFlJ/mqxBcYPBrNRzmrEDmmmOUTcs7zpzzWtY32CMmuatnO4c1p2shwOa3
jI5qkEdRZajjGT171q2upYA5rlbKViBzWjbTsD1rohM4alNM6q21T3zV2HVfeuYhlbHBq3DOxAya
3jNnHOkjpY9WPrUo1b1rnVmYDrUi3Dbetac7MXSRvf2tTX1Y+tYnnt61Gbhj3o5xeyRsS6oe5qtN
qnPWs15Wx1qCWZvWoc2aRpIu3Gok96oXOoZzk1XmmbHWqdxKfWspSOiFNEtzfdcnFZ1zfelMuJSS
eao3Mh5rCUjqhTQtzedcnNUZrrJ4NNncknJqpK5rnlI6YwJXuOeTTDPz1NV3YlutMLENxUXNlAup
N6Gp4rj1rOVzmrELHFNMmUTTgm561ftp/WsaFyG4q/asSBWkTnnE2rSbBFalnPjFYVo5IrUsmJre
Jx1I3OgsZ8d617K46ZNc9YOeK17FzxXRBnBUgdBZ3GMZNadvN6HisGzc9K1LRziumJ59SJrwzdCD
VyGbPWsqBiGq7ExrVHJKJpRTc4NWIpKzonJq1GxK5qkc8ol5JKmjmqjG54qZTkU7GTiXUl9KmSbm
qEbmrIPFFrmTRcSX0qaObP1qlEx4qZTkZosZSiXEk9KkVs9KqxMTipkYkZpGEolhXz1qRJcdagBy
KchzUNGLRZWTPQ08SVWBx0qRGJxWfKZSgWFkNPE3rVcHHSnqcjmoaM3EmEwpfNqGilyk2JWlpplp
lIxwKfKPlHlyetMZ8HvTSxNJVJXKURWbPWo2fPSgnPWmscCtYo0SBm21DJJxzSyGq8zHJqjWMRk8
1U5p8Gn3LEA1TmYgUHTGJKt1tfOa1NMv8MMmsAtlquafId45rWhO0tDLEUk4ndaPqHTmuo0m/wCn
NcDpMrcc11OlStkc19Xgarsj4vMaC1O406/yBzW3Y3vTmuQ02VuPet2xlJwc170ffifLT/dysdXZ
XuQMmtazvcEZNctZSttBzWrZyscZNYzgdVGq0dRa3vTmr0N2COtc7aTNjrWhDKw71yygerSrs2ku
/fNSrdZ61kxyEnmphKw71g4nXGqzR+0imtc1TErEdaa8hz1pcpbqssy3PqaqzXOe9RyuarXEhAq1
EwnUYs9z71RubnnrSzyEDrVC4kOetbRicFWqxl3ce9Zl5P1561YunOTWZduea3gjzK0yreT8msXU
bng81fv5CPxrD1KQ881pUfKjlpR55XZRvrrrzWPeXXWrV9ITWNeyH1ry6kz3cPSRBe3eM5NZF7d5
Jqe9kJzk1j3spwea4qk2ezRpIr313nPIrGv7nOatX8hGax79zzXDUnc9ahSRUv7vGeaw7+765NXd
Qc+tYt+555rgqyPXo00UtQuevNYWo3PXJrRv3J71galIfzrgqyPaw9NFK/uetZF5cdcGrN/Icmsm
8kIzXn1Znt0KZHPce9QPck9KhmkJbk1DJIR3rjlI9OEEXVn+brViCf1rKjkOat28hNQpGjia0cvc
1KHz1qjbuSKtIciquYOJIGyTS5xUecU4OSaBWJkerCtnmqifeqaJuauLIki0kmBxU8U3vVRTzUin
DVvFnNKNzUtrjOOea0ba675rDhcg1dgkORzXVCRxVYG9BeY71dhv8d6wYZDgc1aikPHNdUZnBUpJ
m4mqFe9P/tjA5NYnmmo5Z29a0VVnP7BM25da9/1qtNrXHJrFnuGGcGqVxdPk80nWZrDCxZtT6z71
Tn1j3rFuLlwTzVSa6crnNZSrM6oYVGzPrPvVC61n3rInunx1qncXLnPNYTrM7aeFii/e6vnOWrH1
DVMg81XuZ2JPNZt5O2DzXFUqs9Ohh0iPUtQLE5NYl7cbieasXkpOcms64Y5NedUnc9uhTSRVu5PS
qNw1Wbg81TmPzVhuehBFeU81GxwDT5DzUTn5qDoQqvzzUkZwahqVD81NDLcJxV+1fBBrOiPertue
BVRMJnXeD9WWzuQl180UnDK3K5+n9e1evad8ONL1SyjudOa7t/MUYKkSRgnjjPJGe/avCdOcqykH
kc19H/BBml8FRvIxLF8ZzXo4f3ou/Q8+sjPtPh/qenXYigNveMeQIZMluSOAcHPFb2lQ3WnuVvIJ
oip53IRit++0qKazkcl1KkEBW2jgj0qv4NuZb3V0SWWUAhj8rkDvxjp+ld9OmraHg4yjFmxoN9vU
AnBPvXoEvh1rGxsJ4pd63sAmBI2qSeqg9yDxXn+lXhj0q2Z44pXZsF3XLEZPevTPDmuSaV4YtI0i
gmtryUebbzKXjye6gnKn6EV2UoJppnzGJw6T1IY4ZYMeauDjp3H1HarVvLmoNYT+zbvyrZm8o4YI
3zBc9hnmnWP79WJ+X6VVSkuh4NanZl+OXNTpJVGEknrU0TlhzXDOJwTgXkmxUivnoapoxxUiscZr
BqxzSgXre6aJwUOCKvPrslwm24fdg8Z7VjxOT3qTNdNHGVcPFqMtOxjOjGTu0aLmKUAxMcnsaJLK
WJA4UEHupzVIMVGQamhupFjyGPTpXdTr0MTpUi0/L/gmbg47McrEZ3dfpT7qJ7SQLcLtYqGxnPB+
lPj1KTySGCN9VBqsG81yWA6Z4rWthFSUeWW/9d2Efe3EZ+KilnxSPId31qG4kPJ4rgnBy0ubxgPe
5BHBqJ7lU5zVeWQ4qrLIfWphJxd2bwpItT6mdu3PAqheagxXhjj61Xu5mwearTsWhJJPAr0cNCeK
k4ykd1OjGJW1LVSAcmue1TXzECQ5B7c1Jrl0+5ua47XryTafmrmrSlSk1c9rC4dOwmt+LprdX8iZ
l3cHDda8/wDEHiAlyc1d167fnmuL1q5dnIJ4rhq4upJK8nofT4LCxWxn+INXaXJzwa5DUnluXxCr
MSeABmtjUZC65bnmsu5vXtrKW4gIWVGESEfwAjkj396KmGVSHtJO59JhYJaHKajcZzk4rEvptx9K
v37kqSTzWVN8ytntzXz0nc9ylEqySsjZU81VuCZcnuT271qWlol0+JM9ccV3Wk+CdP0rTku44jLK
VR/3p3AEg5rKU+TRo9ClSc+p5/onhC81sMbdMIFJ3Nwpx6HvWBMTuwe1ep+NLiS18G3D2rtFlkO2
P5ADvxkY74JFeVyHOM1zRqOpd9DprU1TskROeTUROetSMcg5qOmYgTgVH1qQ9DUdQVEKKKKBPcKK
KKBBRRRQAw9TSUp6mkoNEFFFFABRRRQAUUUUAFFFFABT06UynR96BPYdRRRQQFFFFABRRRQVEcnS
pYx+tRjoKlj7VaE9SQCpAMCmL96pF+9VLchjkX9alA9KYv3qlQc1ZL0FVcdetSKuOTTVGTzUijJp
pXIbBV3U8CinoOM1ewhQMdKKKVBk80yZMeBgU9BgfWmqMnmnjrT3JHoOPrUoGBTE+9Ui/eqiGxVX
HJqRB3ptLuOKBDi2KaTu604KKYetADZO1Np79KZQAxupqJjwalPU1EehqWVEhk7U2nSdqbUmkSKT
kVC/3qlk7VE/3qh7lojbqahfpUsneon6Ui0MPQ1HUh6Go6hloYxy1JSt940lIYx/vUlK3U0lC1AK
KKKTA//Z

------MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://fonts.googleapis.com/css?family=Open+Sans:400,700

@charset "utf-8";

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem8YaGs126MiZpBA-UFWJ=
0bbck.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B=
4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem8YaGs126MiZpBA-UFUZ=
0bbck.woff2") format("woff2"); unicode-range: U+400-45F, U+490-491, U+4B0-4=
B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem8YaGs126MiZpBA-UFWZ=
0bbck.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem8YaGs126MiZpBA-UFVp=
0bbck.woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem8YaGs126MiZpBA-UFWp=
0bbck.woff2") format("woff2"); unicode-range: U+102-103, U+110-111, U+128-1=
29, U+168-169, U+1A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem8YaGs126MiZpBA-UFW5=
0bbck.woff2") format("woff2"); unicode-range: U+100-24F, U+259, U+1E00-1EFF=
, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem8YaGs126MiZpBA-UFVZ=
0b.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-=
2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+21=
93, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem5YaGs126MiZpBA-UN7r=
gOX-hpOqc.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U=
+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem5YaGs126MiZpBA-UN7r=
gOVuhpOqc.woff2") format("woff2"); unicode-range: U+400-45F, U+490-491, U+4=
B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem5YaGs126MiZpBA-UN7r=
gOXuhpOqc.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem5YaGs126MiZpBA-UN7r=
gOUehpOqc.woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem5YaGs126MiZpBA-UN7r=
gOXehpOqc.woff2") format("woff2"); unicode-range: U+102-103, U+110-111, U+1=
28-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem5YaGs126MiZpBA-UN7r=
gOXOhpOqc.woff2") format("woff2"); unicode-range: U+100-24F, U+259, U+1E00-=
1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; src: url("https://fonts.gstatic.com/s/opensans/v18/mem5YaGs126MiZpBA-UN7r=
gOUuhp.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+=
2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, =
U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://rss.di.fc.ul.pt/tryit/static/codemirror/lib/codemirror.css

@charset "utf-8";

.CodeMirror { font-family: monospace; display: flex; flex: 1 1 0%; box-shad=
ow: rgb(247, 247, 247) 3px 0px 0px 0px inset; color: black; overflow: auto;=
 }

.CodeMirror-lines { padding: 4px 0px; }

.CodeMirror pre { padding: 0px 4px; }

.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler { background-color:=
 rgb(247, 247, 247); border: 1px solid rgb(221, 221, 221); }

.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); backgroun=
d-color: rgb(247, 247, 247); white-space: nowrap; }

.CodeMirror-linenumbers { }

.CodeMirror-linenumber { padding: 0px 3px 0px 5px; min-width: 20px; text-al=
ign: right; color: rgb(153, 153, 153); white-space: nowrap; }

.CodeMirror-guttermarker { color: black; }

.CodeMirror-guttermarker-subtle { color: rgb(153, 153, 153); }

.CodeMirror div.CodeMirror-cursor { border-left: 1px solid black; }

.CodeMirror div.CodeMirror-secondarycursor { border-left: 1px solid silver;=
 }

.CodeMirror.cm-fat-cursor div.CodeMirror-cursor { width: auto; border: 0px;=
 background: rgb(119, 238, 119); }

.CodeMirror.cm-fat-cursor div.CodeMirror-cursors { z-index: 1; }

.cm-animate-fat-cursor { width: auto; border: 0px; animation: 1.06s steps(1=
) 0s infinite normal none running blink; }

@-webkit-keyframes blink {=20
  0% { background: rgb(119, 238, 119); }
  50% { background: none; }
  100% { background: rgb(119, 238, 119); }
}

@keyframes blink {=20
  0% { background: rgb(119, 238, 119); }
  50% { background: none; }
  100% { background: rgb(119, 238, 119); }
}

div.CodeMirror-overwrite div.CodeMirror-cursor { }

.cm-tab { display: inline-block; text-decoration: inherit; }

.CodeMirror-ruler { border-left: 1px solid rgb(204, 204, 204); position: ab=
solute; }

.cm-s-default .cm-header { color: blue; }

.cm-s-default .cm-quote { color: rgb(0, 153, 0); }

.cm-negative { color: rgb(221, 68, 68); }

.cm-positive { color: rgb(34, 153, 34); }

.cm-header, .cm-strong { font-weight: bold; }

.cm-em { font-style: italic; }

.cm-link { text-decoration: underline; }

.cm-strikethrough { text-decoration: line-through; }

.cm-s-default .cm-keyword { color: rgb(119, 0, 136); }

.cm-s-default .cm-atom { color: rgb(34, 17, 153); }

.cm-s-default .cm-number { color: rgb(17, 102, 68); }

.cm-s-default .cm-def { color: rgb(0, 0, 255); }

.cm-s-default .cm-variable, .cm-s-default .cm-punctuation, .cm-s-default .c=
m-property, .cm-s-default .cm-operator { }

.cm-s-default .cm-variable-2 { color: rgb(0, 85, 170); }

.cm-s-default .cm-variable-3 { color: rgb(0, 136, 85); }

.cm-s-default .cm-comment { color: rgb(170, 85, 0); }

.cm-s-default .cm-string { color: rgb(170, 17, 17); }

.cm-s-default .cm-string-2 { color: rgb(255, 85, 0); }

.cm-s-default .cm-meta { color: rgb(85, 85, 85); }

.cm-s-default .cm-qualifier { color: rgb(85, 85, 85); }

.cm-s-default .cm-builtin { color: rgb(51, 0, 170); }

.cm-s-default .cm-bracket { color: rgb(153, 153, 119); }

.cm-s-default .cm-tag { color: rgb(17, 119, 0); }

.cm-s-default .cm-attribute { color: rgb(0, 0, 204); }

.cm-s-default .cm-hr { color: rgb(153, 153, 153); }

.cm-s-default .cm-link { color: rgb(0, 0, 204); }

.cm-s-default .cm-error { color: rgb(255, 0, 0); }

.cm-invalidchar { color: rgb(255, 0, 0); }

.CodeMirror-composing { border-bottom: 2px solid; }

div.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }

div.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34)=
; }

.CodeMirror-matchingtag { background: rgba(255, 150, 0, 0.3); }

.CodeMirror-activeline-background { background: rgb(232, 242, 255); }

.CodeMirror { position: relative; overflow: hidden; background: white; min-=
height: 0px; min-width: 0px; }

.CodeMirror-scroll { margin-bottom: -30px; margin-right: -30px; padding-bot=
tom: 30px; flex: 1 1 0%; min-height: 0px; min-width: 0px; outline: none; po=
sition: relative; overflow: scroll !important; }

.CodeMirror-sizer { position: relative; border-right: 30px solid transparen=
t; }

.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-fille=
r, .CodeMirror-gutter-filler { position: absolute; z-index: 6; display: non=
e; }

.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden scroll; }

.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: scroll hidden; }

.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }

.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }

.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; z-index: 3; =
}

.CodeMirror-gutter { white-space: normal; height: 100%; display: inline-blo=
ck; margin-bottom: -30px; }

.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; height: 100%; =
}

.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }

.CodeMirror-gutter-wrapper { user-select: none; }

.CodeMirror-lines { cursor: text; min-height: 1px; }

.CodeMirror pre { border-radius: 0px; border-width: 0px; background: transp=
arent; font-family: inherit; font-size: inherit; margin: 0px; white-space: =
pre; overflow-wrap: normal; line-height: inherit; color: inherit; z-index: =
2; position: relative; overflow: visible; -webkit-tap-highlight-color: tran=
sparent; }

.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; wo=
rd-break: normal; }

.CodeMirror-linebackground { position: absolute; inset: 0px; z-index: 0; }

.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }

.CodeMirror-widget { }

.CodeMirror-code { outline: none; }

.CodeMirror-scroll, .CodeMirror-sizer, .CodeMirror-gutter, .CodeMirror-gutt=
ers, .CodeMirror-linenumber { box-sizing: content-box; }

.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflo=
w: hidden; visibility: hidden; }

.CodeMirror-measure pre { position: static; }

.CodeMirror div.CodeMirror-cursor { position: absolute; border-right: none;=
 width: 0px; }

div.CodeMirror-cursors { visibility: hidden; position: relative; z-index: 3=
; }

.CodeMirror-focused div.CodeMirror-cursors { visibility: visible; }

.CodeMirror-selected { background: rgb(217, 217, 217); }

.CodeMirror-focused .CodeMirror-selected { background: rgb(215, 212, 240); =
}

.CodeMirror-crosshair { cursor: crosshair; }

.CodeMirror ::selection { background: rgb(215, 212, 240); }

.cm-searching { background: rgba(255, 255, 0, 0.4); }

.CodeMirror span { }

.cm-force-border { padding-right: 0.1px; }

@media print {
  .CodeMirror div.CodeMirror-cursors { visibility: hidden; }
}

.cm-tab-wrap-hack::after { content: ""; }

span.CodeMirror-selectedtext { background: none; }
------MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://rss.di.fc.ul.pt/tryit/static/codemirror/theme/neat.css

@charset "utf-8";

.cm-s-neat span.cm-comment { color: rgb(170, 136, 102); }

.cm-s-neat span.cm-keyword { line-height: 1em; font-weight: bold; color: bl=
ue; }

.cm-s-neat span.cm-string { color: rgb(170, 34, 34); }

.cm-s-neat span.cm-builtin { line-height: 1em; font-weight: bold; color: rg=
b(0, 119, 119); }

.cm-s-neat span.cm-special { line-height: 1em; font-weight: bold; color: rg=
b(0, 170, 170); }

.cm-s-neat span.cm-variable { color: black; }

.cm-s-neat span.cm-number, .cm-s-neat span.cm-atom { color: rgb(51, 170, 51=
); }

.cm-s-neat span.cm-meta { color: rgb(85, 85, 85); }

.cm-s-neat span.cm-link { color: rgb(51, 170, 51); }

.cm-s-neat .CodeMirror-activeline-background { background: rgb(232, 242, 25=
5) !important; }

.cm-s-neat .CodeMirror-matchingbracket { outline: grey solid 1px; color: bl=
ack !important; }

.CodeMirror-selected { background: rgb(179, 212, 252); }

.CodeMirror-focused .CodeMirror-selected { background: rgb(179, 212, 252); =
}

.CodeMirror-crosshair { cursor: crosshair; }

.CodeMirror ::selection { background: rgb(179, 212, 252); }
------MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://rss.di.fc.ul.pt/tryit/static/css/prism.css

@charset "utf-8";

code[class*=3D"language-"], pre[class*=3D"language-"] { color: black; font-=
family: Consolas, Monaco, "Andale Mono", monospace; direction: ltr; text-al=
ign: left; line-height: 1.5; tab-size: 4; hyphens: none; }

pre[class*=3D"language-"]::selection, pre[class*=3D"language-"] ::selection=
, code[class*=3D"language-"]::selection, code[class*=3D"language-"] ::selec=
tion { text-shadow: none; background: rgb(179, 212, 252); }

@media print {
  code[class*=3D"language-"], pre[class*=3D"language-"] { text-shadow: none=
; }
}

pre[class*=3D"language-"] { padding: 1em; margin: 0px; overflow: auto; bord=
er-radius: 0px; }

:not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backgro=
und: rgb(255, 255, 255); }

:not(pre) > code[class*=3D"language-"] { padding: 0.1em; border-radius: 0.3=
em; overflow-wrap: break-word; }

.token.comment, .token.prolog, .token.doctype, .token.cdata { color: rgb(17=
0, 136, 102); }

.token.punctuation { color: rgb(153, 153, 153); }

.namespace { opacity: 0.7; }

.token.property, .token.tag, .token.boolean, .token.number, .token.constant=
, .token.symbol, .token.deleted { color: rgb(51, 170, 51); }

.token.selector, .token.attr-name, .token.string, .token.char, .token.built=
in, .token.inserted { color: rgb(170, 34, 34); }

.token.operator, .token.entity, .token.url, .language-css .token.string, .s=
tyle .token.string { color: rgb(0, 119, 119); }

.token.atrule, .token.attr-value, .token.keyword { font-weight: bold; color=
: blue; }

.token.function { color: black; }

.token.regex, .token.important, .token.variable { color: black; }

.token.important, .token.bold { font-weight: bold; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }
------MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://rss.di.fc.ul.pt/tryit/static/css/prism-line-numbers.css

@charset "utf-8";

pre.line-numbers { position: relative; padding-left: 3.8em; counter-reset: =
linenumber 0; }

pre.line-numbers > code { position: relative; }

.line-numbers .line-numbers-rows { position: absolute; pointer-events: none=
; top: -2px; font-size: 100%; left: -3.8em; width: 3em; letter-spacing: -1p=
x; border-right: 1px solid rgb(153, 153, 153); user-select: none; }

.line-numbers-rows > span { pointer-events: none; display: block; counter-i=
ncrement: linenumber 1; }

.line-numbers-rows > span::before { content: counter(linenumber); color: rg=
b(153, 153, 153); display: block; padding-right: 0.8em; text-align: right; }
------MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://rss.di.fc.ul.pt/tryit/static/css/tool.css

@charset "utf-8";

html { width: 100%; height: 100%; }

body { padding: 0px; margin-bottom: 0px; width: 100%; height: 100%; overflo=
w: hidden; }

textarea { resize: none; outline: none; }

pre { border: none; background: none; padding: 0px; margin: 0px; }

#body-wrapper { width: 100%; height: 100%; display: flex; flex-flow: column=
 nowrap; }

#wrapper-row { flex: 1 1 0%; display: flex; min-height: 0px; }

.jumbotron { padding-top: 0px; padding-bottom: 0px; margin-bottom: 0px; }

#backdrop { background-position: center 30%; }

.column { flex: 1 1 0%; display: flex; min-height: 0px; flex-flow: column n=
owrap; overflow-x: auto; }

.scroll-area { min-height: 0px; flex: 1 1 0%; overflow: auto; }

#tutorial { padding: 20px; }

.splitter { flex-shrink: 0; z-index: 2; width: 6px; text-align: center; bac=
kground: darkslategray; transition: background 0.2s ease 0s; }

.tab-area { box-shadow: rgb(19, 106, 138) 0px -2px 0px inset; margin: 0px; =
padding: 0px; flex-shrink: 0; background: -webkit-linear-gradient(top, rgb(=
19, 106, 138) 10%, rgb(38, 120, 113) 90%); }

.tab-area ul { display: block; list-style: none; padding: 0px; margin: 0px;=
 }

.tab-area li { margin: 0px; padding: 0px; }

.tab { display: block; float: left; text-decoration: none; background: rgba=
(255, 255, 255, 0.5); padding: 5px 20px; margin: 5px 5px 0px 0px; transitio=
n: background 0.2s ease 0s; box-shadow: rgb(19, 106, 138) 0px -2px 0px inse=
t; color: black; }

.tab:visited { text-decoration: none; }

.tab:hover { background: rgba(255, 255, 255, 0.75); text-decoration: none; =
}

.tab:focus { text-decoration: none; }

.tab:active { text-decoration: none; }

.active-tab { box-shadow: rgb(255, 255, 255) 0px 0px 0px inset; background:=
 white; }

.active-tab:hover { background: white; }

.button-area { border-top: 1px solid rgb(221, 221, 221); flex-shrink: 0; di=
splay: inline-block; float: left; width: 100%; padding-right: 2px; margin-t=
op: 0px; background: rgb(247, 247, 247); z-index: 1; }

.button { box-shadow: rgba(0, 210, 252, 0.5) 0px 0px 0px; border: 1px solid=
 rgb(221, 221, 221); display: block; float: right; padding: 2px 10px; margi=
n-top: 2px; margin-bottom: 2px; margin-left: 2px; border-radius: 2px; color=
: black; cursor: pointer; background: rgba(255, 255, 255, 0.75); }

.button:hover { transition: all 0.2s ease 0s; box-shadow: rgba(0, 210, 252,=
 0.5) 0px 0px 4px; }

.button-label { font-size: small; padding-left: 4px; padding-right: 4px; }

.glyphicon { padding-left: 4px; font-size: smaller; padding-right: 4px; }

#editor-area { display: flex; flex: 2 1 0%; overflow: auto; margin-bottom: =
0px; }

.code-area { border: none; padding: 4px 4px 4px 34px; margin: 0px; box-shad=
ow: rgb(247, 247, 247) 30px 0px 0px inset; }

#code-editor { overflow-y: auto; }

#terminal { border-top: 1px solid rgb(221, 221, 221); padding: 10px; backgr=
ound: rgb(33, 42, 47); color: rgb(107, 136, 152); font-family: monospace; }

.example { overflow: auto; white-space: nowrap; border-top: 1px solid rgb(2=
21, 221, 221); border-bottom: 1px solid rgb(221, 221, 221); display: -webki=
t-flex; min-width: 0px; flex-flow: column nowrap; margin: 20px -20px; }

.code-part { min-width: 0px; }

.no-wrapping { min-width: 0px; }

#terminal-content { border: none; border-radius: 0px; background: none; col=
or: rgb(107, 136, 152); }

#examples { padding: 20px 20px 40px; }

#examples ul { list-style: none; margin-left: -20px; margin-right: -20px; p=
adding-left: 0px; }

#tutorial img { width: 100%; height: auto; }

.example-link { float: left; width: 100%; display: block; padding-top: 10px=
; padding-bottom: 10px; padding-left: 20px; color: rgb(51, 122, 183); }

.example-link:hover { background-color: rgb(238, 246, 255); text-decoration=
: none; color: rgb(35, 82, 124); cursor: pointer; }
------MultipartBoundary--VsnpYE9YlLDaaCYIVakSVbrHFQoNxPvqm2wY0bstvB------
