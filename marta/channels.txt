data WorldList = Nil | Tile Int Bool WorldList

type PointChannel : SL =
	+{ Point : !Int; !Int; PointChannel
      }

type WorldChannel : SL = 
	+{ Tile: 0 True; 
  	}

type Channel : SL =
	+{ Play : !Int; WorldChannel; ?Int
      , Add: !Int; !Int; ?Int
    }

client : Channel -> Int
client c =
	let (w, _) = receive $ send 0 $ select World $ send 1 $ select Play c in w

server : dualof Channel -> ()
server c =
	match c with {
      Play c ->
      let (i, c) = receive c in
      match c with {
        World c ->
        	let (w, c) = receive c in 
            let _ = send(w) c in ()       
      }
      , Add c -> 
      let (n1, c) = receive c in
      let (n2, c) = receive c in
      let _ = send (n1 + n2) c in ()
    }

main : Int
main =
  let (c, s) = new Channel in
  fork (server s);
  client c
